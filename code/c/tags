!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.6	//
ABS	.\src\GlobalTypes.h	612;"	d
ACCEPT	.\src\Utils.c	932;"	d	file:
ADDLINE	.\src\MapIcon.c	332;"	d	file:
ADDLINE	.\src\MapIcon.c	451;"	d	file:
ADT2_SECTION	.\src\Constants.h	82;"	d
ADT3_SECTION	.\src\Constants.h	83;"	d
ADT_SECTION	.\src\Constants.h	81;"	d
AIDialBitmap	.\src\ResourceDefines.h	445;"	d
AIErrThrow	.\src\AIGauge.c	35;"	d	file:
AIGAUGE_H_INCLUDED	.\src\AIGauge.h	6;"	d
AIGaugeDeInit	.\src\AIGauge.c	/^void AIGaugeDeInit(void) {$/;"	f
AIGaugeDraw	.\src\AIGauge.c	/^void AIGaugeDraw(Coord gaugeX, Coord gaugeY, double roll, double pitch) {$/;"	f
AIGaugeInit	.\src\AIGauge.c	/^Err AIGaugeInit(Coord *radius){$/;"	f
AIGaugeModuleID	.\src\Modules.h	43;"	d
AIGaugeUpdate	.\src\MainForm.c	/^static void AIGaugeUpdate(void) {$/;"	f	file:
AIRadius	.\src\MainForm.c	/^static Coord AIRadius;$/;"	v	file:
AI_SECTION	.\src\Constants.h	61;"	d
ALARM_MANAGER_H_INCLUDED	.\src\AlarmManager.h	7;"	d
ALARM_MANAGER_SECTION	.\src\Constants.h	79;"	d
ALIGNCENTRE	.\src\Utils.h	10;"	d
ALIGNLEFT	.\src\Utils.h	8;"	d
ALIGNRIGHT	.\src\Utils.h	9;"	d
ALPHAPAD_H_INCLUDED	.\src\AlphaPadDialog.h	7;"	d
ALT_TO_IDX	.\src\TerrainType.c	98;"	d	file:
APPNAME	.\src\Constants.h	14;"	d
APPNAME	.\src\Constants.h	24;"	d
ASDB_INCLUDED	.\src\AsDatabase.h	9;"	d
ASDB_SECTION	.\src\Constants.h	64;"	d
ATZ_POINTS	.\src\MapIcon.c	55;"	d	file:
ATZ_STEP	.\src\MapIcon.c	56;"	d	file:
AVCALCS_SECTION	.\src\Constants.h	70;"	d
AboutBox	.\src\ResourceDefines.h	401;"	d
AckAlarm	.\src\AlarmManager.c	/^static Boolean AckAlarm(Int16 alarmID) {$/;"	f	file:
AddAirspace	.\src\MapManager.c	/^static Boolean AddAirspace(MapType map, UInt32 maxTicks) {$/;"	f	file:
AddIntToRecord	.\src\AsDatabase.c	/^static void AddIntToRecord(DmOpenRef db, UInt16 recNum, UInt16 val) {$/;"	f	file:
AddProxIcons	.\src\MapManager.c	/^static void AddProxIcons(MapType map) {$/;"	f	file:
AddRoute	.\src\MapManager.c	/^static void AddRoute(MapType map) {$/;"	f	file:
AddTrackLog	.\src\MapManager.c	/^static Boolean AddTrackLog(MapType map, UInt32 maxTicks) {$/;"	f	file:
AddTrackSegment	.\src\MapManager.c	/^Boolean AddTrackSegment(MapType map, WinLineType *wl, Coord x1, Coord y1, Coord x2, Coord y2) {$/;"	f
AircraftBitmaps	.\src\ResourceDefines.h	442;"	d
AirspaceClassType	.\src\AsDatabase.h	/^typedef UInt16 AirspaceClassType;$/;"	t
AirspaceDBType	.\src\AsDatabase.c	/^} AirspaceDBType;$/;"	t	typeref:struct:__anon14	file:
AirspaceDatabaseType	.\src\Constants.h	41;"	d
AirspaceIDType	.\src\AsDatabase.h	/^typedef UInt16 AirspaceIDType;$/;"	t
AirspaceModuleID	.\src\Modules.h	19;"	d
AirspaceType	.\src\AsDatabase.h	/^} AirspaceType;$/;"	t	typeref:struct:__anon18
AlarmGetMaxLevel	.\src\AlarmManager.c	/^AlarmLevelType AlarmGetMaxLevel(void) {$/;"	f
AlarmGetMostUrgent	.\src\AlarmManager.c	/^const char *AlarmGetMostUrgent(void) {$/;"	f
AlarmLevelType	.\src\AlarmManager.h	/^} AlarmLevelType;$/;"	t	typeref:enum:__anon12
AlarmManagerModuleID	.\src\Modules.h	27;"	d
AlarmPurgeAll	.\src\AlarmManager.c	/^void AlarmPurgeAll(void) {$/;"	f
AlarmSetCondition	.\src\AlarmManager.c	/^void AlarmSetCondition(MessageDialogDataType *md, AlarmLevelType level) {$/;"	f
AlarmShow	.\src\AlarmManager.c	/^Boolean AlarmShow(void) {$/;"	f
AlphaPad0	.\src\ResourceDefines.h	293;"	d
AlphaPadA	.\src\ResourceDefines.h	292;"	d
AlphaPadBS	.\src\ResourceDefines.h	296;"	d
AlphaPadCancel	.\src\ResourceDefines.h	298;"	d
AlphaPadClear	.\src\ResourceDefines.h	300;"	d
AlphaPadDash	.\src\ResourceDefines.h	294;"	d
AlphaPadDialog	.\src\ResourceDefines.h	291;"	d
AlphaPadDialogHandleEvent	.\src\AlphaPadDialog.c	/^Boolean AlphaPadDialogHandleEvent(EventPtr event) {$/;"	f
AlphaPadDialogInit	.\src\AlphaPadDialog.c	/^void AlphaPadDialogInit(char *initialValue) {$/;"	f
AlphaPadDialogModuleID	.\src\Modules.h	37;"	d
AlphaPadField	.\src\ResourceDefines.h	299;"	d
AlphaPadGetInput	.\src\AlphaPadDialog.c	/^char *AlphaPadGetInput(void) {$/;"	f
AlphaPadOK	.\src\ResourceDefines.h	297;"	d
AlphaPadSpace	.\src\ResourceDefines.h	295;"	d
AltField	.\src\ResourceDefines.h	76;"	d
AltReferenceType	.\src\AsDatabase.h	/^} AltReferenceType;$/;"	t	typeref:enum:__anon15
AlternatePlan	.\FMLangStrings.c	/^const char *AlternatePlan = "Load Alternate Plan";$/;"	v
AlternatePlan	.\src\FMStrings.c	/^const char *AlternatePlan = "_Load Alternate Plan";$/;"	v
AltitudeCallback	.\src\MapDialog.c	/^static Boolean AltitudeCallback(UInt16 button, float value) {$/;"	f	file:
AltitudeCallback	.\src\VNAVDialog.c	/^static Boolean AltitudeCallback(UInt16 button, float value) {$/;"	f	file:
AppColourPrefs	.\src\Main.c	/^AppColourPrefsType AppColourPrefs;$/;"	v
AppColourPrefsType	.\src\GlobalTypes.h	/^} AppColourPrefsType;$/;"	t	typeref:struct:__anon51
AppEventLoop	.\extsrc\Collapse.cpp	/^static void AppEventLoop(void)$/;"	f	file:
AppEventLoop	.\src\Main.c	/^static void AppEventLoop(void) {$/;"	f	file:
AppHandleEvent	.\extsrc\Collapse.cpp	/^static Boolean AppHandleEvent(EventPtr eventP)$/;"	f	file:
AppHandleEvent	.\src\Main.c	/^static Boolean AppHandleEvent(EventPtr event)$/;"	f	file:
AppHandleKeyEvent	.\src\Main.c	/^static Boolean AppHandleKeyEvent(EventPtr event) {$/;"	f	file:
AppStart	.\extsrc\Collapse.cpp	/^static Err AppStart(void)$/;"	f	file:
AppStart	.\src\Main.c	/^static Err AppStart(Boolean launchedFromCoPilot) {$/;"	f	file:
AppStop	.\extsrc\Collapse.cpp	/^static void AppStop(void)$/;"	f	file:
AppStop	.\src\Main.c	/^static void AppStop(void)$/;"	f	file:
AppType	.\src\CpInterface.c	55;"	d	file:
AppUnitTests	.\src\Main.c	/^static void AppUnitTests(void)  {$/;"	f	file:
ApplyTransform	.\src\MapManager.c	/^static Boolean ApplyTransform(Coord xi, Coord yi, Coord *xr, Coord *yr) {$/;"	f	file:
ArcSegmentType	.\src\AsDatabase.h	/^} ArcSegmentType;$/;"	t	typeref:struct:__anon17
AsCloseDatabase	.\src\AsDatabase.c	/^void AsCloseDatabase(void) {$/;"	f
AsDecodeAltitude	.\src\AsDatabase.c	/^void AsDecodeAltitude(char *str, Int32 *altFeet,  UInt16 altUnits, AltReferenceType ref, UInt16 alt) {$/;"	f
AsGetAirspace	.\src\AsDatabase.c	/^AirspaceType *AsGetAirspace(AirspaceIDType id) {$/;"	f
AsGetDatabaseInfo	.\src\AsDatabase.c	/^MemPtr AsGetDatabaseInfo(void) {$/;"	f
AsImport	.\src\AsDatabase.c	/^Boolean AsImport(Int16 dbNumber, void(*cb)(const char *)) {$/;"	f
AsImportDB	.\src\AsDatabase.c	/^static Boolean AsImportDB(PFFileRef f, const char *dbname, UInt32 dbType, void (*cb)(const char *)) {$/;"	f	file:
AsImportFailedAlert	.\src\ResourceDefines.h	425;"	d
AsOpenDatabase	.\src\AsDatabase.c	/^Boolean AsOpenDatabase(void) {$/;"	f
AsSearchDB	.\src\AsDatabase.c	/^static Int16 AsSearchDB(Int16 dbnum, Int16 lat1, Int16 lon1, Int16 lat3, Int16 lon3,$/;"	f	file:
AsSearchDatabase	.\src\AsDatabase.c	/^Int16 AsSearchDatabase(Int16 lat1, Int16 lon1, Int16 lat3, Int16 lon3,$/;"	f
AtzPlotInit	.\src\MapIcon.c	/^static void AtzPlotInit(Coord radius) {$/;"	f	file:
AutoStartGPSCheckbox	.\src\ResourceDefines.h	207;"	d
AvCalcGreatCircleCourse	.\src\AvCalcs.c	/^double AvCalcGreatCircleCourse(double lat1, double lon1,$/;"	f
AvCalcGreatCircleRange	.\src\AvCalcs.c	/^double AvCalcGreatCircleRange(double lat1, double lon1, $/;"	f
AvCalcMagVarn	.\src\AvCalcs.c	/^float AvCalcMagVarn(double lat, double lon, float altitude, Int16 year) {     $/;"	f
AvCalcOffTrackError	.\src\AvCalcs.c	/^double AvCalcOffTrackError(double crsAB, double crsAD, double d) {$/;"	f
AvCalcRhumbLine	.\src\AvCalcs.c	/^void AvCalcRhumbLine(double lat1, double lon1,$/;"	f
AvCalcShiftPoint	.\src\AvCalcs.c	/^void AvCalcShiftPoint(double *lat, double *lon, double bearing, double range) {$/;"	f
BAUD_SWITCH_TIMEOUT	.\src\Gps.c	49;"	d	file:
BITVAL	.\src\AsDatabase.c	790;"	d	file:
BOTTOM	.\src\Utils.c	927;"	d	file:
BaudRate	.\src\Gps.c	/^} BaudRate;$/;"	t	typeref:enum:__anon63	file:
BetaCreatorID	.\src\Constants.h	17;"	d
BetaCreatorID	.\src\Constants.h	29;"	d
Blanks	.\src\Main.c	/^const char *Blanks[] = { "", " ", "  ","   ","    " };$/;"	v
BluetoothAlert	.\src\ResourceDefines.h	415;"	d
BoundaryAddLine	.\src\MapAirspace.c	82;"	d	file:
BoundaryDrawLine	.\src\MapAirspace.c	78;"	d	file:
BoundarySetCursor	.\src\MapAirspace.c	76;"	d	file:
ByCallback	.\src\VNAVDialog.c	/^static Boolean ByCallback(UInt16 button, float value) {$/;"	f	file:
CDCRSButton	.\src\ResourceDefines.h	353;"	d
CDCloseButton	.\src\ResourceDefines.h	362;"	d
CDCoPilotButton	.\src\ResourceDefines.h	354;"	d
CDCurrentForm	.\src\CommandDialog.c	/^static UInt16 CDCurrentForm;$/;"	v	file:
CDDayNightButton	.\src\ResourceDefines.h	364;"	d
CDDivButton	.\src\ResourceDefines.h	349;"	d
CDEnrAppButton	.\src\ResourceDefines.h	351;"	d
CDFunction1	.\src\ResourceDefines.h	367;"	d
CDFunction2	.\src\ResourceDefines.h	368;"	d
CDFunction3	.\src\ResourceDefines.h	369;"	d
CDFunction4	.\src\ResourceDefines.h	370;"	d
CDFunction5	.\src\ResourceDefines.h	371;"	d
CDFunction6	.\src\ResourceDefines.h	372;"	d
CDFunction7	.\src\ResourceDefines.h	373;"	d
CDFunction8	.\src\ResourceDefines.h	374;"	d
CDGPSButton	.\src\ResourceDefines.h	350;"	d
CDMapButton	.\src\ResourceDefines.h	358;"	d
CDMapConfigButton	.\src\ResourceDefines.h	357;"	d
CDMonitorButton	.\src\ResourceDefines.h	365;"	d
CDNavButton	.\src\ResourceDefines.h	347;"	d
CDNextWaypointButton	.\src\ResourceDefines.h	359;"	d
CDPlanButton	.\src\ResourceDefines.h	348;"	d
CDPrevWaypointButton	.\src\ResourceDefines.h	360;"	d
CDResumeButton	.\src\ResourceDefines.h	356;"	d
CDTimerButton	.\src\ResourceDefines.h	366;"	d
CDUndoButton	.\src\ResourceDefines.h	361;"	d
CDVNAVButton	.\src\ResourceDefines.h	363;"	d
CDWPButton	.\src\ResourceDefines.h	352;"	d
CDWPInfoButton	.\src\ResourceDefines.h	355;"	d
COFF_LINES	.\src\AvCalcs.c	152;"	d	file:
COFF_LINES	.\src\MagVarn.c	7;"	d	file:
COLLAPSE_UTILS_H	.\extsrc\CollapseUtils.h	3;"	d
COLOURS_H_INCLUDED	.\src\Colours.h	7;"	d
COMMAND_H_INCLUDED	.\src\CommandDialog.h	7;"	d
CONSTANTS_H	.\src\Constants.h	2;"	d
CONV_WCTC	.\src\TerrainType.c	82;"	d	file:
COSINEZERO	.\src\Utils.h	119;"	d
CPINTERFACE_H_INCLUDED	.\src\CpInterface.h	11;"	d
CPINTERFACE_SECTION	.\src\Constants.h	54;"	d
CP_UNITS	.\src\GlobalTypes.h	29;"	d
CTRACE	.\src\Logging.h	100;"	d
CTRACE	.\src\Logging.h	90;"	d
CalcMagVarn	.\src\MagVarn.c	/^static float CalcMagVarn(double lat, double lon, float altitude, Int16 year) {     $/;"	f	file:
CancelButton	.\src\ResourceDefines.h	141;"	d
CancelDiversion	.\FMLangStrings.c	/^const char *CancelDiversion = "Restore flight plan from %s? (All edits will be lost)";$/;"	v
CancelDiversion	.\src\FMStrings.c	/^const char *CancelDiversion = "_Restore flight plan from %s? (All edits will be lost)";$/;"	v
CancelString	.\FMLangStrings.c	/^const char *CancelString = "Cancel";$/;"	v
CancelString	.\src\FMStrings.c	/^const char *CancelString = "_Cancel";$/;"	v
CardIndexDatabaseType	.\src\CpInterface.c	64;"	d	file:
CardInputAlert	.\src\ResourceDefines.h	416;"	d
CheckAndDrawMessageFlag	.\src\Main.c	/^static void CheckAndDrawMessageFlag(void) {$/;"	f	file:
CheckDimensions	.\src\MorePreferencesDialog.c	/^Boolean CheckDimensions(FormPtr frm, UInt16 *length, UInt16 *width) {$/;"	f
CheckForLongPress	.\src\Platform.c	/^static WChar CheckForLongPress(WChar key) {$/;"	f	file:
CheckIndex	.\src\WDManager.c	/^static Boolean CheckIndex(DatabaseType *db) {$/;"	f	file:
ChooseBluetoothDevice	.\src\Gps.c	/^static Boolean ChooseBluetoothDevice(BtLibDeviceAddressType *btID) {$/;"	f	file:
Cleanup	.\src\Platform.c	/^static Err Cleanup(SysNotifyParamType* notifyParamsP) {$/;"	f	file:
ClearAlarm	.\src\AlarmManager.c	/^static void ClearAlarm(Int16 num) {$/;"	f	file:
ClipLine16	.\src\Utils.c	/^Boolean ClipLine16(Coord *x1, Coord *y1, Coord *x2, Coord *y2, Coord minx, Coord miny, Coord maxx, Coord maxy) {$/;"	f
ClipLine32	.\src\Utils.c	/^Boolean ClipLine32(Int32 *x1, Int32 *y1, Int32 *x2, Int32 *y2, Int32 minx, Int32 miny, Int32 maxx, Int32 maxy) {$/;"	f
ClippedOutCode16	.\src\Utils.c	/^static UInt8 ClippedOutCode16(Coord x, Coord y, Coord minx, Coord miny, Coord maxx, Coord maxy) {$/;"	f	file:
ClippedOutCode32	.\src\Utils.c	/^static UInt8 ClippedOutCode32(Int32 x, Int32 y, Int32 minx, Int32 miny, Int32 maxx, Int32 maxy) {$/;"	f	file:
CloseDatabase	.\src\AsDatabase.c	/^static void CloseDatabase(AirspaceDBType *db) {$/;"	f	file:
CoPilotCreatorID	.\src\CpInterface.h	19;"	d
CoPilotCreatorID	.\src\CpInterface.h	21;"	d
CoPilotExternalDBName	.\src\CpInterface.h	27;"	d
CoPilotModuleID	.\src\Modules.c	11;"	d	file:
CoPilotModuleID	.\src\Modules.h	10;"	d
CoPilotUserWaypointType	.\src\CpInterface.h	25;"	d
CoPilotWaypointType	.\src\CpInterface.h	24;"	d
CoPilotWaypointsAlert	.\src\ResourceDefines.h	424;"	d
CoffData	.\src\AvCalcs.c	/^} CoffData;$/;"	t	typeref:struct:__anon19	file:
CoffData	.\src\MagVarn.c	/^} CoffData;$/;"	t	typeref:struct:__anon73	file:
CollapseAppStart	.\extsrc\CollapseUtils.c	/^void CollapseAppStart()$/;"	f
CollapseAppStart	.\extsrc\CollapseUtilsSony.cpp	/^void CollapseAppStart()$/;"	f
CollapseAppStop	.\extsrc\CollapseUtils.c	/^void CollapseAppStop()$/;"	f
CollapseAppStop	.\extsrc\CollapseUtilsSony.cpp	/^void CollapseAppStop()$/;"	f
CollapseCheckForPin10NeedToRedraw	.\extsrc\CollapseUtils.c	/^Boolean CollapseCheckForPin10NeedToRedraw()$/;"	f
CollapseCheckForPin10NeedToRedraw	.\extsrc\CollapseUtilsSony.cpp	/^Boolean CollapseCheckForPin10NeedToRedraw()$/;"	f
CollapseCheckWinEnterEvent	.\extsrc\CollapseUtils.c	/^void CollapseCheckWinEnterEvent(EventType* eventP)$/;"	f
CollapseCheckWinEnterEvent	.\extsrc\CollapseUtilsSony.cpp	/^void CollapseCheckWinEnterEvent(EventType* eventP)$/;"	f
CollapseDisplayResizedEventCallback	.\extsrc\CollapseUtils.c	/^Err CollapseDisplayResizedEventCallback( SysNotifyParamType *notifyParamsP )$/;"	f
CollapseDisplayResizedEventCallback	.\extsrc\CollapseUtilsSony.cpp	/^Err CollapseDisplayResizedEventCallback( SysNotifyParamType *notifyParamsP )$/;"	f
CollapseGetAPIVersion	.\extsrc\CollapseUtils.c	/^Int32 CollapseGetAPIVersion()$/;"	f
CollapseGetAPIVersion	.\extsrc\CollapseUtilsSony.cpp	/^Int32 CollapseGetAPIVersion()$/;"	f
CollapseHorizontallyCenterAllUI	.\extsrc\CollapseUtils.c	/^void CollapseHorizontallyCenterAllUI(FormType* frmP, Int16 offsetCoordsX)$/;"	f
CollapseHorizontallyCenterAllUI	.\extsrc\CollapseUtilsSony.cpp	/^void CollapseHorizontallyCenterAllUI(FormType* frmP, Int16 offsetCoordsX)$/;"	f
CollapseMoveFormBitmapObject	.\extsrc\CollapseUtils.c	/^void CollapseMoveFormBitmapObject(FormType* frmP, UInt16 objectID, $/;"	f
CollapseMoveFormBitmapObject	.\extsrc\CollapseUtilsSony.cpp	/^void CollapseMoveFormBitmapObject(FormType* frmP, UInt16 objectID, $/;"	f
CollapseMoveGSI	.\extsrc\CollapseUtils.c	/^void CollapseMoveGSI(FormType* frmP, Int16 moveOffsetCoordsX, Int16 moveOffsetCoordsY)$/;"	f
CollapseMoveGSI	.\extsrc\CollapseUtilsSony.cpp	/^void CollapseMoveGSI(FormType* frmP, Int16 moveOffsetCoordsX, Int16 moveOffsetCoordsY)$/;"	f
CollapseMoveResizeDialog	.\extsrc\CollapseUtils.c	/^Boolean CollapseMoveResizeDialog(FormType* frmP, Boolean isModal, Int16* returnOffsetX, Int16* returnOffsetY)$/;"	f
CollapseMoveResizeDialog	.\extsrc\CollapseUtilsSony.cpp	/^Boolean CollapseMoveResizeDialog(FormType* frmP, Boolean isModal, Int16* returnOffsetX, Int16* returnOffsetY)$/;"	f
CollapseMoveResizeFormObject	.\extsrc\CollapseUtils.c	/^void CollapseMoveResizeFormObject(FormType* frmP, UInt16 objectID, $/;"	f
CollapseMoveResizeFormObject	.\extsrc\CollapseUtilsSony.cpp	/^void CollapseMoveResizeFormObject(FormType* frmP, UInt16 objectID, $/;"	f
CollapseResizeForm	.\extsrc\CollapseUtils.c	/^Boolean CollapseResizeForm(FormType *frmP, Boolean isModal, Boolean moveForm, $/;"	f
CollapseResizeForm	.\extsrc\CollapseUtilsSony.cpp	/^Boolean CollapseResizeForm(FormType *frmP, Boolean isModal, Int16* returnOffsetX, Int16* returnOffsetY)$/;"	f
CollapseSetState	.\extsrc\CollapseUtils.c	/^void CollapseSetState(FormType* frmP, UInt8 newState)$/;"	f
CollapseSetState	.\extsrc\CollapseUtilsSony.cpp	/^void CollapseSetState(FormType* frmP, UInt8 newState)$/;"	f
CollapseSetTriggerStates	.\extsrc\CollapseUtils.c	/^UInt16 CollapseSetTriggerStates(UInt16 newState)$/;"	f
CollapseSetTriggerStates	.\extsrc\CollapseUtilsSony.cpp	/^UInt16 CollapseSetTriggerStates(UInt16 newState)$/;"	f
ColoursModuleID	.\src\Modules.h	38;"	d
ColoursSetDay	.\src\Colours.c	/^void ColoursSetDay(AppColourPrefsType *ap) {$/;"	f
ColoursSetNight	.\src\Colours.c	/^void ColoursSetNight(AppColourPrefsType *ap) {$/;"	f
CommandDialog	.\src\ResourceDefines.h	346;"	d
CommandDialogHandleEvent	.\src\CommandDialog.c	/^Boolean CommandDialogHandleEvent(EventPtr event)$/;"	f
CommandDialogInit	.\src\CommandDialog.c	/^void CommandDialogInit(void) {$/;"	f
CompassText	.\src\Main.c	/^const char *CompassText[] = { "N", "NNE", "NE", "ENE", $/;"	v
ConfirmDeleteDialogue	.\src\ResourceDefines.h	394;"	d
ConfirmImportAlert	.\src\ResourceDefines.h	426;"	d
CopilotNotFoundAlert	.\src\ResourceDefines.h	400;"	d
CpAirwayType	.\src\CpInterface.c	/^typedef enum {airw, sid, star, approach} CpAirwayType;$/;"	t	typeref:enum:__anon24	file:
CpClose	.\src\CpInterface.c	/^void CpClose(void){$/;"	f
CpGetActiveFlightNum	.\src\CpInterface.c	/^UInt16 CpGetActiveFlightNum(void){$/;"	f
CpGetAirportFrequencies	.\src\CpInterface.c	/^const char *CpGetAirportFrequencies(const Waypoint *wp) {$/;"	f
CpGetFlightDescription	.\src\CpInterface.c	/^char *CpGetFlightDescription(UInt16 flightNum){ $/;"	f
CpGetNavFrequency	.\src\CpInterface.c	/^char *CpGetNavFrequency(const Waypoint *wp) {$/;"	f
CpGetNumSegments	.\src\CpInterface.c	/^Int16 CpGetNumSegments(void) { return numSegments; }$/;"	f
CpGetPlanID	.\src\CpInterface.c	/^UInt16 CpGetPlanID(void) { return planID; }$/;"	f
CpGetRunwayInfo	.\src\CpInterface.c	/^CpRunwayInfoType *CpGetRunwayInfo(const char *notes, Int16 *count) {$/;"	f
CpGetSegmentNum	.\src\CpInterface.c	/^Int16 CpGetSegmentNum(void) { return loadedSegment; }$/;"	f
CpGetUnitPreferences	.\src\CpInterface.c	/^void CpGetUnitPreferences(DisplayUnitsType *du){$/;"	f
CpGetValidFlights	.\src\CpInterface.c	/^void CpGetValidFlights(UInt16 maxResults, UInt16 *total, UInt16 *resultPtr) {$/;"	f
CpImportFlight	.\src\CpInterface.c	/^Boolean CpImportFlight(UInt16 flightNum, FlightPlanType fp, UInt16 segment, Boolean alternate) {$/;"	f
CpInitialise	.\src\CpInterface.c	/^void CpInitialise(void){ $/;"	f
CpIsAlternateAvailable	.\src\CpInterface.c	/^Boolean CpIsAlternateAvailable(void) { return alternateAvailable; }$/;"	f
CpIsAlternateLoaded	.\src\CpInterface.c	/^Boolean CpIsAlternateLoaded(void) { return alternateLoaded; }$/;"	f
CpIsInstalled	.\src\CpInterface.c	/^Boolean CpIsInstalled(void) {$/;"	f
CpLaunchCoPilot	.\src\CpInterface.c	/^void CpLaunchCoPilot(void) {$/;"	f
CpLegWaypoint	.\src\CpInterface.c	/^}CpLegWaypoint ;$/;"	t	typeref:struct:__anon27	file:
CpPreferences	.\src\CpInterface.c	/^} CpPreferences;$/;"	t	typeref:struct:__anon30	file:
CpPushButton	.\src\ResourceDefines.h	204;"	d
CpRecordType	.\src\CpInterface.c	/^	CpRecordType;$/;"	t	typeref:enum:__anon21	file:
CpRunwayInfoType	.\src\CpInterface.h	/^} CpRunwayInfoType;$/;"	t	typeref:struct:__anon31
CpWaypointType	.\src\CpInterface.c	/^typedef enum {system,user} CpWaypointType;$/;"	t	typeref:enum:__anon22	file:
CreateIndex	.\src\WDManager.c	/^static Boolean CreateIndex(WDMHandle ds, DatabaseType *db, Int16 (*f)(Int16)) {$/;"	f	file:
CreateWindowFromBitmap	.\src\Utils.c	/^WinHandle CreateWindowFromBitmap(UInt16 bitmapId, Coord *width, Coord *height) {$/;"	f
CycleCounter	.\src\Main.c	/^Int32 CycleCounter = 0;$/;"	v
DBHANDLER_SECTION	.\src\Constants.h	57;"	d
DEG_MAGVAR_GPS	.\src\GlobalTypes.h	618;"	d
DEG_MAGVAR_WP	.\src\GlobalTypes.h	617;"	d
DEG_PER_RAD	.\src\GlobalTypes.h	406;"	d
DEG_TO_INT16	.\src\GlobalTypes.h	420;"	d
DEG_TO_INT32	.\src\GlobalTypes.h	421;"	d
DEG_TO_RAD	.\src\GlobalTypes.h	413;"	d
DEMO_LIMIT	.\src\Gps.h	31;"	d
DIVERSIONFORM_H_INCLUDED	.\src\DiversionForm.h	2;"	d
DIVERSIONMGR_H_INCLUDED	.\src\DiversionMgr.h	16;"	d
DIVERSIONMGR_SECTION	.\src\Constants.h	77;"	d
DIVERSION_SECTION	.\src\Constants.h	62;"	d
DO_NOT_ALLOW_ACCESS_TO_INTERNALS_OF_STRUCTS	.\src\AIGauge.c	7;"	d	file:
DO_NOT_ALLOW_ACCESS_TO_INTERNALS_OF_STRUCTS	.\src\AlphaPadDialog.c	7;"	d	file:
DO_NOT_ALLOW_ACCESS_TO_INTERNALS_OF_STRUCTS	.\src\CommandDialog.c	7;"	d	file:
DO_NOT_ALLOW_ACCESS_TO_INTERNALS_OF_STRUCTS	.\src\CpInterface.c	12;"	d	file:
DO_NOT_ALLOW_ACCESS_TO_INTERNALS_OF_STRUCTS	.\src\DiversionForm.c	8;"	d	file:
DO_NOT_ALLOW_ACCESS_TO_INTERNALS_OF_STRUCTS	.\src\DiversionMgr.c	9;"	d	file:
DO_NOT_ALLOW_ACCESS_TO_INTERNALS_OF_STRUCTS	.\src\EditWaypointForm.c	9;"	d	file:
DO_NOT_ALLOW_ACCESS_TO_INTERNALS_OF_STRUCTS	.\src\FlightPlanForm.c	10;"	d	file:
DO_NOT_ALLOW_ACCESS_TO_INTERNALS_OF_STRUCTS	.\src\GPSForm.c	8;"	d	file:
DO_NOT_ALLOW_ACCESS_TO_INTERNALS_OF_STRUCTS	.\src\HeadingIndicator.c	7;"	d	file:
DO_NOT_ALLOW_ACCESS_TO_INTERNALS_OF_STRUCTS	.\src\KeypadDialog.c	7;"	d	file:
DO_NOT_ALLOW_ACCESS_TO_INTERNALS_OF_STRUCTS	.\src\Main.c	11;"	d	file:
DO_NOT_ALLOW_ACCESS_TO_INTERNALS_OF_STRUCTS	.\src\MainForm.c	9;"	d	file:
DO_NOT_ALLOW_ACCESS_TO_INTERNALS_OF_STRUCTS	.\src\MapForm.c	25;"	d	file:
DO_NOT_ALLOW_ACCESS_TO_INTERNALS_OF_STRUCTS	.\src\MessageDialog.c	7;"	d	file:
DO_NOT_ALLOW_ACCESS_TO_INTERNALS_OF_STRUCTS	.\src\MonitorDialog.c	7;"	d	file:
DO_NOT_ALLOW_ACCESS_TO_INTERNALS_OF_STRUCTS	.\src\MorePreferencesDialog.c	7;"	d	file:
DO_NOT_ALLOW_ACCESS_TO_INTERNALS_OF_STRUCTS	.\src\PreferencesDialog.c	8;"	d	file:
DO_NOT_ALLOW_ACCESS_TO_INTERNALS_OF_STRUCTS	.\src\SelectCopilotFlightDialog.c	6;"	d	file:
DO_NOT_ALLOW_ACCESS_TO_INTERNALS_OF_STRUCTS	.\src\SimulationDialog.c	8;"	d	file:
DO_NOT_ALLOW_ACCESS_TO_INTERNALS_OF_STRUCTS	.\src\TextDialog.c	8;"	d	file:
DO_NOT_ALLOW_ACCESS_TO_INTERNALS_OF_STRUCTS	.\src\TimerForm.c	8;"	d	file:
DO_NOT_ALLOW_ACCESS_TO_INTERNALS_OF_STRUCTS	.\src\Upgrades.c	11;"	d	file:
DO_NOT_ALLOW_ACCESS_TO_INTERNALS_OF_STRUCTS	.\src\Utils.c	10;"	d	file:
DO_NOT_ALLOW_ACCESS_TO_INTERNALS_OF_STRUCTS	.\src\VNAVDialog.c	5;"	d	file:
DO_NOT_ALLOW_ACCESS_TO_INTERNALS_OF_STRUCTS	.\src\WPInfoDialog.c	8;"	d	file:
DRAWFUNC	.\src\Utils.c	248;"	d	file:
DUMP_INT16	.\src\Logging.h	101;"	d
DUMP_INT16	.\src\Logging.h	86;"	d
DUMP_INT32	.\src\Logging.h	102;"	d
DUMP_INT32	.\src\Logging.h	87;"	d
DUMP_STR	.\src\Logging.h	103;"	d
DUMP_STR	.\src\Logging.h	88;"	d
Dashes	.\src\Main.c	/^const char *Dashes[] = { "", "-", "--","---","----" };$/;"	v
DataInputAlert	.\src\ResourceDefines.h	395;"	d
DatabaseExists	.\src\Utils.c	/^Boolean DatabaseExists(UInt32 type, UInt32 creator, UInt16 version) {$/;"	f
DatabaseScanResultsAlert	.\src\ResourceDefines.h	412;"	d
DatabaseType	.\src\WDManager.c	/^} DatabaseType;$/;"	t	typeref:struct:__anon105	file:
DbHandlerModuleID	.\src\Modules.c	12;"	d	file:
DbHandlerModuleID	.\src\Modules.h	11;"	d
DecodeGGA	.\src\Gps.c	/^static Boolean DecodeGGA(char *gga) {$/;"	f	file:
DecodeGPSMsg	.\src\Gps.c	/^static GPSMessageType DecodeGPSMsg(char *startOfMsg) {$/;"	f	file:
DecodeGSA	.\src\Gps.c	/^static void DecodeGSA(char *gsaMsg) {$/;"	f	file:
DecodeGSV	.\src\Gps.c	/^static Boolean DecodeGSV(char *gsvMsg) {$/;"	f	file:
DecodePMGNST	.\src\Gps.c	/^static void DecodePMGNST(char *stMsg) {$/;"	f	file:
DecodeRMC	.\src\Gps.c	/^static Boolean DecodeRMC(char *rmc) {$/;"	f	file:
DeinitForm	.\src\SelectCopilotFlightDialog.c	/^static void DeinitForm(FormPtr form) {$/;"	f	file:
DeleteButton	.\src\ResourceDefines.h	142;"	d
DemoDateLimit	.\src\Main.c	/^UInt32 DemoDateLimit = 0xFFFFFFFF;$/;"	v
DemoExpiredAlert	.\src\ResourceDefines.h	427;"	d
DemoLeftAlert	.\src\ResourceDefines.h	428;"	d
DescriptionField	.\src\ResourceDefines.h	139;"	d
DialBitmap	.\src\ResourceDefines.h	441;"	d
DialogHandleEvent	.\extsrc\Collapse.cpp	/^static Boolean DialogHandleEvent(EventPtr eventP)$/;"	f	file:
DialogPartialHandleEvent	.\extsrc\Collapse.cpp	/^static Boolean DialogPartialHandleEvent(EventPtr eventP)$/;"	f	file:
DisclaimerAlert	.\src\ResourceDefines.h	402;"	d
DisplayUnits	.\src\Main.c	/^DisplayUnitsType   DisplayUnits;$/;"	v
DisplayUnitsType	.\src\GlobalTypes.h	/^} DisplayUnitsType;$/;"	t	typeref:struct:__anon54
DiversionForm	.\src\ResourceDefines.h	278;"	d
DiversionFormDeInit	.\src\DiversionForm.c	/^static void DiversionFormDeInit(FormPtr form) $/;"	f	file:
DiversionFormHandleEvent	.\src\DiversionForm.c	/^Boolean DiversionFormHandleEvent(EventPtr event)$/;"	f
DiversionFormInit	.\src\DiversionForm.c	/^static void DiversionFormInit(FormPtr form) {$/;"	f	file:
DiversionFormModuleID	.\src\Modules.c	13;"	d	file:
DiversionFormModuleID	.\src\Modules.h	12;"	d
DiversionMenu	.\src\ResourceDefines.h	9;"	d
DiversionMgrModuleID	.\src\Modules.h	41;"	d
DiversionType	.\src\GlobalTypes.h	/^typedef enum { divNone=0, divActive, divEmergency } DiversionType;$/;"	t	typeref:enum:__anon60
DoObstacleScan	.\src\Main.c	/^static void DoObstacleScan(void) {$/;"	f	file:
Double2FP	.\src\Fixed.h	74;"	d
DoubleToStr	.\src\Utils.c	/^char *DoubleToStr(double d,UInt16 dp) {$/;"	f
DrawAirspaceFilters	.\src\MapDialog.c	/^static void DrawAirspaceFilters() {$/;"	f	file:
DrawAlarmBanner	.\src\Main.c	/^static void DrawAlarmBanner(void) {$/;"	f	file:
DrawAlignedChars	.\src\Utils.c	/^Coord DrawAlignedChars(const char *text, UInt8 align, Coord x,Coord y) {$/;"	f
DrawCircle	.\src\Utils.c	/^WinLineType *DrawCircle(Coord cx, Coord cy, Coord r, Int16 *numLines) {$/;"	f
DrawFilterOverlay	.\src\MapDialog.c	/^static void DrawFilterOverlay(Int16 buttonNumber) {$/;"	f	file:
DrawFilterOverlays	.\src\MapDialog.c	/^static void DrawFilterOverlays(void) {$/;"	f	file:
DrawFlag	.\src\Utils.c	/^void DrawFlag(const PointType *pos, const char *str, IndexedColorType colour)  {$/;"	f
DrawFlightDataDisplay	.\src\MapForm.c	/^static void DrawFlightDataDisplay(Boolean full) {$/;"	f	file:
DrawHeadingArc	.\src\MapForm.c	/^static void DrawHeadingArc(Int16 heading, Coord xc, Coord yc) {$/;"	f	file:
DrawHeadingDisc	.\src\HeadingIndicator.c	/^static void DrawHeadingDisc(HSIType hsi, Int16 heading, Int16 bearing)  {$/;"	f	file:
DrawIcons	.\src\MapManager.c	/^static void DrawIcons(MapType map, MapIconType *icons, Int16 numIcons, Coord ax, Coord ay, Int32 obstacleThreshold) {$/;"	f	file:
DrawLargeNumberSmallText	.\src\Utils.c	/^Coord DrawLargeNumberSmallText(const char *num, const char *txt, Coord x, $/;"	f
DrawLegListItem	.\src\FlightPlanForm.c	/^static void DrawLegListItem(Int16 itemNum, RectangleType *bounds, Char **text) {$/;"	f	file:
DrawLines2d	.\src\Utils.c	/^void DrawLines2d(WinLineType *lines, Int16 numLines, IndexedColorType colour, Boolean dashed) {$/;"	f
DrawOneFlight	.\src\SelectCopilotFlightDialog.c	/^static void DrawOneFlight(Int16 itemNum, RectangleType *bounds, $/;"	f	file:
DrawOneLine	.\src\WPInfoDialog.c	/^static void DrawOneLine(Int16 itemNum, RectangleType *bounds, char **text) {$/;"	f	file:
DrawOutlineChars	.\src\Utils.c	/^Coord DrawOutlineChars(const char *str, UInt8 align, Coord x1, Coord y1) {$/;"	f
DrawPointer	.\src\HeadingIndicator.c	/^static void DrawPointer(HSIType hsi, Int16 course, float trkError, float maxTrkError) {$/;"	f	file:
DrawPolygon	.\src\Polygon.c	/^void DrawPolygon(PolyPointType *pnts, Int16 n) {$/;"	f
DrawRunways	.\src\MapIcon.c	/^static void DrawRunways(MapIconType *i, Waypoint *wp, Coord ix, Coord iy, Int16 rotation) {$/;"	f	file:
DrawSelectionBox	.\src\MapForm.c	/^static void DrawSelectionBox(void) {$/;"	f	file:
DrawWaypoint	.\src\DiversionForm.c	/^static void DrawWaypoint(UInt16 listNum) {$/;"	f	file:
DrawWaypointId	.\src\MainForm.c	/^static void DrawWaypointId(Boolean inverted) {$/;"	f	file:
DvAirfieldPushbutton	.\src\ResourceDefines.h	282;"	d
DvAnyPushbutton	.\src\ResourceDefines.h	286;"	d
DvEmergencyDiversion	.\src\DiversionMgr.c	/^Boolean DvEmergencyDiversion(void) {$/;"	f
DvIdentCheckbox	.\src\ResourceDefines.h	281;"	d
DvIntPushbutton	.\src\ResourceDefines.h	285;"	d
DvItemHeight	.\src\ResourceDefines.h	276;"	d
DvItemListLeft	.\src\ResourceDefines.h	275;"	d
DvItemListTop	.\src\ResourceDefines.h	274;"	d
DvItemWidth	.\src\ResourceDefines.h	277;"	d
DvNDBPushbutton	.\src\ResourceDefines.h	284;"	d
DvPushbuttonGroup	.\src\ResourceDefines.h	287;"	d
DvScrollbar	.\src\ResourceDefines.h	280;"	d
DvSearchStr	.\src\ResourceDefines.h	279;"	d
DvVORPushbutton	.\src\ResourceDefines.h	283;"	d
E0000	.\src\AvCalcs.c	/^static void E0000(int IENTRY,int *maxdeg, float alt,float glat,float glon,float time,$/;"	f	file:
E0000	.\src\MagVarn.c	/^static void E0000(int IENTRY,int *maxdeg, float alt,float glat,float glon,float time,$/;"	f	file:
EDITWAYPOINTFORM_H	.\src\EditWaypointForm.h	2;"	d
EDITWAYPOINT_SECTION	.\src\Constants.h	67;"	d
ERROR_CHECK_LEVEL	.\src\AIGauge.c	10;"	d	file:
ERROR_CHECK_LEVEL	.\src\AlphaPadDialog.c	10;"	d	file:
ERROR_CHECK_LEVEL	.\src\CommandDialog.c	10;"	d	file:
ERROR_CHECK_LEVEL	.\src\CpInterface.c	15;"	d	file:
ERROR_CHECK_LEVEL	.\src\DiversionForm.c	11;"	d	file:
ERROR_CHECK_LEVEL	.\src\DiversionMgr.c	12;"	d	file:
ERROR_CHECK_LEVEL	.\src\EditWaypointForm.c	12;"	d	file:
ERROR_CHECK_LEVEL	.\src\FlightPlanForm.c	13;"	d	file:
ERROR_CHECK_LEVEL	.\src\GPSForm.c	11;"	d	file:
ERROR_CHECK_LEVEL	.\src\HeadingIndicator.c	10;"	d	file:
ERROR_CHECK_LEVEL	.\src\KeypadDialog.c	10;"	d	file:
ERROR_CHECK_LEVEL	.\src\Main.c	14;"	d	file:
ERROR_CHECK_LEVEL	.\src\MainForm.c	12;"	d	file:
ERROR_CHECK_LEVEL	.\src\MapForm.c	28;"	d	file:
ERROR_CHECK_LEVEL	.\src\MessageDialog.c	10;"	d	file:
ERROR_CHECK_LEVEL	.\src\MonitorDialog.c	10;"	d	file:
ERROR_CHECK_LEVEL	.\src\MorePreferencesDialog.c	10;"	d	file:
ERROR_CHECK_LEVEL	.\src\PreferencesDialog.c	11;"	d	file:
ERROR_CHECK_LEVEL	.\src\SelectCopilotFlightDialog.c	9;"	d	file:
ERROR_CHECK_LEVEL	.\src\SimulationDialog.c	11;"	d	file:
ERROR_CHECK_LEVEL	.\src\TextDialog.c	11;"	d	file:
ERROR_CHECK_LEVEL	.\src\TimerForm.c	11;"	d	file:
ERROR_CHECK_LEVEL	.\src\Upgrades.c	14;"	d	file:
ERROR_CHECK_LEVEL	.\src\Utils.c	13;"	d	file:
ERROR_CHECK_LEVEL	.\src\VNAVDialog.c	8;"	d	file:
ERROR_CHECK_LEVEL	.\src\WPInfoDialog.c	11;"	d	file:
ERR_CANT_INIT_FORM	.\src\GlobalTypes.h	388;"	d
ERR_GPS_INVALID_MSGID	.\src\Gps.h	20;"	d
ERR_GPS_MSG_NOT_DECODED	.\src\Gps.c	48;"	d	file:
ERR_GPS_NOT_INIT	.\src\Gps.h	22;"	d
ERR_GPS_NO_BLUETOOTH	.\src\Gps.h	27;"	d
ERR_GPS_NO_CARD	.\src\Gps.h	28;"	d
ERR_GPS_NO_GARMIN	.\src\Gps.h	29;"	d
ERR_GPS_NO_SUCH_SOURCE	.\src\Gps.h	26;"	d
ERR_GPS_OUT_OF_DATE	.\src\Gps.h	25;"	d
ERR_GPS_PORT_LOCKED	.\src\Gps.h	21;"	d
ERR_GPS_RETRY_REQD	.\src\Gps.h	23;"	d
ERR_GPS_TIMEOUT	.\src\Gps.h	24;"	d
ERR_INVALID_FORM_LOAD_EVENT	.\src\GlobalTypes.h	389;"	d
ERR_MATHLIB_CLOSE_ERROR	.\src\GlobalTypes.h	391;"	d
ERR_MATHLIB_NOT_FOUND	.\src\GlobalTypes.h	392;"	d
ERR_MEM_ALLOC_ERROR	.\src\GlobalTypes.h	390;"	d
ETAReadout	.\src\ResourceDefines.h	63;"	d
EastPushButton	.\src\ResourceDefines.h	147;"	d
EditWaypointForm	.\src\ResourceDefines.h	132;"	d
EditWaypointFormDeinit	.\src\EditWaypointForm.c	/^static void EditWaypointFormDeinit(void)$/;"	f	file:
EditWaypointFormHandleEvent	.\src\EditWaypointForm.c	/^Boolean EditWaypointFormHandleEvent(EventPtr event)$/;"	f
EditWaypointFormHelpString	.\src\ResourceDefines.h	438;"	d
EditWaypointFormInit	.\src\EditWaypointForm.c	/^static void EditWaypointFormInit(FormPtr form)$/;"	f	file:
EditWaypointFormModuleID	.\src\Modules.c	14;"	d	file:
EditWaypointFormModuleID	.\src\Modules.h	13;"	d
EditWaypointFormSetup	.\src\EditWaypointForm.c	/^void EditWaypointFormSetup(const Waypoint *inWp, Boolean(*cb)(Boolean validate, const Waypoint *wp, UInt16 size, Boolean deleted)) {$/;"	f
EmergencyDiversionForm	.\src\ResourceDefines.h	289;"	d
EmergencyDivertFailedAlert	.\src\ResourceDefines.h	420;"	d
EnableCopilotAlert	.\src\ResourceDefines.h	403;"	d
EndianSwap16	.\src\Utils.h	245;"	d
EndianSwap32	.\src\Utils.h	247;"	d
ErrExtra	.\src\Platform.c	/^char ErrExtra[128] = " " ;	\/\/ extra error info from ErrThrows$/;"	v
EwErrThrow	.\src\EditWaypointForm.c	60;"	d	file:
ExitAlert	.\src\ResourceDefines.h	414;"	d
ExtraAirfieldInfoType	.\src\MapIcon.h	/^} ExtraAirfieldInfoType;$/;"	t	typeref:struct:__anon82
ExtraIconInfoType	.\src\MapIcon.h	/^} ExtraIconInfoType;$/;"	t	typeref:union:__anon84
ExtraNavaidInfoType	.\src\MapIcon.h	/^} ExtraNavaidInfoType;$/;"	t	typeref:struct:__anon83
FALSE	.\src\TerrainType.c	23;"	d	file:
FEET_PER_METRE	.\src\GlobalTypes.h	401;"	d
FEET_PER_NM	.\src\GlobalTypes.h	402;"	d
FEET_TO_NM	.\src\GlobalTypes.h	409;"	d
FEET_UNITS	.\src\GlobalTypes.h	31;"	d
FILEROOT	.\src\Constants.h	15;"	d
FILEROOT	.\src\Constants.h	25;"	d
FIRST_AIRSPACE_BUTTON	.\src\MapDialog.c	38;"	d	file:
FLIGHTDATABASE_H_INCLUDED	.\src\FlightDatabase.h	7;"	d
FLIGHTPLANFORM_H	.\src\FlightPlanForm.h	2;"	d
FLIGHTPLAN_H_INCLUDED	.\src\FlightPlan.h	10;"	d
FLIGHTPLAN_SECTION	.\src\Constants.h	65;"	d
FLIGHT_SEEK	.\src\FlightDatabase.c	29;"	d	file:
FMCreatorID	.\src\Platform.c	/^const UInt32 FMCreatorID = 'BHMN';$/;"	v
FMDBType	.\src\Platform.c	/^const UInt32 FMDBType = 'FMDB';$/;"	v
FMDS	.\src\Main.c	/^FMDataset FMDS;$/;"	v
FMDataset	.\src\GlobalTypes.h	/^} FMDataset;$/;"	t	typeref:struct:__anon45
FMPreferencesType	.\src\GlobalTypes.h	/^typedef FMPreferencesType_v7_2  FMPreferencesType;$/;"	t
FMPreferencesType_v7_2	.\src\GlobalTypes.h	/^} FMPreferencesType_v7_2;$/;"	t	typeref:struct:__anon50
FP14	.\src\Fixed.h	/^typedef Int32 FP14;$/;"	t
FP2Double	.\src\Fixed.h	73;"	d
FP2Int	.\src\Fixed.h	72;"	d
FP8FRAC	.\src\TerrainCore.h	21;"	d
FP8INT	.\src\TerrainCore.h	20;"	d
FP8RADIX	.\src\TerrainCore.h	18;"	d
FPAdd	.\src\Fixed.h	62;"	d
FPAltWidth	.\src\ResourceDefines.h	128;"	d
FPAlternateButton	.\src\ResourceDefines.h	117;"	d
FPCoPilotButton	.\src\ResourceDefines.h	109;"	d
FPCos	.\src\Fixed.h	109;"	d
FPCumulativePushButton	.\src\ResourceDefines.h	119;"	d
FPDistWidth	.\src\ResourceDefines.h	130;"	d
FPDiv	.\src\Fixed.h	/^static FP14 FPDiv(FP14 d1, FP14 d2) {$/;"	f
FPDnButton	.\src\ResourceDefines.h	111;"	d
FPETAPushButton	.\src\ResourceDefines.h	121;"	d
FPETEPushButton	.\src\ResourceDefines.h	120;"	d
FPEditButton	.\src\ResourceDefines.h	108;"	d
FPFract	.\src\Fixed.h	93;"	d
FPHalf	.\src\Fixed.h	84;"	d
FPLegList	.\src\ResourceDefines.h	114;"	d
FPLegPushButton	.\src\ResourceDefines.h	118;"	d
FPLegPushButtonGroup	.\src\ResourceDefines.h	124;"	d
FPLegWidth	.\src\ResourceDefines.h	127;"	d
FPList	.\src\ResourceDefines.h	112;"	d
FPMul	.\src\Fixed.h	38;"	d
FPNewButton	.\src\ResourceDefines.h	113;"	d
FPOne	.\src\Fixed.h	82;"	d
FPRoundInt	.\src\Fixed.h	94;"	d
FPSin	.\src\Fixed.h	108;"	d
FPSqrt	.\src\Fixed.h	111;"	d
FPStatusField	.\src\ResourceDefines.h	122;"	d
FPSub	.\src\Fixed.h	63;"	d
FPTimePushButtonGroup	.\src\ResourceDefines.h	125;"	d
FPTotalDistance	.\src\ResourceDefines.h	116;"	d
FPTotalTime	.\src\ResourceDefines.h	115;"	d
FPTrkWidth	.\src\ResourceDefines.h	129;"	d
FPTwo	.\src\Fixed.h	83;"	d
FPUpButton	.\src\ResourceDefines.h	110;"	d
FPZero	.\src\Fixed.h	81;"	d
FP_STACK_SIZE	.\src\FlightPlan.c	65;"	d	file:
FTRACE	.\src\Logging.h	89;"	d
FTRACE	.\src\Logging.h	98;"	d
FivewayPopupBmp	.\src\ResourceDefines.h	468;"	d
FlightDBClose	.\src\FlightDatabase.c	/^void FlightDBClose(void)  {$/;"	f
FlightDBDeleteFlight	.\src\FlightDatabase.c	/^Boolean FlightDBDeleteFlight(Int16 flightNum) {$/;"	f
FlightDBGetFlight	.\src\FlightDatabase.c	/^FlightPlanType FlightDBGetFlight(Int16 flightNum, Boolean alternate) {$/;"	f
FlightDBGetName	.\src\FlightDatabase.c	/^char *FlightDBGetName(Int16 flightNum)  {$/;"	f
FlightDBGetNumRecords	.\src\FlightDatabase.c	/^Int16 FlightDBGetNumRecords(void)  {$/;"	f
FlightDBOpen	.\src\FlightDatabase.c	/^void FlightDBOpen(void)  {$/;"	f
FlightDBSaveFlight	.\src\FlightDatabase.c	/^Boolean FlightDBSaveFlight(const char *name, FlightPlanType flight, FlightPlanType alternate, Boolean overwrite) {$/;"	f
FlightDataDisplayType	.\src\GlobalTypes.h	/^typedef enum { fddOff = 0, fddBasic, fddFull } FlightDataDisplayType;$/;"	t	typeref:enum:__anon44
FlightDataType	.\src\CpInterface.c	53;"	d	file:
FlightDatabaseModuleID	.\src\Modules.h	33;"	d
FlightDeleteAlert	.\src\ResourceDefines.h	431;"	d
FlightDialogHandleEvent	.\src\SelectCopilotFlightDialog.c	/^Boolean FlightDialogHandleEvent(EventPtr event) {$/;"	f
FlightDirectorDraw	.\src\Instruments.c	/^void FlightDirectorDraw(Coord centreX, Coord centreY, Coord spacing) {$/;"	f
FlightExistsAlert	.\src\ResourceDefines.h	430;"	d
FlightListBox	.\src\ResourceDefines.h	172;"	d
FlightMaster	.\src\Main.c	/^Err FlightMaster(Boolean launchedFromCoPilot) {$/;"	f
FlightMasterCreatorId	.\src\Constants.h	16;"	d
FlightMasterCreatorId	.\src\Constants.h	28;"	d
FlightMasterDatabaseType	.\src\Constants.h	40;"	d
FlightPlan	.\src\Main.c	/^FlightPlanType FlightPlan = NULL;$/;"	v
FlightPlanAlert	.\src\ResourceDefines.h	421;"	d
FlightPlanForm	.\src\ResourceDefines.h	107;"	d
FlightPlanFormDeinit	.\src\FlightPlanForm.c	/^static void FlightPlanFormDeinit(FormPtr form)$/;"	f	file:
FlightPlanFormHandleEvent	.\src\FlightPlanForm.c	/^Boolean FlightPlanFormHandleEvent(EventPtr event)$/;"	f
FlightPlanFormInit	.\src\FlightPlanForm.c	/^static void FlightPlanFormInit(FormPtr form) {$/;"	f	file:
FlightPlanFormModuleID	.\src\Modules.h	36;"	d
FlightPlanLegType	.\src\FlightPlan.h	/^} FlightPlanLegType;$/;"	t	typeref:struct:__anon40
FlightPlanLegWaypointType	.\src\FlightPlan.h	/^} FlightPlanLegWaypointType;$/;"	t	typeref:struct:__anon39
FlightPlanMenu	.\src\ResourceDefines.h	7;"	d
FlightPlanModuleID	.\src\Modules.h	20;"	d
FlightPlanName	.\src\GlobalTypes.h	/^	char FlightPlanName[36];$/;"	m	struct:__anon50
FlightPlanStack	.\src\Main.c	/^FlightPlanStackType FlightPlanStack;$/;"	v
FlightPlanStackB	.\src\Main.c	/^FlightPlanStackType FlightPlanStackB;$/;"	v
FlightPlanStackType	.\src\FlightPlan.c	/^struct FlightPlanStackType {$/;"	s	file:
FlightPlanStackType	.\src\FlightPlan.h	/^typedef struct FlightPlanStackType *FlightPlanStackType;$/;"	t	typeref:struct:FlightPlanStackType
FlightPlanType	.\src\FlightPlan.c	/^struct FlightPlanType {$/;"	s	file:
FlightPlanType	.\src\FlightPlan.h	/^typedef struct FlightPlanType *FlightPlanType;$/;"	t	typeref:struct:FlightPlanType
FlightPlanVersionType	.\src\FlightPlan.h	/^typedef enum { minorVersion, majorVersion } FlightPlanVersionType;$/;"	t	typeref:enum:__anon41
FlightStruct	.\src\CpInterface.c	/^}FlightStruct;$/;"	t	typeref:struct:__anon26	file:
FloatToStr	.\src\Utils.c	/^char *FloatToStr(float d,UInt16 dp) {$/;"	f
FormDeinit	.\src\CommandDialog.c	/^static void FormDeinit(void) {$/;"	f	file:
FormDeinit	.\src\SimulationDialog.c	/^static void FormDeinit(void) {$/;"	f	file:
FormDeinit	.\src\TextDialog.c	/^static void FormDeinit(void) {$/;"	f	file:
FormDeinit	.\src\TimerForm.c	/^static void FormDeinit(FormPtr form) {$/;"	f	file:
FormDeinit	.\src\VNAVDialog.c	/^static void FormDeinit(FormPtr frm) {$/;"	f	file:
FormDeinit	.\src\WPInfoDialog.c	/^static void FormDeinit(void) {$/;"	f	file:
FormInit	.\src\CommandDialog.c	/^static void FormInit(FormPtr frm) {$/;"	f	file:
FormInit	.\src\KeypadDialog.c	/^static void FormInit(FormPtr frm) {$/;"	f	file:
FormInit	.\src\MonitorDialog.c	/^static void FormInit(FormPtr frm) {$/;"	f	file:
FormInit	.\src\SimulationDialog.c	/^static void FormInit(FormPtr frm) {$/;"	f	file:
FormInit	.\src\TextDialog.c	/^static void FormInit(FormPtr frm) {$/;"	f	file:
FormInit	.\src\TimerForm.c	/^static void FormInit(FormPtr form) $/;"	f	file:
FormInit	.\src\VNAVDialog.c	/^static void FormInit(FormPtr frm) {$/;"	f	file:
FormInit	.\src\WPInfoDialog.c	/^static void FormInit(FormPtr frm) {$/;"	f	file:
FormSaveValues	.\src\MonitorDialog.c	/^static void FormSaveValues(FormPtr frm) {$/;"	f	file:
FpAppendWaypoint	.\src\FlightPlan.c	/^Boolean FpAppendWaypoint(FlightPlanType fp, Int32 lat, Int32 lon, const char *ident, float magVar, float altitude) {$/;"	f
FpClearVNAV	.\src\FlightPlan.c	/^void FpClearVNAV(const FlightPlanType fp, Int16 leg) {$/;"	f
FpCopy	.\src\FlightPlan.c	/^void FpCopy(FlightPlanType dest, FlightPlanType src) {$/;"	f
FpDeleteLeg	.\src\FlightPlan.c	/^Boolean FpDeleteLeg(FlightPlanType fp, Int16 legNum) {$/;"	f
FpDeleteWaypoint	.\src\FlightPlan.c	/^Boolean FpDeleteWaypoint(FlightPlanType fp, Int16 wpNum) {$/;"	f
FpFindWaypoint	.\src\FlightPlan.c	/^Int16 FpFindWaypoint(FlightPlanType fp, Int32 lat, Int32 lon) {$/;"	f
FpFree	.\src\FlightPlan.c	/^void FpFree(FlightPlanType fp) {$/;"	f
FpGetCurrentLeg	.\src\FlightPlan.c	/^Int16 FpGetCurrentLeg(const FlightPlanType fp) { return fp->currentLeg; }$/;"	f
FpGetFromWaypoint	.\src\FlightPlan.c	/^const FlightPlanLegWaypointType *FpGetFromWaypoint(const FlightPlanType fp, Int16 leg) {$/;"	f
FpGetLeg	.\src\FlightPlan.c	/^const FlightPlanLegType *FpGetLeg(const FlightPlanType fp, Int16 leg, $/;"	f
FpGetNumLegs	.\src\FlightPlan.c	/^Int16 FpGetNumLegs(const FlightPlanType fp) { return fp->numLegs; }$/;"	f
FpGetToWaypoint	.\src\FlightPlan.c	/^const FlightPlanLegWaypointType *FpGetToWaypoint(const FlightPlanType fp, Int16 leg) {$/;"	f
FpGetVNAV	.\src\FlightPlan.c	/^const VNAVDataType *FpGetVNAV(FlightPlanType fp, Int16 leg) {$/;"	f
FpGetVersion	.\src\FlightPlan.c	/^Int16 FpGetVersion(const FlightPlanType fp, FlightPlanVersionType fpv) {$/;"	f
FpGetWaypoint	.\src\FlightPlan.c	/^const FlightPlanLegWaypointType *FpGetWaypoint(const FlightPlanType fp, Int16 wpNum) {$/;"	f
FpInit	.\src\FlightPlan.c	/^void FpInit(FlightPlanType fp) {$/;"	f
FpInsertWaypoint	.\src\FlightPlan.c	/^Boolean FpInsertWaypoint(FlightPlanType fp, Int16 leg, Int32 lat, Int32 lon, const char *ident, float magVar) {$/;"	f
FpIsBlank	.\src\FlightPlan.c	/^Boolean FpIsBlank(const FlightPlanType fp) { return (fp->numLegs < 1); }$/;"	f
FpLegWaypointNew	.\src\FlightPlan.c	/^FlightPlanLegWaypointType *FpLegWaypointNew(Int32 lat, Int32 lon, const char *ident, float magVar) {$/;"	f
FpLoadFromFile	.\src\FlightPlan.c	/^Int32 FpLoadFromFile(FlightPlanType f, PFFileRef file) {$/;"	f
FpNew	.\src\FlightPlan.c	/^FlightPlanType FpNew(void) {$/;"	f
FpNextLeg	.\src\FlightPlan.c	/^Boolean FpNextLeg(FlightPlanType fp) {$/;"	f
FpPreviousLeg	.\src\FlightPlan.c	/^Boolean FpPreviousLeg(FlightPlanType fp) {$/;"	f
FpSaveToFile	.\src\FlightPlan.c	/^Int32 FpSaveToFile(FlightPlanType f, PFFileRef file) {$/;"	f
FpSetCurrentLeg	.\src\FlightPlan.c	/^void FpSetCurrentLeg(FlightPlanType fp, Int16 leg) {$/;"	f
FpSetNewFirstLeg	.\src\FlightPlan.c	/^void FpSetNewFirstLeg(FlightPlanType fp, Int32 fromLat, Int32 fromLon, const char *fromIdent, float fromMagVar,$/;"	f
FpSetVNAV	.\src\FlightPlan.c	/^void FpSetVNAV(FlightPlanType fp, Int16 leg, const VNAVDataType *vd) {$/;"	f
FpSizeOf	.\src\FlightPlan.c	/^const UInt32 FpSizeOf(void) {$/;"	f
FpStackFree	.\src\FlightPlan.c	/^void FpStackFree(FlightPlanStackType fs) {$/;"	f
FpStackLoad	.\src\FlightPlan.c	/^Boolean FpStackLoad(FlightPlanStackType fs, const char *filename) {$/;"	f
FpStackNew	.\src\FlightPlan.c	/^FlightPlanStackType FpStackNew(void) { $/;"	f
FpStackPeek	.\src\FlightPlan.c	/^FlightPlanType FpStackPeek(FlightPlanStackType fs, Int16 num) {$/;"	f
FpStackPop	.\src\FlightPlan.c	/^FlightPlanType FpStackPop(FlightPlanStackType fs) {$/;"	f
FpStackPush	.\src\FlightPlan.c	/^Boolean FpStackPush(FlightPlanStackType fs, FlightPlanType fp) {$/;"	f
FpStackSave	.\src\FlightPlan.c	/^Boolean FpStackSave(FlightPlanStackType fs, const char *filename) {$/;"	f
FpVNAVIsSet	.\src\FlightPlan.c	/^Boolean FpVNAVIsSet(FlightPlanType fp, Int16 leg) {$/;"	f
FromFlag	.\src\MainForm.c	157;"	d	file:
FunctionKeymapType	.\src\GlobalTypes.h	/^} FunctionKeymapType;$/;"	t	typeref:struct:__anon58
GLOBAL_TYPES_H_INCLUDED	.\src\GlobalTypes.h	7;"	d
GPS	.\src\Main.c	/^GPSType        GPS;$/;"	v
GPSAltCallback	.\src\VNAVDialog.c	/^static Boolean GPSAltCallback(UInt16 button, float value) {$/;"	f	file:
GPSBattLevelData	.\src\Gps.h	/^} GPSBattLevelData;$/;"	t	typeref:struct:__anon69
GPSClose	.\src\Gps.c	/^void GPSClose(void){$/;"	f
GPSCoordsToText	.\src\Gps.c	/^void GPSCoordsToText(double lat, double lon, char *north, char *east) {$/;"	f
GPSDutyType	.\src\Gps.h	/^} GPSDutyType;$/;"	t	typeref:enum:__anon71
GPSFORM_H	.\src\GPSForm.h	2;"	d
GPSFORM_SECTION	.\src\Constants.h	69;"	d
GPSFix2dString	.\FMLangStrings.c	/^const char *GPSFix2dString = "GPS Fix 2D";$/;"	v
GPSFix2dString	.\src\FMStrings.c	/^const char *GPSFix2dString = "_GPS Fix 2D";$/;"	v
GPSFix3dString	.\FMLangStrings.c	/^const char *GPSFix3dString = "GPS Fix 3D";$/;"	v
GPSFix3dString	.\src\FMStrings.c	/^const char *GPSFix3dString = "_GPS Fix 3D";$/;"	v
GPSFixLostString	.\FMLangStrings.c	/^const char *GPSFixLostString = "GPS Fix Lost";$/;"	v
GPSFixLostString	.\src\FMStrings.c	/^const char *GPSFixLostString = "_GPS Fix Lost";$/;"	v
GPSFixT8	.\extsrc\GPSLib.h	/^typedef Int8 GPSFixT8; enum$/;"	t
GPSForm	.\src\ResourceDefines.h	69;"	d
GPSFormDeinit	.\src\GPSForm.c	/^static void GPSFormDeinit(FormPtr form) {$/;"	f	file:
GPSFormHandleEvent	.\src\GPSForm.c	/^Boolean GPSFormHandleEvent(EventPtr event)$/;"	f
GPSFormInit	.\src\GPSForm.c	/^static void GPSFormInit(FormPtr form) {$/;"	f	file:
GPSFormMapping	.\src\Main.c	/^static const FunctionKeymapType GPSFormMapping[] = {$/;"	v	file:
GPSHDOPField	.\src\ResourceDefines.h	82;"	d
GPSInit	.\src\Gps.c	/^Err GPSInit(GPSSourceType source, BtLibDeviceAddressType *bluetoothID) {$/;"	f
GPSLocalField	.\src\ResourceDefines.h	77;"	d
GPSMenu	.\src\ResourceDefines.h	8;"	d
GPSMessageType	.\src\Gps.c	/^} GPSMessageType;$/;"	t	typeref:enum:__anon64	file:
GPSModeT8	.\extsrc\GPSLib.h	/^typedef Int8 GPSModeT8; enum$/;"	t
GPSModuleID	.\src\Modules.h	16;"	d
GPSNumSats	.\src\Gps.h	18;"	d
GPSPDOPField	.\src\ResourceDefines.h	84;"	d
GPSPVTDataType	.\extsrc\GPSLib.h	/^    } GPSPVTDataType;$/;"	t	typeref:struct:__anon10
GPSPositionDataType	.\extsrc\GPSLib.h	/^    } GPSPositionDataType;$/;"	t	typeref:struct:__anon7
GPSPosnData	.\src\Gps.h	/^} GPSPosnData;$/;"	t	typeref:struct:__anon67
GPSProcess	.\src\Gps.c	/^Err GPSProcess(GPSDutyType dutyCycle, EventPtr event) {$/;"	f
GPSPushButtonGroup	.\src\ResourceDefines.h	86;"	d
GPSSatData	.\src\Gps.h	/^} GPSSatData;$/;"	t	typeref:struct:__anon68
GPSSatDataType	.\extsrc\GPSLib.h	/^    } GPSSatDataType;$/;"	t	typeref:struct:__anon3
GPSSetAMSLAltitude	.\src\Gps.c	/^void GPSSetAMSLAltitude(float altitude) {$/;"	f
GPSSetAltitudeCorrection	.\src\Gps.c	/^void GPSSetAltitudeCorrection(float correction) {$/;"	f
GPSSetLocation	.\src\Gps.c	/^void GPSSetLocation(Int32 lat, Int32 lon) {$/;"	f
GPSSetSimParams	.\src\Gps.c	/^void GPSSetSimParams(const double *lat, const double *lon, float heading, $/;"	f
GPSSimulating	.\src\Gps.c	/^Boolean GPSSimulating(void) {$/;"	f
GPSSourceSupported	.\src\Gps.c	/^Boolean GPSSourceSupported(GPSSourceType source) {$/;"	f
GPSSourceType	.\src\Gps.h	/^} GPSSourceType;$/;"	t	typeref:enum:__anon70
GPSState	.\src\Main.c	/^Boolean            GPSState;$/;"	v
GPSStatusDataType	.\extsrc\GPSLib.h	/^    } GPSStatusDataType;$/;"	t	typeref:struct:__anon6
GPSStatusField	.\src\ResourceDefines.h	85;"	d
GPSTimeDataType	.\extsrc\GPSLib.h	/^    } GPSTimeDataType;$/;"	t	typeref:struct:__anon9
GPSTimeStamp	.\src\Gps.h	/^} GPSTimeStamp;$/;"	t	typeref:struct:__anon66
GPSTimeZoneField	.\src\ResourceDefines.h	79;"	d
GPSTimeZoneMinusButton	.\src\ResourceDefines.h	81;"	d
GPSTimeZonePlusButton	.\src\ResourceDefines.h	80;"	d
GPSType	.\src\Gps.h	/^} GPSType;$/;"	t	typeref:struct:__anon72
GPSUTCField	.\src\ResourceDefines.h	75;"	d
GPSVDOPField	.\src\ResourceDefines.h	83;"	d
GPSVelocityDataType	.\extsrc\GPSLib.h	/^    } GPSVelocityDataType;$/;"	t	typeref:struct:__anon8
GPS_COMMS_TIMEOUT	.\src\Gps.c	50;"	d	file:
GPS_H_INCLUDED	.\src\Gps.h	12;"	d
GPS_OK	.\src\Gps.h	19;"	d
GPS_SECTION	.\src\Constants.h	71;"	d
GSIDraw	.\src\Instruments.c	/^void GSIDraw(GSIType gsi, Int32 altError) {$/;"	f
GSIFree	.\src\Instruments.c	/^void GSIFree(GSIType gsi) {$/;"	f
GSINew	.\src\Instruments.c	/^GSIType GSINew(Coord x, Coord y, Coord width, Coord height, Int32 maxDeflection, Int32 tickInterval) {$/;"	f
GSIType	.\src\Instruments.h	/^typedef struct GSITypeStruct *GSIType;$/;"	t	typeref:struct:GSITypeStruct
GSITypeStruct	.\src\Instruments.c	/^struct GSITypeStruct { $/;"	s	file:
GTAN15	.\src\NavManager.c	745;"	d	file:
GUIDrawBitmap	.\src\Platform.c	/^void GUIDrawBitmap(UInt16 bitmapID, Coord x, Coord y) {$/;"	f
GUIDrawForm	.\src\Platform.c	/^void  GUIDrawForm(void) {$/;"	f
GUIGetFieldText	.\src\Platform.c	/^char *GUIGetFieldText(UInt16 fieldID) {$/;"	f
GUIGetObjectBounds	.\src\Platform.c	/^void GUIGetObjectBounds(UInt16 controlID, RectangleType *r) {$/;"	f
GUIGetObjectState	.\src\Platform.c	/^Boolean GUIGetObjectState(UInt16 controlID) {$/;"	f
GUIHideObject	.\src\Platform.c	/^void GUIHideObject(UInt16 controlID) {$/;"	f
GUIHitControl	.\src\Platform.c	/^void GUIHitControl(UInt16 controlID) {$/;"	f
GUIMenuDisplayed	.\src\Platform.c	/^Boolean GUIMenuDisplayed(void) {$/;"	f
GUISetFieldText	.\src\Platform.c	/^void GUISetFieldText(UInt16 controlID, const char *text, Boolean redraw)  {$/;"	f
GUISetObjectBitmap	.\src\Platform.c	/^void GUISetObjectBitmap(UInt16 controlID, UInt16 bitmapID) {$/;"	f
GUISetObjectLabel	.\src\Platform.c	/^void GUISetObjectLabel(UInt16 controlID, const char *label) {$/;"	f
GUISetObjectState	.\src\Platform.c	/^void GUISetObjectState(UInt16 controlID, Boolean state) {$/;"	f
GUIShowObject	.\src\Platform.c	/^void GUIShowObject(UInt16 controlID) {$/;"	f
GarminInputAlert	.\src\ResourceDefines.h	417;"	d
GarminKeyIsGarmin	.\extsrc\GarminChars.h	73;"	d
GenerateRegistrationCode	.\src\RegistrationCode.c	/^static UInt32 GenerateRegistrationCode(UInt32 seed, UInt32 prime, const char *uid) {$/;"	f	file:
GenericWarningAlert	.\src\ResourceDefines.h	404;"	d
GetAirportFrequencies	.\src\WDManager.c	/^static \/*@shared@*\/ const char *GetAirportFrequencies(const Waypoint *wp) {$/;"	f	file:
GetDemoDate	.\src\RegistrationCode.c	/^static UInt32 GetDemoDate(UInt32 code, const char *uid) {$/;"	f	file:
GetField	.\src\Gps.c	/^static char *GetField(char **ptr) {$/;"	f	file:
GetHighestPriorityAlarm	.\src\AlarmManager.c	/^static Int16 GetHighestPriorityAlarm(Boolean checkReturnedCounter) {$/;"	f	file:
GetLegWaypointID	.\src\CpInterface.c	/^static WaypointIDType GetLegWaypointID(CpLegWaypoint *wp) {$/;"	f	file:
GetNum	.\src\Gps.c	/^static UInt32 GetNum(char *str, UInt8 numChars) {$/;"	f	file:
GetObjectPtr	.\extsrc\Collapse.cpp	/^static void * GetObjectPtr(UInt16 objectID)$/;"	f	file:
GetObjectPtr	.\src\Utils.c	/^void *GetObjectPtr(FormPtr form, UInt16 objectID)$/;"	f
GetObjectPtr2	.\src\Platform.c	/^static void *GetObjectPtr2(FormPtr form, UInt16 objectID) {$/;"	f	file:
GetObjectPtrFromActiveForm	.\src\Utils.c	/^void *GetObjectPtrFromActiveForm(UInt16 objectID)$/;"	f
GetObstacleAltitude	.\src\CpInterface.c	/^Int32 GetObstacleAltitude(const Waypoint *wp) {$/;"	f
GetPreferences	.\src\CpInterface.c	/^static CpPreferences *GetPreferences(void){$/;"	f	file:
GetSinCos	.\src\Utils.c	/^void GetSinCos(Int16 angle, Int32 *sn, Int32 *cs) {$/;"	f
GetStringFromList	.\src\Utils.c	/^const char *GetStringFromList(const char *str, UInt16 stringNo) {$/;"	f
GpsErrThrow	.\src\Gps.c	203;"	d	file:
GpsErrThrowIf	.\src\Gps.c	204;"	d	file:
GpsErrThrowIfExt	.\src\Gps.c	205;"	d	file:
HASH_SIZE	.\src\MapManager.c	246;"	d	file:
HASH_VALUE	.\src\MapManager.c	312;"	d	file:
HEADINGINDICATOR_H_INCLUDED	.\src\HeadingIndicator.h	16;"	d
HEIGHT	.\src\Polygon.c	18;"	d	file:
HSIDraw	.\src\HeadingIndicator.c	/^void HSIDraw(HSIType hsi, Int16 heading, Int16 bearing, $/;"	f
HSIFree	.\src\HeadingIndicator.c	/^void HSIFree(HSIType hsi) {$/;"	f
HSINew	.\src\HeadingIndicator.c	/^HSIType HSINew(Coord x, Coord y, Coord radius, Boolean highDensity){$/;"	f
HSIType	.\src\HeadingIndicator.h	/^typedef struct HSITypeStruct *HSIType;$/;"	t	typeref:struct:HSITypeStruct
HSITypeStruct	.\src\HeadingIndicator.c	/^struct HSITypeStruct {$/;"	s	file:
HSI_RADIUS	.\src\HeadingIndicator.h	23;"	d
HSI_SECTION	.\src\Constants.h	55;"	d
HandleAirspaceFilter	.\src\MapDialog.c	/^static void HandleAirspaceFilter(Int16 buttonNumber) {$/;"	f	file:
HandleCommonMenuEvent	.\src\Main.c	/^static Boolean HandleCommonMenuEvent(EventPtr event) {$/;"	f	file:
HandleCtlRepeatEvent	.\src\MapForm.c	/^static Boolean HandleCtlRepeatEvent(EventPtr event) {$/;"	f	file:
HandleCtlSelectEvent	.\src\DiversionForm.c	/^static Boolean HandleCtlSelectEvent(EventPtr event) {$/;"	f	file:
HandleCtlSelectEvent	.\src\EditWaypointForm.c	/^static Boolean HandleCtlSelectEvent(EventPtr event) {$/;"	f	file:
HandleCtlSelectEvent	.\src\FlightPlanForm.c	/^static Boolean HandleCtlSelectEvent(EventPtr event) {$/;"	f	file:
HandleCtlSelectEvent	.\src\GPSForm.c	/^static Boolean HandleCtlSelectEvent(EventPtr event) {$/;"	f	file:
HandleCtlSelectEvent	.\src\MapForm.c	/^static Boolean HandleCtlSelectEvent(EventPtr event) {$/;"	f	file:
HandleCtlSelectEvent	.\src\TimerForm.c	/^static Boolean HandleCtlSelectEvent(EventPtr event) {$/;"	f	file:
HandleDemoChecks	.\src\RegistrationCode.c	/^static Boolean HandleDemoChecks(UInt32 code, const char *uid, UInt32 *demoDateLimit) {$/;"	f	file:
HandleFilter	.\src\MapDialog.c	/^static void HandleFilter(Int16 buttonNumber) {$/;"	f	file:
HandleKeyDownEvent	.\src\GPSForm.c	/^static Boolean HandleKeyDownEvent(EventPtr evt) {$/;"	f	file:
HandleKeyEvent	.\src\DiversionForm.c	/^static Boolean HandleKeyEvent(EventPtr event) {$/;"	f	file:
HandleKeyEvent	.\src\EditWaypointForm.c	/^static Boolean HandleKeyEvent(EventPtr e) {$/;"	f	file:
HandleKeyEvent	.\src\MainForm.c	/^static Boolean HandleKeyEvent(EventPtr event) {$/;"	f	file:
HandleKeyEvent	.\src\MapForm.c	/^static Boolean HandleKeyEvent(EventPtr event) {$/;"	f	file:
HandleListSelectEvent	.\src\FlightPlanForm.c	/^static Boolean HandleListSelectEvent(EventPtr event) {$/;"	f	file:
HandleMapQuickFindKey	.\src\MapForm.c	/^static Boolean HandleMapQuickFindKey(char inputChar, Boolean *updateScreen) {$/;"	f	file:
HandlePenDownEvent	.\src\MapForm.c	/^static Boolean HandlePenDownEvent(EventPtr event) {$/;"	f	file:
HandlePenEvent	.\src\MainForm.c	/^static Boolean HandlePenEvent(EventPtr event) {$/;"	f	file:
HandleProxSelectEvent	.\src\DiversionForm.c	/^static Boolean HandleProxSelectEvent(EventPtr e) {$/;"	f	file:
HardKeyDown	.\src\Platform.c	56;"	d	file:
HeadingIndicatorModuleID	.\src\Modules.h	39;"	d
HeadingsPushButtonGroup	.\src\ResourceDefines.h	219;"	d
HighDensityCheck	.\src\MapForm.c	/^static void HighDensityCheck(void) {$/;"	f	file:
IDToDBNumber	.\src\WDManager.c	/^static Int16 IDToDBNumber(WDMDatabaseIDType id) {$/;"	f	file:
INSIDE	.\src\Utils.c	930;"	d	file:
INSTRUMENTS_H_INCLUDED	.\src\Instruments.h	9;"	d
INT32_1NM	.\src\GlobalTypes.h	429;"	d
INT32_TO_RAD	.\src\GlobalTypes.h	423;"	d
INTFP8	.\src\TerrainCore.h	19;"	d
IconBitmaps	.\src\ResourceDefines.h	443;"	d
IconMaskBitmaps	.\src\ResourceDefines.h	444;"	d
IconModuleID	.\src\Modules.h	23;"	d
IconWindows	.\src\Main.c	/^IconWindowsType IconWindows;$/;"	v
IconWindowsType	.\src\GlobalTypes.h	/^} IconWindowsType;$/;"	t	typeref:struct:__anon53
IdField	.\src\ResourceDefines.h	133;"	d
ImportAltitude	.\src\AsDatabase.c	/^static void ImportAltitude(const char *line, AltReferenceType *ar, UInt16 *alt) {$/;"	f	file:
ImportDialog	.\src\ResourceDefines.h	104;"	d
ImportRecord	.\src\AsDatabase.c	/^static AirspaceType *ImportRecord(PFFileRef f, Int16 *lat1, Int16 *lon1, Int16 *lat3, Int16 *lon3,$/;"	f	file:
ImportStatusField	.\src\ResourceDefines.h	105;"	d
IndexDatabaseType	.\src\CpInterface.c	63;"	d	file:
IndexDialog	.\src\ResourceDefines.h	325;"	d
IndexPtrs	.\src\WDManager.c	/^} IndexPtrs;$/;"	t	typeref:struct:__anon104	file:
IndexUpdateProgess	.\src\Main.c	/^static Int16 IndexUpdateProgess(Int16 j) {$/;"	f	file:
IndexingAlert	.\src\ResourceDefines.h	418;"	d
IndexingErrorAlert	.\src\ResourceDefines.h	422;"	d
InitDialog	.\src\SaveFlightDialog.c	/^static void InitDialog(FormPtr form) {$/;"	f	file:
InitDialog	.\src\SelectCopilotFlightDialog.c	/^static void InitDialog(FormPtr form) {$/;"	f	file:
InitProxDBSearch	.\src\WDManager.c	/^static void InitProxDBSearch(WDMSearchHandle sh) {$/;"	f	file:
InitialiseLeg	.\src\FlightPlan.c	/^static void InitialiseLeg(FlightPlanLegType *leg) {$/;"	f	file:
InsideThickenLine	.\src\Utils.c	/^void InsideThickenLine(Coord x1, Coord y1, Coord x2, Coord y2, Int16 thickness ) {$/;"	f
InstrumentModuleID	.\src\Modules.h	29;"	d
Int2FP	.\src\Fixed.h	71;"	d
Int64	.\src\GlobalTypes.h	/^typedef long long          Int64;$/;"	t
IntCalcGreatCircleCourse	.\src\AvCalcs.h	51;"	d
IntCalcGreatCircleRange	.\src\AvCalcs.h	37;"	d
IntSinCos	.\src\Utils.c	/^void IntSinCos(Int16 angle, Int32 *sn, Int32 *cs) {$/;"	f
IntSqrt	.\src\Utils.c	/^Int32 IntSqrt(Int32 r) {$/;"	f
InvalidATZRadiusAlert	.\src\ResourceDefines.h	419;"	d
InvalidRunwayDimensionAlert	.\src\ResourceDefines.h	411;"	d
IsFiveWayNavEvent	.\extsrc\PalmNavigator.h	61;"	d
IsValidCode	.\src\RegistrationCode.c	123;"	d	file:
KEYPAD_H_INCLUDED	.\src\KeypadDialog.h	10;"	d
KM_PER_NM	.\src\GlobalTypes.h	399;"	d
KM_PER_NM	.\src\Gps.c	51;"	d	file:
KM_PER_RADIAN	.\src\GlobalTypes.h	404;"	d
KM_UNITS	.\src\GlobalTypes.h	28;"	d
KPButton0	.\src\ResourceDefines.h	328;"	d
KPButton1	.\src\ResourceDefines.h	329;"	d
KPButton2	.\src\ResourceDefines.h	330;"	d
KPButton3	.\src\ResourceDefines.h	331;"	d
KPButton4	.\src\ResourceDefines.h	332;"	d
KPButton5	.\src\ResourceDefines.h	333;"	d
KPButton6	.\src\ResourceDefines.h	334;"	d
KPButton7	.\src\ResourceDefines.h	335;"	d
KPButton8	.\src\ResourceDefines.h	336;"	d
KPButton9	.\src\ResourceDefines.h	337;"	d
KPDecimalButton	.\src\ResourceDefines.h	343;"	d
KPDeleteButton	.\src\ResourceDefines.h	338;"	d
KPInputField	.\src\ResourceDefines.h	344;"	d
KPUser1	.\src\ResourceDefines.h	339;"	d
KPUser2	.\src\ResourceDefines.h	340;"	d
KPUser3	.\src\ResourceDefines.h	341;"	d
KPUser4	.\src\ResourceDefines.h	342;"	d
KeymappingType	.\src\GlobalTypes.h	/^typedef enum { noMapping, mapToMenuID, mapToControlID } KeymappingType;$/;"	t	typeref:enum:__anon57
KeypadCallback	.\src\TimerForm.c	/^Boolean KeypadCallback(UInt16 buttonID, float input) {$/;"	f
KeypadDialog	.\src\ResourceDefines.h	327;"	d
KeypadDialogHandleEvent	.\src\KeypadDialog.c	/^Boolean KeypadDialogHandleEvent(EventPtr event) {$/;"	f
KeypadDialogInit	.\src\KeypadDialog.c	/^void KeypadDialogInit(Boolean (*callback)(UInt16,float), float initialValue,$/;"	f
KmPushButton	.\src\ResourceDefines.h	203;"	d
LATEST_PREFS_VERSION	.\src\FMPreferences.c	26;"	d	file:
LEFT	.\src\Utils.c	928;"	d	file:
LOGDOUBLE	.\src\Logging.h	53;"	d
LOGDOUBLE	.\src\Logging.h	71;"	d
LOGENTRY	.\src\Logging.h	57;"	d
LOGENTRY	.\src\Logging.h	64;"	d
LOGEXIT	.\src\Logging.h	56;"	d
LOGEXIT	.\src\Logging.h	65;"	d
LOGFLOAT	.\src\Logging.h	52;"	d
LOGFLOAT	.\src\Logging.h	70;"	d
LOGGING_H_INCLUDED	.\src\Logging.h	3;"	d
LOGINT16	.\src\Logging.h	51;"	d
LOGINT16	.\src\Logging.h	68;"	d
LOGINT32	.\src\Logging.h	50;"	d
LOGINT32	.\src\Logging.h	69;"	d
LOGLINE	.\src\Logging.h	55;"	d
LOGLINE	.\src\Logging.h	66;"	d
LOGSTR	.\src\Logging.h	48;"	d
LOGSTR	.\src\Logging.h	73;"	d
LOGTAG	.\src\Logging.h	54;"	d
LOGTAG	.\src\Logging.h	67;"	d
LOGTIMESTART	.\src\Logging.h	58;"	d
LOGTIMESTART	.\src\Logging.h	74;"	d
LOGTIMESTOP	.\src\Logging.h	59;"	d
LOGTIMESTOP	.\src\Logging.h	75;"	d
LOGUINT32	.\src\Logging.h	49;"	d
LOGUINT32	.\src\Logging.h	72;"	d
LOG_DISTANCE	.\src\TrackLog.c	258;"	d	file:
LatDegreesField	.\src\ResourceDefines.h	134;"	d
LatField	.\src\ResourceDefines.h	73;"	d
LatMinutesField	.\src\ResourceDefines.h	135;"	d
LatPushButtonGroup	.\src\ResourceDefines.h	167;"	d
LatitudeCompareFunc	.\src\WDManager.c	/^static Int16 LatitudeCompareFunc(void const *lat1, void const *lat2, $/;"	f	file:
LegStruct	.\src\CpInterface.c	/^}LegStruct ;$/;"	t	typeref:struct:__anon28	file:
LibType	.\extsrc\MathLib.h	37;"	d
LineSegmentType	.\src\AsDatabase.h	/^} LineSegmentType;$/;"	t	typeref:struct:__anon16
LineShift	.\src\Platform.c	/^static void LineShift(WinLineType *l, Int16 numLines, Boolean outside) {$/;"	f	file:
LoadAlternateAlert	.\src\ResourceDefines.h	429;"	d
LoadCoPilotFlight	.\src\SelectCopilotFlightDialog.c	/^static Boolean LoadCoPilotFlight(Int16 flightNum, Int16 importSegment) {$/;"	f	file:
LoadFlightMasterFlight	.\src\SelectCopilotFlightDialog.c	/^static Boolean LoadFlightMasterFlight(Int16 flightNum) {$/;"	f	file:
LogClose	.\src\Logging.c	/^void LogClose(void) {$/;"	f
LogData	.\src\Logging.c	/^static void LogData(const char *data) {$/;"	f	file:
LogDouble	.\src\Logging.c	/^void LogDouble(const char *name, double val) {$/;"	f
LogEntry	.\src\Logging.c	/^void LogEntry(const char *fname) {$/;"	f
LogExit	.\src\Logging.c	/^void LogExit(const char *fname,UInt16 line) {$/;"	f
LogInt16	.\src\Logging.c	/^void LogInt16(const char *name, Int16 val) {$/;"	f
LogInt32	.\src\Logging.c	/^void LogInt32(const char *name, Int32 val) {$/;"	f
LogLine	.\src\Logging.c	/^void LogLine(UInt16 lineNo) {$/;"	f
LogOpen	.\src\Logging.c	/^void LogOpen(void) {$/;"	f
LogString	.\src\Logging.c	/^void LogString(const char *name, const char *s) {$/;"	f
LogTag	.\src\Logging.c	/^void LogTag(const char *tag) {$/;"	f
LogUInt32	.\src\Logging.c	/^void LogUInt32(const char *name, UInt32 val) {$/;"	f
LoggingModuleID	.\src\Modules.h	45;"	d
LonDegreesField	.\src\ResourceDefines.h	136;"	d
LonField	.\src\ResourceDefines.h	74;"	d
LonMinutesField	.\src\ResourceDefines.h	137;"	d
LonPopUpTrigger	.\src\ResourceDefines.h	138;"	d
LonPushButtonGroup	.\src\ResourceDefines.h	168;"	d
MAIN	.\src\Constants.h	44;"	d
MAINFORM_H	.\src\MainForm.h	2;"	d
MAINFORM_SECTION	.\src\Constants.h	63;"	d
MAPFORM_H_INCLUDED	.\src\MapForm.h	2;"	d
MAPICON_H_INCLUDED	.\src\MapIcon.h	9;"	d
MAPICON_SECTION	.\src\Constants.h	58;"	d
MAPLAST	.\src\MapManager.h	72;"	d
MAPMANAGER_H_INCLUDED	.\src\MapManager.h	9;"	d
MAPORIGIN	.\src\MapManager.h	71;"	d
MAP_AIRSPACE_H_INCLUDED	.\src\MapAirspace.h	7;"	d
MAP_DIALOG_H_INCLUDED	.\src\MapDialog.h	7;"	d
MAP_SECTION	.\src\Constants.h	74;"	d
MAX	.\src\GlobalTypes.h	611;"	d
MAXIDCHARS	.\src\GlobalTypes.h	17;"	d
MAXLON	.\src\TerrainType.c	26;"	d	file:
MAXSTRLEN	.\src\KeypadDialog.c	29;"	d	file:
MAX_AIRSPACES	.\src\MapManager.c	84;"	d	file:
MAX_AIRSPACE_DATABASES	.\src\AsDatabase.c	58;"	d	file:
MAX_AIRWAY_CHARS	.\src\MapAirspace.h	13;"	d
MAX_ALARMS	.\src\AlarmManager.c	21;"	d	file:
MAX_ALT_CHARS	.\src\MapAirspace.h	12;"	d
MAX_DBS	.\src\WDManager.c	32;"	d	file:
MAX_FILENAME_LENGTH	.\src\FlightDatabase.c	25;"	d	file:
MAX_FLIGHTS	.\src\SelectCopilotFlightDialog.c	79;"	d	file:
MAX_FLIGHT_DESCRIPTION	.\src\CpInterface.c	67;"	d	file:
MAX_FP_LEGS	.\src\FlightPlan.h	16;"	d
MAX_ICON_CHARS	.\src\MapIcon.h	20;"	d
MAX_IDENTCHARS	.\src\DiversionForm.c	68;"	d	file:
MAX_IDENT_CHARS	.\src\FlightPlan.h	17;"	d
MAX_INFO_LINE_CHARS	.\src\MapForm.c	223;"	d	file:
MAX_LABEL_CHARS	.\src\MapForm.c	221;"	d	file:
MAX_LINES	.\src\WPInfoDialog.c	79;"	d	file:
MAX_MAPICONS	.\src\MapManager.c	83;"	d	file:
MAX_MAP_ELEMENTS	.\src\MapManager.c	85;"	d	file:
MAX_MESSAGE_ITEMS	.\src\MessageDialog.h	15;"	d
MAX_NAMECHARS	.\src\DiversionForm.c	69;"	d	file:
MAX_PROXWAYPOINTS	.\src\DiversionForm.c	67;"	d	file:
MAX_RETURNS	.\src\AlarmManager.c	22;"	d	file:
MAX_SCALES	.\src\MapForm.c	150;"	d	file:
MAX_SND_QUEUE_DEPTH	.\src\Platform.c	232;"	d	file:
MAX_SYS_TEMP	.\src\WDManager.c	33;"	d	file:
MAX_TEMP	.\src\WDManager.c	34;"	d	file:
MAX_TIMERS	.\src\Utils.c	1375;"	d	file:
MAX_TRACKLINES	.\src\MapManager.c	55;"	d	file:
MAX_TRACKSIZE	.\src\TrackLog.c	22;"	d	file:
MAX_ZOOM	.\src\MainForm.c	165;"	d	file:
MDButton1	.\src\ResourceDefines.h	223;"	d
MDButton2	.\src\ResourceDefines.h	224;"	d
MDButton3	.\src\ResourceDefines.h	225;"	d
MDButton4	.\src\ResourceDefines.h	226;"	d
MDField	.\src\ResourceDefines.h	222;"	d
MENUHANDLER_SECTION	.\src\Constants.h	68;"	d
MESSAGE_DIALOG_H_INCLUDED	.\src\MessageDialog.h	10;"	d
METRES_PER_FOOT	.\src\GlobalTypes.h	400;"	d
METRE_UNITS	.\src\GlobalTypes.h	32;"	d
MIN	.\src\GlobalTypes.h	610;"	d
MI_PER_NM	.\src\GlobalTypes.h	398;"	d
MI_PER_RADIAN	.\src\GlobalTypes.h	405;"	d
MI_UNITS	.\src\GlobalTypes.h	27;"	d
MODALDIALOGS_SECTION	.\src\Constants.h	78;"	d
MONITOR_H_INCLUDED	.\src\MonitorDialog.h	7;"	d
MOREPREFS_H_INCLUDED	.\src\MorePreferencesDialog.h	7;"	d
MQF_MAX_CHARS	.\src\MapForm.c	249;"	d	file:
MTMaxType	.\src\MapForm.c	/^} MTMaxType;$/;"	t	typeref:struct:__anon80	file:
MagField	.\src\ResourceDefines.h	78;"	d
MagVarnField	.\src\ResourceDefines.h	143;"	d
MagneticPushButton	.\src\ResourceDefines.h	206;"	d
MainForm	.\src\ResourceDefines.h	61;"	d
MainFormDeinit	.\src\MainForm.c	/^static void MainFormDeinit(FormPtr form)$/;"	f	file:
MainFormDoCommand	.\extsrc\Collapse.cpp	/^static Boolean MainFormDoCommand(UInt16 command)$/;"	f	file:
MainFormHandleEvent	.\extsrc\Collapse.cpp	/^static Boolean MainFormHandleEvent(EventPtr eventP)$/;"	f	file:
MainFormHandleEvent	.\src\MainForm.c	/^Boolean MainFormHandleEvent(EventPtr event)$/;"	f
MainFormInit	.\extsrc\Collapse.cpp	/^static void MainFormInit(FormPtr frmP)$/;"	f	file:
MainFormInit	.\src\MainForm.c	/^static void MainFormInit(FormPtr form)$/;"	f	file:
MainFormModuleID	.\src\Modules.c	15;"	d	file:
MainFormModuleID	.\src\Modules.h	14;"	d
MainFormResize	.\extsrc\Collapse.cpp	/^static Boolean MainFormResize(FormPtr frmP)$/;"	f	file:
MainMenu	.\src\ResourceDefines.h	6;"	d
MainModuleID	.\src\Modules.h	48;"	d
MapAirspaceCreate	.\src\MapAirspace.c	/^Boolean MapAirspaceCreate(const AirspaceType *as, MapAirspaceType *mas, AirspaceIDType id, UInt16 altUnits) {$/;"	f
MapAirspaceDeselect	.\src\MapAirspace.c	/^void MapAirspaceDeselect(MapAirspaceSelectedType *selection) {$/;"	f
MapAirspaceDraw	.\src\MapAirspace.c	/^Boolean MapAirspaceDraw(MapAirspaceType *mas, Boolean border, Boolean thick, Boolean highlight, Boolean label, $/;"	f
MapAirspaceDrawSelected	.\src\MapAirspace.c	/^void MapAirspaceDrawSelected(MapAirspaceSelectedType *selection) {$/;"	f
MapAirspaceInit	.\src\MapAirspace.c	/^void MapAirspaceInit(Int32 latReference, Int32 lonReference,$/;"	f
MapAirspaceSelect	.\src\MapAirspace.c	/^void MapAirspaceSelect(MapAirspaceType *mas, MapAirspaceSelectedType *selection,$/;"	f
MapAirspaceSelectedType	.\src\MapAirspace.h	/^} MapAirspaceSelectedType;$/;"	t	typeref:struct:__anon76
MapAirspaceType	.\src\MapAirspace.h	/^} MapAirspaceType;$/;"	t	typeref:struct:__anon75
MapAltitudeSlider	.\src\ResourceDefines.h	235;"	d
MapBuild	.\src\MapManager.c	/^Boolean MapBuild(MapType map, UInt32 maxTicks)  {$/;"	f
MapButtonToMenuEvent	.\src\CommandDialog.c	/^static void MapButtonToMenuEvent(UInt16 button) {$/;"	f	file:
MapCursorLeftButton	.\src\ResourceDefines.h	230;"	d
MapCursorRightButton	.\src\ResourceDefines.h	231;"	d
MapDeselect	.\src\MapManager.c	/^void MapDeselect(MapType map) {$/;"	f
MapDialog	.\src\ResourceDefines.h	242;"	d
MapDialogHandleEvent	.\src\MapDialog.c	/^Boolean MapDialogHandleEvent(EventPtr event) {$/;"	f
MapDialogInit	.\src\MapDialog.c	/^static void MapDialogInit() {$/;"	f	file:
MapDialogSaveSettings	.\src\MapDialog.c	/^static void MapDialogSaveSettings(void) {$/;"	f	file:
MapDraw	.\src\MapManager.c	/^Boolean MapDraw(MapType map,  Int32 maxTicks,$/;"	f
MapElementIndexType	.\src\MapManager.c	/^} MapElementIndexType;$/;"	t	typeref:struct:__anon88	file:
MapElementType	.\src\MapManager.c	/^typedef enum { melNone, melIcon, melRouteIcon, melAirspace, melAirway } MapElementType;$/;"	t	typeref:enum:__anon86	file:
MapForm	.\src\ResourceDefines.h	228;"	d
MapFormDeinit	.\src\MapForm.c	/^static void MapFormDeinit(FormPtr form) {$/;"	f	file:
MapFormHandleEvent	.\src\MapForm.c	/^Boolean MapFormHandleEvent(EventPtr event)$/;"	f
MapFormInit	.\src\MapForm.c	/^static void MapFormInit(FormPtr form) {$/;"	f	file:
MapFormModuleID	.\src\Modules.h	17;"	d
MapFree	.\src\MapManager.c	/^void MapFree(MapType map)  {$/;"	f
MapFunctionKeyToNewEvent	.\src\Main.c	/^static void MapFunctionKeyToNewEvent(EventPtr event) {$/;"	f	file:
MapGetLatLon	.\src\MapManager.c	/^void MapGetLatLon(MapType map, Coord x, Coord y, Int32 *lat, Int32 *lon) {$/;"	f
MapGetScreenCoords	.\src\MapManager.c	/^Boolean MapGetScreenCoords(MapType map, Int32 lat, Int32 lon, Coord *x, Coord *y)  {$/;"	f
MapGetSelection	.\src\MapManager.c	/^MapSelection MapGetSelection(MapType map)  {$/;"	f
MapIconCreate	.\src\MapIcon.c	/^void MapIconCreate(MapIconType *ptr, Coord x, Coord y, const ShortWaypointType *wp) {$/;"	f
MapIconDraw	.\src\MapIcon.c	/^void MapIconDraw(MapIconType *icon, Boolean label, Coord x, Coord y, Int16 rotation) {$/;"	f
MapIconDrawSelected	.\src\MapIcon.c	/^void MapIconDrawSelected(MapIconType *icon, Coord x, Coord y, Int16 rotation) {$/;"	f
MapIconSelectedType	.\src\MapIcon.h	/^} MapIconSelectedType;$/;"	t	typeref:struct:__anon85
MapIconSetScale	.\src\MapIcon.c	/^void MapIconSetScale(Int32 scale, Coord atz) {$/;"	f
MapIconType	.\src\MapIcon.h	/^} MapIconType;$/;"	t	typeref:struct:__anon81
MapImport	.\src\MapForm.c	/^static void MapImport(Int16 dbNumber) {$/;"	f	file:
MapImportCallback	.\src\MapForm.c	/^static void MapImportCallback(const char *s) {$/;"	f	file:
MapInit	.\src\MapManager.c	/^MapType MapInit(Int32 lat, Int32 lon, Int32 scaling, Coord pxWidth, Coord pxHeight,$/;"	f
MapManagerModuleID	.\src\Modules.h	21;"	d
MapMenu	.\src\ResourceDefines.h	10;"	d
MapPanToAircraftButton	.\src\ResourceDefines.h	233;"	d
MapPanToSelectionButton	.\src\ResourceDefines.h	234;"	d
MapPanToWaypointButton	.\src\ResourceDefines.h	232;"	d
MapSelectByCoord	.\src\MapManager.c	/^MapSelection MapSelectByCoord(MapType map, Coord x, Coord y, Coord threshold) {$/;"	f
MapSelectByReference	.\src\MapManager.c	/^Boolean MapSelectByReference(MapType map, MapSelection selection)  {$/;"	f
MapSelection	.\src\MapManager.h	/^typedef struct MapSelectionStructType *MapSelection;$/;"	t	typeref:struct:MapSelectionStructType
MapSelectionFree	.\src\MapManager.c	/^void MapSelectionFree(MapSelection *ms) {$/;"	f
MapSelectionStructType	.\src\MapManager.h	/^struct MapSelectionStructType {$/;"	s
MapSetSelection	.\src\MapForm.c	/^void MapSetSelection(WaypointIDType wp) {$/;"	f
MapSettingType	.\src\GlobalTypes.h	/^} MapSettingType;$/;"	t	typeref:struct:__anon46
MapSourceType	.\src\MapManager.c	/^} MapSourceType;$/;"	t	typeref:enum:__anon87	file:
MapSpaceConstructor	.\src\MapForm.c	/^static void MapSpaceConstructor(Boolean initialise, UInt32 maxTicks) {$/;"	f	file:
MapType	.\src\MapManager.h	/^typedef struct MapTypeStruct *MapType;$/;"	t	typeref:struct:MapTypeStruct
MapTypeStruct	.\src\MapManager.c	/^struct MapTypeStruct {$/;"	s	file:
MapUnitTestHead	.\src\MapForm.c	/^UInt16 MapUnitTestHead(TestActionType action,UInt16 extra, HostFILE *f) {$/;"	f
MapUpdatePlan	.\src\MapManager.c	/^void MapUpdatePlan (MapType map, FlightPlanType plan) {$/;"	f
MasModuleID	.\src\Modules.h	22;"	d
MathLibAlert	.\src\ResourceDefines.h	396;"	d
MathLibCreator	.\extsrc\MathLib.h	38;"	d
MathLibErrorCode	.\extsrc\MathLib.h	/^typedef enum MathLibErrorCode {$/;"	g
MathLibErrorCode	.\extsrc\MathLib.h	/^} MathLibErrorCode;$/;"	t	typeref:enum:MathLibErrorCode
MathLibName	.\extsrc\MathLib.h	35;"	d
MathLibRef	.\extsrc\MathLib.c	/^UInt16 MathLibRef;$/;"	v
MathLibVersion	.\extsrc\MathLib.h	49;"	d
MaxCheck	.\src\MapForm.c	/^static void MaxCheck(Int32 value, MTMaxType *mt) {$/;"	f	file:
McATZCheckbox	.\src\ResourceDefines.h	267;"	d
McAfButton	.\src\ResourceDefines.h	243;"	d
McAirfieldBmp	.\src\ResourceDefines.h	447;"	d
McClassABmp	.\src\ResourceDefines.h	454;"	d
McClassAButton	.\src\ResourceDefines.h	250;"	d
McClassBBmp	.\src\ResourceDefines.h	455;"	d
McClassBButton	.\src\ResourceDefines.h	251;"	d
McClassCButton	.\src\ResourceDefines.h	252;"	d
McClassDButton	.\src\ResourceDefines.h	253;"	d
McClassEButton	.\src\ResourceDefines.h	254;"	d
McClassFButton	.\src\ResourceDefines.h	255;"	d
McClassGButton	.\src\ResourceDefines.h	256;"	d
McFilterAboveBmp	.\src\ResourceDefines.h	459;"	d
McFilterBelowBmp	.\src\ResourceDefines.h	460;"	d
McHeadingArcCheckbox	.\src\ResourceDefines.h	269;"	d
McIntersectButton	.\src\ResourceDefines.h	248;"	d
McIntersectionBmp	.\src\ResourceDefines.h	452;"	d
McLabelBmp	.\src\ResourceDefines.h	462;"	d
McLargeAfButton	.\src\ResourceDefines.h	244;"	d
McLargeAirfieldBmp	.\src\ResourceDefines.h	448;"	d
McLowerAirwayBmp	.\src\ResourceDefines.h	458;"	d
McLowerAirwayButton	.\src\ResourceDefines.h	259;"	d
McLowerAltButton	.\src\ResourceDefines.h	261;"	d
McNDBBmp	.\src\ResourceDefines.h	450;"	d
McNDBButton	.\src\ResourceDefines.h	246;"	d
McObstacleBmp	.\src\ResourceDefines.h	453;"	d
McObstacleButton	.\src\ResourceDefines.h	249;"	d
McOffBmp	.\src\ResourceDefines.h	461;"	d
McOtherBmp	.\src\ResourceDefines.h	451;"	d
McOtherButton	.\src\ResourceDefines.h	247;"	d
McRouteLineCheckbox	.\src\ResourceDefines.h	270;"	d
McSUASBmp	.\src\ResourceDefines.h	456;"	d
McSUASButton	.\src\ResourceDefines.h	257;"	d
McTerrainButton	.\src\ResourceDefines.h	262;"	d
McTerrainLevelLabel	.\src\ResourceDefines.h	264;"	d
McTerrainLevelSelector	.\src\ResourceDefines.h	265;"	d
McTerrainNormalBmp	.\src\ResourceDefines.h	464;"	d
McTerrainNormalWarnBmp	.\src\ResourceDefines.h	465;"	d
McTerrainWarnBmp	.\src\ResourceDefines.h	466;"	d
McTrackLogCheckbox	.\src\ResourceDefines.h	271;"	d
McTracklineCheckbox	.\src\ResourceDefines.h	266;"	d
McTrackupCheckbox	.\src\ResourceDefines.h	268;"	d
McUpperAirwayBmp	.\src\ResourceDefines.h	457;"	d
McUpperAirwayButton	.\src\ResourceDefines.h	258;"	d
McUpperAltButton	.\src\ResourceDefines.h	260;"	d
McVORBmp	.\src\ResourceDefines.h	449;"	d
McVORButton	.\src\ResourceDefines.h	245;"	d
MdCancelButton	.\src\ResourceDefines.h	190;"	d
MdOKButton	.\src\ResourceDefines.h	189;"	d
MdObstacleWarnings	.\src\ResourceDefines.h	184;"	d
MdTrackLog10s	.\src\ResourceDefines.h	188;"	d
MdTrackLog1s	.\src\ResourceDefines.h	186;"	d
MdTrackLog5s	.\src\ResourceDefines.h	187;"	d
MdTrackLogGroup	.\src\ResourceDefines.h	192;"	d
MdTrackLogOff	.\src\ResourceDefines.h	185;"	d
MdTurnAnticipation	.\src\ResourceDefines.h	183;"	d
MdVoiceVolume	.\src\ResourceDefines.h	191;"	d
MessageDialog	.\src\ResourceDefines.h	221;"	d
MessageDialogDataFree	.\src\MessageDialog.c	/^void MessageDialogDataFree(MessageDialogDataType *md) {$/;"	f
MessageDialogDataNew	.\src\MessageDialog.c	/^MessageDialogDataType *MessageDialogDataNew(const char *message, Int16 numItems,$/;"	f
MessageDialogDataType	.\src\MessageDialog.h	/^} MessageDialogDataType;$/;"	t	typeref:struct:__anon93
MessageDialogHandleEvent	.\src\MessageDialog.c	/^Boolean MessageDialogHandleEvent(EventPtr event) {$/;"	f
MessageDialogInit	.\src\MessageDialog.c	/^void MessageDialogInit(MessageDialogDataType *md) {$/;"	f
MessageDialogModuleID	.\src\Modules.h	28;"	d
MessageFlag	.\src\Main.c	/^PointType MessageFlag;$/;"	v
MessageFlagString	.\FMLangStrings.c	/^const char *MessageFlagString = "MSG";$/;"	v
MessageFlagString	.\src\FMStrings.c	/^const char *MessageFlagString = "_MSG";$/;"	v
MfErrThrow	.\src\MainForm.c	88;"	d	file:
MiPushButton	.\src\ResourceDefines.h	202;"	d
MnAbout	.\src\ResourceDefines.h	14;"	d
MnClearTrackLog	.\src\ResourceDefines.h	47;"	d
MnCommandPopup	.\src\ResourceDefines.h	28;"	d
MnDayNight	.\src\ResourceDefines.h	46;"	d
MnDivertCancel	.\src\ResourceDefines.h	40;"	d
MnDivertCancelConfirmed	.\src\ResourceDefines.h	41;"	d
MnDivertEmergency	.\src\ResourceDefines.h	39;"	d
MnDivertTo	.\src\ResourceDefines.h	38;"	d
MnEditPlan	.\src\ResourceDefines.h	37;"	d
MnExit	.\src\ResourceDefines.h	58;"	d
MnFlight	.\src\ResourceDefines.h	31;"	d
MnFlightFlipFlop	.\src\ResourceDefines.h	56;"	d
MnFlightSave	.\src\ResourceDefines.h	54;"	d
MnFlightSaveAs	.\src\ResourceDefines.h	55;"	d
MnGotoGPS	.\src\ResourceDefines.h	21;"	d
MnGotoHSI	.\src\ResourceDefines.h	24;"	d
MnGotoMap	.\src\ResourceDefines.h	23;"	d
MnGotoPlan	.\src\ResourceDefines.h	25;"	d
MnGotoPrx	.\src\ResourceDefines.h	22;"	d
MnGotoTimer	.\src\ResourceDefines.h	26;"	d
MnImportBase	.\src\ResourceDefines.h	18;"	d
MnImportTFR	.\src\ResourceDefines.h	19;"	d
MnInformation	.\src\ResourceDefines.h	32;"	d
MnMapConfig	.\src\ResourceDefines.h	34;"	d
MnMonitoring	.\src\ResourceDefines.h	48;"	d
MnNewWaypoint	.\src\ResourceDefines.h	30;"	d
MnNextLeg	.\src\ResourceDefines.h	35;"	d
MnNextPage	.\src\ResourceDefines.h	42;"	d
MnNextSegment	.\src\ResourceDefines.h	16;"	d
MnOBS	.\src\ResourceDefines.h	33;"	d
MnObstacleMap	.\src\ResourceDefines.h	51;"	d
MnObstacleOff	.\src\ResourceDefines.h	52;"	d
MnPreferences	.\src\ResourceDefines.h	13;"	d
MnPreviousLeg	.\src\ResourceDefines.h	36;"	d
MnPreviousPage	.\src\ResourceDefines.h	43;"	d
MnPreviousSegment	.\src\ResourceDefines.h	17;"	d
MnShowAlarm	.\src\ResourceDefines.h	44;"	d
MnSimulation	.\src\ResourceDefines.h	15;"	d
MnTurnAnticipationOff	.\src\ResourceDefines.h	53;"	d
MnUndoEdit	.\src\ResourceDefines.h	49;"	d
MnVNAV	.\src\ResourceDefines.h	45;"	d
ModErrThrow	.\src\Platform.h	46;"	d
ModErrThrowIf	.\src\Platform.h	45;"	d
ModuleID	.\src\AlarmManager.c	42;"	d	file:
ModuleID	.\src\AlphaPadDialog.c	23;"	d	file:
ModuleID	.\src\AsDatabase.c	19;"	d	file:
ModuleID	.\src\Colours.c	11;"	d	file:
ModuleID	.\src\CpInterface.c	69;"	d	file:
ModuleID	.\src\DiversionForm.c	55;"	d	file:
ModuleID	.\src\DiversionMgr.c	32;"	d	file:
ModuleID	.\src\FlightDatabase.c	9;"	d	file:
ModuleID	.\src\FlightPlan.c	15;"	d	file:
ModuleID	.\src\FlightPlanForm.c	35;"	d	file:
ModuleID	.\src\Gps.c	27;"	d	file:
ModuleID	.\src\HeadingIndicator.c	25;"	d	file:
ModuleID	.\src\HeadingIndicator.c	42;"	d	file:
ModuleID	.\src\Instruments.c	18;"	d	file:
ModuleID	.\src\Logging.c	5;"	d	file:
ModuleID	.\src\Main.c	85;"	d	file:
ModuleID	.\src\MapAirspace.c	13;"	d	file:
ModuleID	.\src\MapForm.c	58;"	d	file:
ModuleID	.\src\MapIcon.c	18;"	d	file:
ModuleID	.\src\MapManager.c	20;"	d	file:
ModuleID	.\src\MessageDialog.c	21;"	d	file:
ModuleID	.\src\NavManager.c	23;"	d	file:
ModuleID	.\src\NavManager.c	45;"	d	file:
ModuleID	.\src\OBSManager.c	10;"	d	file:
ModuleID	.\src\Platform.c	21;"	d	file:
ModuleID	.\src\PreferencesDialog.c	43;"	d	file:
ModuleID	.\src\SelectCopilotFlightDialog.c	25;"	d	file:
ModuleID	.\src\TerrainType.c	20;"	d	file:
ModuleID	.\src\TextDialog.c	27;"	d	file:
ModuleID	.\src\TimerForm.c	28;"	d	file:
ModuleID	.\src\Utils.c	29;"	d	file:
ModuleID	.\src\WDManager.c	242;"	d	file:
ModuleID	.\src\WPInfoDialog.c	30;"	d	file:
MonitorDialog	.\src\ResourceDefines.h	182;"	d
MonitorDialogHandleEvent	.\src\MonitorDialog.c	/^Boolean MonitorDialogHandleEvent(EventPtr event) {$/;"	f
MorePreferencesDialog	.\src\ResourceDefines.h	302;"	d
MorePreferencesDialogHandleEvent	.\src\MorePreferencesDialog.c	/^Boolean MorePreferencesDialogHandleEvent(EventPtr event) {$/;"	f
MorePrefsButton	.\src\ResourceDefines.h	216;"	d
MorePrefsHelpString	.\src\ResourceDefines.h	439;"	d
MpATZRadiusField	.\src\ResourceDefines.h	312;"	d
MpAfSelector	.\src\ResourceDefines.h	308;"	d
MpAsphaltPushbutton	.\src\ResourceDefines.h	304;"	d
MpBothPushbutton	.\src\ResourceDefines.h	305;"	d
MpCancelButton	.\src\ResourceDefines.h	314;"	d
MpGrassPushbutton	.\src\ResourceDefines.h	303;"	d
MpLengthField	.\src\ResourceDefines.h	306;"	d
MpNDBSelector	.\src\ResourceDefines.h	310;"	d
MpOKButton	.\src\ResourceDefines.h	313;"	d
MpOtherSelector	.\src\ResourceDefines.h	311;"	d
MpSurfacePushbuttonGroup	.\src\ResourceDefines.h	315;"	d
MpVORSelector	.\src\ResourceDefines.h	309;"	d
MpWidthField	.\src\ResourceDefines.h	307;"	d
MyBinarySearch	.\src\Utils.c	/^Boolean MyBinarySearch (void const * baseP, $/;"	f
MyInfoAlert	.\extsrc\Collapse.cpp	/^static void MyInfoAlert(const char* theText)$/;"	f	file:
MyWinScreenLock	.\src\Utils.c	/^void MyWinScreenLock(void) {$/;"	f
MyWinScreenUnlock	.\src\Utils.c	/^void MyWinScreenUnlock(void) {$/;"	f
NAVMAN_H_INCLUDED	.\src\NavManager.h	10;"	d
NEWTASKTIMER	.\src\Utils.h	269;"	d
NMUnitValue	.\src\MapManager.h	60;"	d
NM_PER_RADIAN	.\src\GlobalTypes.h	403;"	d
NM_TO_FEET	.\src\GlobalTypes.h	410;"	d
NM_TO_RAD	.\src\GlobalTypes.h	415;"	d
NM_UNITS	.\src\GlobalTypes.h	26;"	d
NUMCOLS	.\src\TerrainType.c	488;"	d	file:
NUMTIMERS	.\src\GlobalTypes.h	120;"	d
NUM_AI_POINTS	.\src\AIGauge.c	47;"	d	file:
NUM_BUG_POINTS	.\src\HeadingIndicator.c	45;"	d	file:
NUM_FILTER_BUTTONS	.\src\MapDialog.c	37;"	d	file:
NUM_HASH_ELEMENTS	.\src\MapManager.c	245;"	d	file:
NUM_POINTER_POINTS	.\src\HeadingIndicator.c	44;"	d	file:
NUM_POINTS	.\src\HeadingIndicator.c	46;"	d	file:
NavDataType	.\src\NavManager.h	/^} NavDataType;$/;"	t	typeref:enum:__anon95
NavDirectionPressed	.\extsrc\PalmNavigator.h	120;"	d
NavDrawField	.\src\NavManager.c	/^Coord NavDrawField(NavDataType field, Coord x, Coord y, UInt8 alignment, FontID font) {$/;"	f
NavGetDoubleValue	.\src\NavManager.c	/^double NavGetDoubleValue(NavDataType field) {$/;"	f
NavGetFloatValue	.\src\NavManager.c	/^float NavGetFloatValue(NavDataType field) {$/;"	f
NavGetIntValue	.\src\NavManager.c	/^Int32 NavGetIntValue(NavDataType field) {$/;"	f
NavGetStrValue	.\src\NavManager.c	/^const char *NavGetStrValue(NavDataType field) {$/;"	f
NavKeyPressed	.\extsrc\PalmNavigator.h	146;"	d
NavManagerModuleID	.\src\Modules.h	26;"	d
NavSelectPressed	.\extsrc\PalmNavigator.h	90;"	d
NavUpdatePosition	.\src\NavManager.c	/^void NavUpdatePosition(GPSPosnData *gps) {$/;"	f
NmPushButton	.\src\ResourceDefines.h	201;"	d
NorthPushButton	.\src\ResourceDefines.h	144;"	d
OBSActive	.\src\OBSManager.c	/^Boolean OBSActive(void) { return obsActive; }$/;"	f
OBSCallback	.\src\Main.c	/^static Boolean OBSCallback(UInt16 button, float value) {$/;"	f	file:
OBSClear	.\src\OBSManager.c	/^void OBSClear(void) {$/;"	f
OBSGetBearing	.\src\OBSManager.c	/^float OBSGetBearing(void) {$/;"	f
OBSGetWaypoint	.\src\OBSManager.c	/^const Waypoint *OBSGetWaypoint(Int16 num) {$/;"	f
OBSInputPrompt	.\FMLangStrings.c	/^const char *OBSInputPrompt = "Set OBS";$/;"	v
OBSInputPrompt	.\src\FMStrings.c	/^const char *OBSInputPrompt = "_Set OBS";$/;"	v
OBSLabelStrings	.\FMLangStrings.c	/^const char *OBSLabelStrings[4] = { "OK", "Resume", NULL, NULL };$/;"	v
OBSLabelStrings	.\src\FMStrings.c	/^const char *OBSLabelStrings[4] = { "_OK", "_Resume", NULL, NULL };$/;"	v
OBSManagerModuleID	.\src\Modules.h	40;"	d
OBSSet	.\src\OBSManager.c	/^void OBSSet(const Waypoint *wp, float newOBSHeading, Boolean magnetic) {$/;"	f
OCEAN	.\src\TerrainType.c	74;"	d	file:
OKButton	.\src\ResourceDefines.h	140;"	d
OKString	.\FMLangStrings.c	/^const char *OKString = "OK";$/;"	v
OKString	.\src\FMStrings.c	/^const char *OKString = "_OK";$/;"	v
ObstacleMapOption	.\FMLangStrings.c	/^const char *ObstacleMapOption = "Map";$/;"	v
ObstacleMapOption	.\src\FMStrings.c	/^const char *ObstacleMapOption = "_Map";$/;"	v
ObstacleNearby	.\FMLangStrings.c	/^const char *ObstacleNearby = "Near Obstacle(s)";$/;"	v
ObstacleNearby	.\src\FMStrings.c	/^const char *ObstacleNearby = "_Near Obstacle(s)";$/;"	v
ObstacleOffOption	.\FMLangStrings.c	/^const char *ObstacleOffOption = "Off";$/;"	v
ObstacleOffOption	.\src\FMStrings.c	/^const char *ObstacleOffOption = "_Off";$/;"	v
OlBitmapDeinit	.\src\Utils.c	/^void OlBitmapDeinit(void) {$/;"	f
OlBitmapDraw	.\src\Utils.c	/^void OlBitmapDraw(Coord x1, Coord y1) {$/;"	f
OlBitmapInit	.\src\Utils.c	/^void OlBitmapInit(Coord width, Coord height) {$/;"	f
OlBitmapSetDrawing	.\src\Utils.c	/^void OlBitmapSetDrawing(void) {$/;"	f
OpenDatabase	.\src\AsDatabase.c	/^static AirspaceDBType *OpenDatabase(char *intName) {$/;"	f	file:
OpenGPSPort	.\src\Gps.c	/^static Err OpenGPSPort(BaudRate baudRate, Boolean resetTimers, BtLibDeviceAddressType *btID) {$/;"	f	file:
OriginalPlan	.\FMLangStrings.c	/^const char *OriginalPlan = "Load Original Plan";$/;"	v
OriginalPlan	.\src\FMStrings.c	/^const char *OriginalPlan = "_Load Original Plan";$/;"	v
OutsideThickenLine	.\src\Utils.c	/^void OutsideThickenLine(Coord x1, Coord y1, Coord x2, Coord y2, Int16 thickness ) {$/;"	f
OutsideThickenLinePoints	.\src\Utils.c	/^void OutsideThickenLinePoints(Coord *x1, Coord *y1, Coord *x2, Coord *y2) {$/;"	f
PFCloseDatabase	.\src\Platform.c	/^void PFCloseDatabase(DmOpenRef ref) {$/;"	f
PFCloseFile	.\src\Platform.c	/^void PFCloseFile(PFFileRef f) {$/;"	f
PFDatabaseDates	.\src\Platform.c	/^void PFDatabaseDates(DmOpenRef db, UInt32 *createDate, UInt32 *modDate) {$/;"	f
PFDeinit	.\src\Platform.c	/^void PFDeinit(void) {$/;"	f
PFDeleteDatabase	.\src\Platform.c	/^void PFDeleteDatabase(const char *dbname) {$/;"	f
PFDrawThickLines	.\src\Platform.c	/^void PFDrawThickLines(WinLineType *lines, Int16 numLines,$/;"	f
PFErrExit	.\src\Platform.c	/^void \/*@noreturn@*\/ PFErrExit(UInt32 ev) {$/;"	f
PFFileDates	.\src\Platform.c	/^void PFFileDates(PFFileRef f, UInt32 *createDate, UInt32 *modDate) {$/;"	f
PFFileMode	.\src\Platform.h	/^typedef enum { pfFileReadOnly, pfFileReadWrite, pfFileTruncate } PFFileMode;$/;"	t	typeref:enum:__anon96
PFFileNumRecords	.\src\Platform.c	/^UInt16 PFFileNumRecords(PFFileRef f) {$/;"	f
PFFileRef	.\src\Platform.h	/^typedef struct PFFileRefStructType *PFFileRef;$/;"	t	typeref:struct:PFFileRefStructType
PFFileRefStructType	.\src\Platform.c	/^struct PFFileRefStructType {$/;"	s	file:
PFFileSeek	.\src\Platform.h	/^typedef enum { pfSeekStart, pfSeekEnd, pfSeekCurrent} PFFileSeek;$/;"	t	typeref:enum:__anon97
PFFileSize	.\src\Platform.c	/^UInt32 PFFileSize(PFFileRef f) {$/;"	f
PFGetDatabaseInfo	.\src\Platform.c	/^MemPtr PFGetDatabaseInfo(DmOpenRef ref) {$/;"	f
PFGetEvent	.\src\Platform.c	/^Boolean PFGetEvent(EventPtr event, UInt32 maxTicks) {$/;"	f
PFGetFileDatabaseInfo	.\src\Platform.c	/^MemPtr PFGetFileDatabaseInfo(PFFileRef f) {$/;"	f
PFGetSeconds	.\src\Platform.c	/^UInt32 PFGetSeconds(void) {$/;"	f
PFGetSerialNumber	.\src\Platform.c	/^char *PFGetSerialNumber(void) {$/;"	f
PFGetTicks	.\src\Platform.c	/^UInt32 PFGetTicks(void) {$/;"	f
PFGetUserID	.\src\Platform.c	/^char *PFGetUserID(void) {$/;"	f
PFInit	.\src\Platform.c	/^void PFInit(void) {$/;"	f
PFIsCursorKey	.\src\Platform.h	62;"	d
PFKeyHeld	.\src\Platform.h	88;"	d
PFMalloc	.\src\Platform.c	/^void *PFMalloc(UInt32 size) {$/;"	f
PFMemFree	.\src\Platform.h	118;"	d
PFMemFree1	.\src\Platform.c	/^void PFMemFree1(\/*@only@*\/ \/*@out@*\/ \/*@null@*\/ void *ptr) {$/;"	f
PFNumDatabaseRecords	.\src\Platform.h	273;"	d
PFOpenDatabase	.\src\Platform.c	/^DmOpenRef PFOpenDatabase(const char *dbname, Boolean readOnly, Boolean createIfMissing) {$/;"	f
PFOpenFile	.\src\Platform.c	/^PFFileRef PFOpenFile(const char *filename, PFFileMode mode) {$/;"	f
PFPlaySound	.\src\Platform.c	/^void PFPlaySound(const char *filename, Int32 volume) {$/;"	f
PFQueryDatabase	.\src\Platform.c	/^MemHandle PFQueryDatabase(DmOpenRef ref, UInt16 recnum) {$/;"	f
PFReadFile	.\src\Platform.c	/^Int32 PFReadFile(PFFileRef f, void *dst, UInt32 maxSize) {$/;"	f
PFReadLine	.\src\Platform.c	/^Boolean PFReadLine(PFFileRef f, char *result) {$/;"	f
PFReadRecord	.\src\Platform.c	/^MemHandle PFReadRecord(PFFileRef f, UInt16 recNum) {$/;"	f
PFSafeMalloc	.\src\Platform.h	116;"	d
PFSeekFile	.\src\Platform.c	/^void PFSeekFile(PFFileRef f, PFFileSeek mode, Int32 whereTo) {$/;"	f
PFSendEvent	.\src\Platform.c	/^void PFSendEvent(EventPtr event) {$/;"	f
PFSendSimpleEvent	.\src\Platform.h	410;"	d
PFTimerHasExpired	.\src\Platform.c	/^Boolean PFTimerHasExpired(UInt32 startTime, UInt32 plusTicks) {$/;"	f
PFTruncateFile	.\src\Platform.c	/^void PFTruncateFile(PFFileRef f, UInt32 newLength) {$/;"	f
PFWriteFile	.\src\Platform.c	/^Int32 PFWriteFile(PFFileRef f, const void *data, UInt32 size) {$/;"	f
PI	.\extsrc\MathLib.h	74;"	d
PI	.\src\GlobalTypes.h	397;"	d
PIRADIANS	.\src\GlobalTypes.h	19;"	d
PLATFORM_H	.\src\Platform.h	11;"	d
PLATFORM_SECTION	.\src\Constants.h	59;"	d
POLYGON_H_INCLUDED	.\src\Polygon.h	7;"	d
PREFERENCES_H	.\src\FMPreferences.h	7;"	d
PREFERENCES_H_INCLUDED	.\src\PreferencesDialog.h	10;"	d
PREFSET1	.\src\FMPreferences.c	18;"	d	file:
PREF_V5_01	.\src\FMPreferences.c	19;"	d	file:
PREF_V6_0	.\src\FMPreferences.c	20;"	d	file:
PREF_V7_0	.\src\FMPreferences.c	21;"	d	file:
PREF_V7_1	.\src\FMPreferences.c	23;"	d	file:
PREF_V7_2	.\src\FMPreferences.c	24;"	d	file:
PanButton	.\src\ResourceDefines.h	229;"	d
PanForceActivate	.\src\MapForm.c	/^static void PanForceActivate(const Waypoint *wp) {$/;"	f	file:
PanForceDeactivate	.\src\MapForm.c	/^static void PanForceDeactivate(void) {$/;"	f	file:
PanGetMode	.\src\MapForm.c	/^static const char *PanGetMode(void) {$/;"	f	file:
PanGetPosition	.\src\MapForm.c	/^static void PanGetPosition(Int32 *lat, Int32 *lon) {$/;"	f	file:
PanHandleCursorKey	.\src\MapForm.c	/^static void PanHandleCursorKey(WChar key) {$/;"	f	file:
PanHandleKeyEvent	.\src\MapForm.c	/^static Boolean PanHandleKeyEvent(WChar key) {$/;"	f	file:
PanSetToPlanWaypoint	.\src\MapForm.c	/^static void PanSetToPlanWaypoint(Int16 wpNum) {$/;"	f	file:
PanSetToWaypoint	.\src\MapForm.c	/^static void PanSetToWaypoint(const Waypoint *wp) {$/;"	f	file:
PanToCursor	.\FMLangStrings.c	/^const char *PanToCursor = "Csr";$/;"	v
PanToCursor	.\src\FMStrings.c	/^const char *PanToCursor = "_Csr";$/;"	v
PanToWaypoint	.\FMLangStrings.c	/^const char *PanToWaypoint= "Wpt";$/;"	v
PanToWaypoint	.\src\FMStrings.c	/^const char *PanToWaypoint= "_Wpt";$/;"	v
PceNativeResourceCall	.\src\Utils.c	/^UInt32 PceNativeResourceCall(DmResType resType, DmResID resID,$/;"	f
PfErrThrowIf	.\src\Platform.c	26;"	d	file:
PilotMain	.\extsrc\Collapse.cpp	/^UInt32 PilotMain( UInt16 cmd, MemPtr cmdPBP, UInt16 launchFlags)$/;"	f
PilotMain	.\src\Platform.c	/^UInt32 PilotMain(UInt16 launchCode, MemPtr launchParameters, UInt16 launchFlags) {$/;"	f
PlatformModuleID	.\src\Modules.h	9;"	d
PlayRawVFSFile	.\src\Platform.c	/^static void PlayRawVFSFile(const char* filenameP, UInt32 sampleRate, SndStreamWidth sampleWidth, Int32 volume) {$/;"	f	file:
PolyPointType	.\src\Polygon.h	/^} PolyPointType;$/;"	t	typeref:struct:__anon100
PrefCancelButton	.\src\ResourceDefines.h	212;"	d
PrefGPSPopup	.\src\ResourceDefines.h	214;"	d
PrefGPSSourceList	.\src\ResourceDefines.h	215;"	d
PrefOKButton	.\src\ResourceDefines.h	211;"	d
PrefOneSecUpdateCheckbox	.\src\ResourceDefines.h	213;"	d
Preferences	.\src\Main.c	/^FMPreferencesType  Preferences;$/;"	v
PreferencesDialog	.\src\ResourceDefines.h	200;"	d
PreferencesDialogHandleEvent	.\src\PreferencesDialog.c	/^Boolean PreferencesDialogHandleEvent(EventPtr event) {$/;"	f
PreferencesModuleID	.\src\Modules.h	44;"	d
PrefsDataType	.\src\CpInterface.c	54;"	d	file:
PrefsHelpString	.\src\ResourceDefines.h	437;"	d
PrfReadPreferences	.\src\FMPreferences.c	/^Boolean PrfReadPreferences(FMPreferencesType *prefs) {$/;"	f
PrfSavePreferences	.\src\FMPreferences.c	/^void PrfSavePreferences(const FMPreferencesType *prefs) {$/;"	f
PromptForFlightCheckbox	.\src\ResourceDefines.h	209;"	d
ProxWaypointListType	.\src\DiversionForm.c	/^} ProxWaypointListType;$/;"	t	typeref:struct:__anon33	file:
ProxWaypointType	.\src\DiversionForm.c	/^} ProxWaypointType;$/;"	t	typeref:struct:__anon32	file:
Quadrant	.\src\CpInterface.c	/^typedef enum {north, west, south, east, noIntersection }Quadrant;$/;"	t	typeref:enum:__anon23	file:
RAD_PER_DEG	.\src\GlobalTypes.h	407;"	d
RAD_TO_DEG	.\src\GlobalTypes.h	412;"	d
RAD_TO_INT16	.\src\GlobalTypes.h	418;"	d
RAD_TO_INT32	.\src\GlobalTypes.h	419;"	d
RAD_TO_NM	.\src\GlobalTypes.h	416;"	d
RECORDSIZE	.\src\FlightDatabase.c	27;"	d	file:
REGCODEPRIME	.\src\Constants.h	20;"	d
REGCODEPRIME	.\src\Constants.h	32;"	d
REGCODEPRIME	.\src\Constants.h	35;"	d
REGISTRATION_CODE_H_INCLUDED	.\src\RegistrationCode.h	2;"	d
REJECT	.\src\Utils.c	933;"	d	file:
REQUESTED_BUFFER_SIZE	.\src\Platform.c	287;"	d	file:
RESULTSIZE	.\src\CpInterface.c	818;"	d	file:
REVOKE_COUNT	.\src\RegistrationCode.c	27;"	d	file:
RIGHT	.\src\Utils.c	929;"	d	file:
ROTATEPOINT	.\src\MapForm.c	115;"	d	file:
ROUND	.\src\MapAirspace.c	38;"	d	file:
RangeSettingDialog	.\src\ResourceDefines.h	317;"	d
RateCallback	.\src\VNAVDialog.c	/^static Boolean RateCallback(UInt16 button, float value) {$/;"	f	file:
ReadFromGPS	.\src\Gps.c	/^static Boolean ReadFromGPS(void) {$/;"	f	file:
ReadFromGarminGPS	.\src\Gps.c	/^Boolean ReadFromGarminGPS(void) {$/;"	f
ReadoutHeight	.\src\ResourceDefines.h	60;"	d
RecordEvent	.\src\Platform.c	/^static void RecordEvent(UInt32 timestamp, EventPtr event) {$/;"	f	file:
RegCodeFileName	.\src\FMPreferences.c	/^static const char *RegCodeFileName = "\/FM-RegCode.dat";$/;"	v	file:
RegcodeTesterAlert	.\src\ResourceDefines.h	433;"	d
RegistrationCodeField	.\src\ResourceDefines.h	210;"	d
RegistrationFailedAlert	.\src\ResourceDefines.h	398;"	d
RegistrationNagAlert	.\src\ResourceDefines.h	399;"	d
RegistrationSucceededAlert	.\src\ResourceDefines.h	397;"	d
ResetScan	.\src\DiversionForm.c	/^static void ResetScan(void) {$/;"	f	file:
ResizeForm	.\src\DiversionForm.c	/^static Boolean ResizeForm(FormPtr form) {$/;"	f	file:
ResizeForm	.\src\FlightPlanForm.c	/^static Boolean ResizeForm(FormPtr form) {$/;"	f	file:
ResizeForm	.\src\GPSForm.c	/^static Boolean ResizeForm(FormPtr form) {$/;"	f	file:
ResizeForm	.\src\MainForm.c	/^static Boolean ResizeForm(FormPtr form) {$/;"	f	file:
ResizeForm	.\src\MapForm.c	/^static Boolean ResizeForm(FormPtr form) {$/;"	f	file:
ResizeForm	.\src\TextDialog.c	/^static Boolean ResizeForm(FormPtr form) {$/;"	f	file:
ResizeForm	.\src\TimerForm.c	/^static Boolean ResizeForm(FormPtr form) {$/;"	f	file:
ReverseTransform	.\src\MapManager.c	/^static void ReverseTransform(Coord xi, Coord yi, Coord *xr, Coord *yr) {$/;"	f	file:
RomIncompatibleAlert	.\src\ResourceDefines.h	4;"	d
RomVersionCompatible	.\extsrc\Collapse.cpp	/^static Err RomVersionCompatible(UInt32 requiredVersion, UInt16 launchFlags)$/;"	f	file:
RomVersionCompatible	.\src\Platform.c	/^static Err RomVersionCompatible(UInt32 requiredVersion, UInt16 launchFlags) {$/;"	f	file:
RouteDataType	.\src\CpInterface.c	56;"	d	file:
RouteStruct	.\src\CpInterface.c	/^}RouteStruct ;$/;"	t	typeref:struct:__anon29	file:
RsCancelButton	.\src\ResourceDefines.h	323;"	d
RsIconPopup	.\src\ResourceDefines.h	318;"	d
RsIconPopupList	.\src\ResourceDefines.h	319;"	d
RsLabelPopup	.\src\ResourceDefines.h	320;"	d
RsLabelPopupList	.\src\ResourceDefines.h	321;"	d
RsOKButton	.\src\ResourceDefines.h	322;"	d
RunMapTests	.\src\MapForm.c	/^static void RunMapTests(void) {$/;"	f	file:
RunSimulation	.\src\Gps.c	/^static void RunSimulation(void) {$/;"	f	file:
RunwayCompareFunc	.\src\CpInterface.c	/^static Int16 RunwayCompareFunc(void *p1, void *p2, Int32 other) {$/;"	f	file:
RunwaySurfaceType	.\src\GlobalTypes.h	/^typedef enum { surfEither, surfHard, surfGrass } RunwaySurfaceType;$/;"	t	typeref:enum:__anon43
RwyDimFieldValue	.\src\MorePreferencesDialog.c	/^Int16 RwyDimFieldValue(FormPtr frm, UInt16 fld) {$/;"	f
SAVE_FLIGHT_DIALOG_INCLUDED	.\src\SaveFlightDialog.h	8;"	d
SCFBlankButton	.\src\ResourceDefines.h	175;"	d
SCFCancelButton	.\src\ResourceDefines.h	174;"	d
SCFCoPilotButton	.\src\ResourceDefines.h	179;"	d
SCFDeleteButton	.\src\ResourceDefines.h	178;"	d
SCFFMButton	.\src\ResourceDefines.h	180;"	d
SCFFlightDBGroup	.\src\ResourceDefines.h	170;"	d
SCFHelpString	.\src\ResourceDefines.h	436;"	d
SCFInfoField	.\src\ResourceDefines.h	176;"	d
SCFNextSegmentButton	.\src\ResourceDefines.h	177;"	d
SCFOKButton	.\src\ResourceDefines.h	173;"	d
SECTION2	.\src\Constants.h	45;"	d
SECTION3	.\src\Constants.h	46;"	d
SECTION4	.\src\Constants.h	47;"	d
SECTION5	.\src\Constants.h	48;"	d
SECTION6	.\src\Constants.h	49;"	d
SECTION7	.\src\Constants.h	50;"	d
SECTION8	.\src\Constants.h	51;"	d
SECTION9	.\src\Constants.h	52;"	d
SELECTCOPILOTFLIGHT_H_INCLUDED	.\src\SelectCopilotFlightDialog.h	9;"	d
SETBIT	.\src\AsDatabase.c	789;"	d	file:
SET_HASH	.\src\MapManager.c	311;"	d	file:
SIMULATION_H	.\src\SimulationDialog.h	2;"	d
SINTABSIZE	.\src\Utils.c	360;"	d	file:
SKIP_FIELD	.\src\GlobalTypes.h	442;"	d
SKIP_FIELD	.\src\Platform.c	28;"	d	file:
SKIP_LINE	.\src\GlobalTypes.h	448;"	d
SKIP_TO_WHITESPACE	.\src\GlobalTypes.h	446;"	d
SKIP_WHITESPACE	.\src\GlobalTypes.h	444;"	d
STARTUP_SECTION	.\src\Constants.h	56;"	d
STORELINE	.\src\Utils.c	1107;"	d	file:
SWAP16	.\src\TerrainCore.c	24;"	d	file:
SWAP16	.\src\TerrainCore.c	30;"	d	file:
SWAP32	.\src\TerrainCore.c	25;"	d	file:
SWAP32	.\src\TerrainCore.c	31;"	d	file:
SatConst	.\src\Main.c	/^SatConstType SatConst = NULL;$/;"	v
SatConstDraw	.\src\Instruments.c	/^void SatConstDraw(SatConstType sc) {$/;"	f
SatConstFree	.\src\Instruments.c	/^void SatConstFree(SatConstType sc) {$/;"	f
SatConstNew	.\src\Instruments.c	/^SatConstType SatConstNew(GPSType *gps, Coord x, Coord y, Coord w, Coord h) {$/;"	f
SatConstType	.\src\Instruments.h	/^typedef struct SatConstTypeStruct *SatConstType;$/;"	t	typeref:struct:SatConstTypeStruct
SatConstTypeStruct	.\src\Instruments.c	/^struct SatConstTypeStruct {$/;"	s	file:
SatReadout	.\src\ResourceDefines.h	62;"	d
SaveFlightCancelButton	.\src\ResourceDefines.h	197;"	d
SaveFlightDialog	.\src\ResourceDefines.h	194;"	d
SaveFlightDialogHandleEvent	.\src\SaveFlightDialog.c	/^Boolean SaveFlightDialogHandleEvent(EventPtr event) {$/;"	f
SaveFlightFileNameField	.\src\ResourceDefines.h	195;"	d
SaveFlightModuleID	.\src\Modules.h	34;"	d
SaveFlightOKButton	.\src\ResourceDefines.h	196;"	d
ScanForWaypoints	.\src\DiversionForm.c	/^static Boolean ScanForWaypoints(UInt16 maxTicks, Boolean stopOnEvent) {$/;"	f	file:
ScanningAlert	.\src\ResourceDefines.h	413;"	d
Screen	.\src\Main.c	/^ScreenInfoType Screen;$/;"	v
ScreenInfoType	.\src\GlobalTypes.h	/^} ScreenInfoType;$/;"	t	typeref:struct:__anon52
SegmentTable	.\src\CpInterface.c	/^} SegmentTable;$/;"	t	typeref:struct:__anon25	file:
SelectCopilotFlightDialog	.\src\ResourceDefines.h	171;"	d
SelectFlightModuleID	.\src\Modules.h	35;"	d
SendUpdateEvent	.\src\SelectCopilotFlightDialog.c	/^void SendUpdateEvent(void) {$/;"	f
SerialPortAlert	.\src\ResourceDefines.h	405;"	d
SetAppColourPreferences	.\src\Colours.c	/^static void SetAppColourPreferences(AppColourPrefsType *ap) {$/;"	f	file:
SetBits	.\extsrc\CollapseUtils.h	20;"	d
SetControlLabels	.\src\VNAVDialog.c	/^static void SetControlLabels(void) {$/;"	f	file:
SetDegreesAndMinutes	.\src\EditWaypointForm.c	/^static void SetDegreesAndMinutes(FormPtr form, UInt16 degrees,UInt16 minutes, $/;"	f	file:
SetDisplayUnits	.\src\MainForm.c	/^void SetDisplayUnits(UInt8 units) {$/;"	f
SetFieldTextFromStr	.\src\Utils.c	/^Err SetFieldTextFromStr(FieldPtr field, const char *s, Boolean redraw) {$/;"	f
SetFlightPlanInfoField	.\src\SelectCopilotFlightDialog.c	/^static void SetFlightPlanInfoField(Int16 flightNum, Int16 segment, Boolean redraw) {$/;"	f	file:
SetLegTrack	.\src\FlightPlan.c	/^static void SetLegTrack(FlightPlanType fp, Int16 legNum) {$/;"	f	file:
SetMapDialogStage	.\src\MapDialog.c	/^void SetMapDialogStage(void) {$/;"	f
SetTerrainRef	.\src\MapDialog.c	/^static void SetTerrainRef(void) {$/;"	f	file:
SetTextPtr	.\extsrc\Collapse.cpp	/^static Err SetTextPtr(FieldType* fldP, const Char* str, Boolean needToedraw)$/;"	f	file:
SetupDialog	.\src\MessageDialog.c	/^static void SetupDialog(FormPtr form) {$/;"	f	file:
SetupDialog	.\src\MorePreferencesDialog.c	/^static void SetupDialog(FormPtr frm) {$/;"	f	file:
SetupFlightListBox	.\src\SelectCopilotFlightDialog.c	/^void SetupFlightListBox(Boolean redraw) {$/;"	f
SetupFlightPlanData	.\src\FlightPlanForm.c	/^static void SetupFlightPlanData(void) {$/;"	f	file:
SetupList	.\src\FlightPlanForm.c	/^static void SetupList(FormPtr form, Boolean redraw) {$/;"	f	file:
SetupListLines	.\src\WPInfoDialog.c	/^static UInt16 SetupListLines(void) {$/;"	f	file:
SetupNewDisplay	.\src\MapForm.c	/^static void SetupNewDisplay(void) {$/;"	f	file:
SetupPreferencesDialog	.\src\PreferencesDialog.c	/^static void SetupPreferencesDialog(FormPtr frm) {$/;"	f	file:
SetupScreenInfo	.\src\Main.c	/^void SetupScreenInfo(void) {$/;"	f
SetupScrollbar	.\src\DiversionForm.c	/^static void SetupScrollbar(void) {$/;"	f	file:
SetupWaypointHash	.\src\MapManager.c	/^static void SetupWaypointHash(void) {$/;"	f	file:
ShortWaypointType	.\src\WDManager.h	/^} ShortWaypointType;$/;"	t	typeref:struct:__anon110
ShowOrHideEditControls	.\src\MapForm.c	/^static void ShowOrHideEditControls(Boolean planning) {$/;"	f	file:
SimAltitudeField	.\src\ResourceDefines.h	99;"	d
SimCancelButton	.\src\ResourceDefines.h	102;"	d
SimHeadingField	.\src\ResourceDefines.h	98;"	d
SimOKButton	.\src\ResourceDefines.h	101;"	d
SimPushButton	.\src\ResourceDefines.h	72;"	d
SimRate	.\src\Gps.c	53;"	d	file:
SimSpeedField	.\src\ResourceDefines.h	100;"	d
SimpleResizeForm	.\src\Utils.c	/^Boolean SimpleResizeForm(FormPtr form, Boolean isModal) {$/;"	f
SimulationAlert	.\src\ResourceDefines.h	423;"	d
SimulationDialog	.\src\ResourceDefines.h	97;"	d
SimulationDialogHandleEvent	.\src\SimulationDialog.c	/^Boolean SimulationDialogHandleEvent(EventPtr event)$/;"	f
SimulationDialogModuleID	.\src\Modules.c	17;"	d	file:
SimulationDialogModuleID	.\src\Modules.h	18;"	d
SmErrThrow	.\src\SimulationDialog.c	48;"	d	file:
SouthPushButton	.\src\ResourceDefines.h	145;"	d
Stars	.\src\Main.c	/^const char *Stars[] = { "", "*", "**","***","****" };$/;"	v
StartPushButton	.\src\ResourceDefines.h	71;"	d
StarterAppInfoPtr	.\extsrc\Collapse.cpp	/^typedef StarterAppInfoType* StarterAppInfoPtr;$/;"	t	file:
StarterAppInfoType	.\extsrc\Collapse.cpp	/^	} StarterAppInfoType;$/;"	t	typeref:struct:__anon2	file:
StarterPalmMain	.\extsrc\Collapse.cpp	/^static UInt32 StarterPalmMain(UInt16 cmd, MemPtr \/*cmdPBP*\/, UInt16 launchFlags)$/;"	f	file:
StarterPreferenceType	.\extsrc\Collapse.cpp	/^	} StarterPreferenceType;$/;"	t	typeref:struct:__anon1	file:
StopPushButton	.\src\ResourceDefines.h	70;"	d
StoreClipLine	.\src\MapAirspace.c	/^static Boolean StoreClipLine(WinLineType *line, Coord x1, Coord y1, Coord x2, Coord y2) {$/;"	f	file:
StoreIndexRecord	.\src\WDManager.c	/^static void StoreIndexRecord(DmOpenRef db, UInt16 recNum, MemPtr record) {$/;"	f	file:
Str2DOnly	.\FMLangStrings.c	/^const char *Str2DOnly = "2-D ONLY";$/;"	v
Str2DOnly	.\src\FMStrings.c	/^const char *Str2DOnly = "_2-D ONLY";$/;"	v
StrAltitude	.\FMLangStrings.c	/^const char *StrAltitude = "Altitude";$/;"	v
StrAltitude	.\src\FMStrings.c	/^const char *StrAltitude = "_Altitude";$/;"	v
StrAppendIdent	.\FMLangStrings.c	/^const char *StrAppendIdent = "APPEND %s";$/;"	v
StrAppendIdent	.\src\FMStrings.c	/^const char *StrAppendIdent = "_APPEND %s";$/;"	v
StrBYNOTAM	.\FMLangStrings.c	/^const char *StrBYNOTAM = "BY NOTAM";$/;"	v
StrBYNOTAM	.\src\FMStrings.c	/^const char *StrBYNOTAM = "_BY NOTAM";$/;"	v
StrBackCourse	.\FMLangStrings.c	/^const char *StrBackCourse = "BC";$/;"	v
StrBackCourse	.\src\FMStrings.c	/^const char *StrBackCourse = "_BC";$/;"	v
StrBlankFlight	.\FMLangStrings.c	/^ const char *StrBlankFlight = "Blank";$/;"	v
StrBlankFlight	.\src\FMStrings.c	/^ const char *StrBlankFlight = "_Blank";$/;"	v
StrCancelOBSFirst	.\FMLangStrings.c	/^const char *StrCancelOBSFirst = "CANCEL OBS FIRST";$/;"	v
StrCancelOBSFirst	.\src\FMStrings.c	/^const char *StrCancelOBSFirst = "_CANCEL OBS FIRST";$/;"	v
StrCheckingObstacleDB	.\FMLangStrings.c	/^const char *StrCheckingObstacleDB = " Checking Obstacle DB %d...";$/;"	v
StrCheckingObstacleDB	.\src\FMStrings.c	/^const char *StrCheckingObstacleDB = "_ Checking Obstacle DB %d...";$/;"	v
StrChooseGPS	.\FMLangStrings.c	/^const char *StrChooseGPS = "Choose GPS";$/;"	v
StrChooseGPS	.\src\FMStrings.c	/^const char *StrChooseGPS = "_Choose GPS";$/;"	v
StrCreatingdatabaseStructure	.\FMLangStrings.c	/^const char *StrCreatingdatabaseStructure = "Creating database structure";$/;"	v
StrCreatingdatabaseStructure	.\src\FMStrings.c	/^const char *StrCreatingdatabaseStructure = "_Creating database structure";$/;"	v
StrDegrees	.\FMLangStrings.c	/^const char *StrDegrees = "degrees";$/;"	v
StrDegrees	.\src\FMStrings.c	/^const char *StrDegrees = "_degrees";$/;"	v
StrDeleteIdent	.\FMLangStrings.c	/^const char *StrDeleteIdent = "DELETE %s";$/;"	v
StrDeleteIdent	.\src\FMStrings.c	/^const char *StrDeleteIdent = "_DELETE %s";$/;"	v
StrErrorDetectedPurgingDatabase	.\FMLangStrings.c	/^const char *StrErrorDetectedPurgingDatabase = "Error detected - purging database";$/;"	v
StrErrorDetectedPurgingDatabase	.\src\FMStrings.c	/^const char *StrErrorDetectedPurgingDatabase = "_Error detected - purging database";$/;"	v
StrFilenotfound	.\FMLangStrings.c	/^const char *StrFilenotfound = "File not found";$/;"	v
StrFilenotfound	.\src\FMStrings.c	/^const char *StrFilenotfound = "_File not found";$/;"	v
StrGPS	.\FMLangStrings.c	/^const char *StrGPS = "GPS";$/;"	v
StrGPS	.\src\FMStrings.c	/^const char *StrGPS = "_GPS";$/;"	v
StrGoto	.\FMLangStrings.c	/^const char *StrGoto = "GOTO";$/;"	v
StrGoto	.\src\FMStrings.c	/^const char *StrGoto = "_GOTO";$/;"	v
StrGotoIdent	.\FMLangStrings.c	/^const char *StrGotoIdent = "GOTO %s";$/;"	v
StrGotoIdent	.\src\FMStrings.c	/^const char *StrGotoIdent = "_GOTO %s";$/;"	v
StrH	.\FMLangStrings.c	/^const char *StrH = "H";$/;"	v
StrH	.\src\FMStrings.c	/^const char *StrH = "_H";$/;"	v
StrHeading	.\FMLangStrings.c	/^const char *StrHeading = "Heading";$/;"	v
StrHeading	.\src\FMStrings.c	/^const char *StrHeading = "_Heading";$/;"	v
StrHz	.\FMLangStrings.c	/^const char *StrHz = "Hz";$/;"	v
StrHz	.\src\FMStrings.c	/^const char *StrHz = "_Hz";$/;"	v
StrInitialiseMap	.\FMLangStrings.c	/^const char *StrInitialiseMap = "LOAD PLAN TO INITIALISE";$/;"	v
StrInitialiseMap	.\src\FMStrings.c	/^const char *StrInitialiseMap = "_LOAD PLAN TO INITIALISE";$/;"	v
StrLTMap	.\FMLangStrings.c	/^const char *StrLTMap = "<map";$/;"	v
StrLTMap	.\src\FMStrings.c	/^const char *StrLTMap = "_<map";$/;"	v
StrLTPan	.\FMLangStrings.c	/^const char *StrLTPan = "<pan";$/;"	v
StrLTPan	.\src\FMStrings.c	/^const char *StrLTPan = "_<pan";$/;"	v
StrLoaded	.\FMLangStrings.c	/^const char *StrLoaded = "LOADED";$/;"	v
StrLoaded	.\src\FMStrings.c	/^const char *StrLoaded = "_LOADED";$/;"	v
StrLoadingCoPilotSystemDatabase	.\FMLangStrings.c	/^const char *StrLoadingCoPilotSystemDatabase = " Loading CoPilot System Database";$/;"	v
StrLoadingCoPilotSystemDatabase	.\src\FMStrings.c	/^const char *StrLoadingCoPilotSystemDatabase = "_ Loading CoPilot System Database";$/;"	v
StrLoadingCoPilotUserDatabase	.\FMLangStrings.c	/^const char *StrLoadingCoPilotUserDatabase = " Loading CoPilot User Database";$/;"	v
StrLoadingCoPilotUserDatabase	.\src\FMStrings.c	/^const char *StrLoadingCoPilotUserDatabase = "_ Loading CoPilot User Database";$/;"	v
StrMap	.\FMLangStrings.c	/^const char *StrMap = "Map";$/;"	v
StrMap	.\src\FMStrings.c	/^const char *StrMap = "_Map";$/;"	v
StrMapNum	.\FMLangStrings.c	/^const char *StrMapNum = "Map %d";$/;"	v
StrMapNum	.\src\FMStrings.c	/^const char *StrMapNum = "_Map %d";$/;"	v
StrMark	.\FMLangStrings.c	/^const char *StrMark = "MRK";$/;"	v
StrMark	.\src\FMStrings.c	/^const char *StrMark = "_MRK";$/;"	v
StrNoFix	.\FMLangStrings.c	/^const char *StrNoFix = "No Fix";$/;"	v
StrNoFix	.\src\FMStrings.c	/^const char *StrNoFix = "_No Fix";$/;"	v
StrNoMemory	.\FMLangStrings.c	/^const char *StrNoMemory = "No Memory";$/;"	v
StrNoMemory	.\src\FMStrings.c	/^const char *StrNoMemory = "_No Memory";$/;"	v
StrNoPositionFix	.\FMLangStrings.c	/^const char *StrNoPositionFix = "NO POSITION FIX";$/;"	v
StrNoPositionFix	.\src\FMStrings.c	/^const char *StrNoPositionFix = "_NO POSITION FIX";$/;"	v
StrOFF	.\FMLangStrings.c	/^const char *StrOFF = "OFF";$/;"	v
StrOFF	.\src\FMStrings.c	/^const char *StrOFF = "_OFF";$/;"	v
StrPan	.\FMLangStrings.c	/^const char *StrPan = "Pan";$/;"	v
StrPan	.\src\FMStrings.c	/^const char *StrPan = "_Pan";$/;"	v
StrPlan	.\FMLangStrings.c	/^const char *StrPlan = "Plan";$/;"	v
StrPlan	.\src\FMStrings.c	/^const char *StrPlan = "_Plan";$/;"	v
StrPleaseWait	.\FMLangStrings.c	/^const char *StrPleaseWait = "Please Wait";$/;"	v
StrPleaseWait	.\src\FMStrings.c	/^const char *StrPleaseWait = "_Please Wait";$/;"	v
StrPurgingDatabase	.\FMLangStrings.c	/^const char *StrPurgingDatabase = "Purging database";$/;"	v
StrPurgingDatabase	.\src\FMStrings.c	/^const char *StrPurgingDatabase = "_Purging database";$/;"	v
StrSFC	.\FMLangStrings.c	/^const char *StrSFC = "SFC";$/;"	v
StrSFC	.\src\FMStrings.c	/^const char *StrSFC = "_SFC";$/;"	v
StrSearching	.\FMLangStrings.c	/^const char *StrSearching = "Searching...";$/;"	v
StrSearching	.\src\FMStrings.c	/^const char *StrSearching = "_Searching...";$/;"	v
StrSegmentNum	.\FMLangStrings.c	/^const char *StrSegmentNum = "Segment: %d\/%d";$/;"	v
StrSegmentNum	.\src\FMStrings.c	/^const char *StrSegmentNum = "_Segment: %d\/%d";$/;"	v
StrSetTimer	.\FMLangStrings.c	/^const char *StrSetTimer = "Set Timer (hhmm or mm)";$/;"	v
StrSetTimer	.\src\FMStrings.c	/^const char *StrSetTimer = "_Set Timer (hhmm or mm)";$/;"	v
StrSim	.\FMLangStrings.c	/^const char *StrSim = "Sim";$/;"	v
StrSim	.\src\FMStrings.c	/^const char *StrSim = "_Sim";$/;"	v
StrSpeed	.\FMLangStrings.c	/^const char *StrSpeed = "Speed";$/;"	v
StrSpeed	.\src\FMStrings.c	/^const char *StrSpeed = "_Speed";$/;"	v
StrStartAt	.\FMLangStrings.c	/^const char *StrStartAt = "START AT %s";$/;"	v
StrStartAt	.\src\FMStrings.c	/^const char *StrStartAt = "_START AT %s";$/;"	v
StrToDouble	.\src\Utils.c	/^double StrToDouble(const char *str) {$/;"	f
StrTref	.\FMLangStrings.c	/^const char *StrTref = "T-ref: %s%s";$/;"	v
StrTref	.\src\FMStrings.c	/^const char *StrTref = "_T-ref: %s%s";$/;"	v
StrUNLTD	.\FMLangStrings.c	/^const char *StrUNLTD = "UNLTD";$/;"	v
StrUNLTD	.\src\FMStrings.c	/^const char *StrUNLTD = "_UNLTD";$/;"	v
StrV	.\FMLangStrings.c	/^const char *StrV = "V";$/;"	v
StrV	.\src\FMStrings.c	/^const char *StrV = "_V";$/;"	v
StrVP	.\FMLangStrings.c	/^const char *StrVP = "VP";$/;"	v
StrVP	.\src\FMStrings.c	/^const char *StrVP = "_VP";$/;"	v
StrWA	.\FMLangStrings.c	/^const char *StrWA = "WA";$/;"	v
StrWA	.\src\FMStrings.c	/^const char *StrWA = "_WA";$/;"	v
StrWarnGPSNotDetected	.\FMLangStrings.c	/^const char *StrWarnGPSNotDetected = "WARN: GPS NOT DETECTED";$/;"	v
StrWarnGPSNotDetected	.\src\FMStrings.c	/^const char *StrWarnGPSNotDetected = "_WARN: GPS NOT DETECTED";$/;"	v
StrWarnNoPosition	.\FMLangStrings.c	/^const char *StrWarnNoPosition = "WARN: NO POSITION";$/;"	v
StrWarnNoPosition	.\src\FMStrings.c	/^const char *StrWarnNoPosition = "_WARN: NO POSITION";$/;"	v
StringIsNumeric	.\src\Utils.c	/^Boolean StringIsNumeric(char *str) {$/;"	f
SurfaceSearchFunc	.\src\CpInterface.c	/^static Int16 SurfaceSearchFunc(void const *searchData, void const *arrayData, Int32 other) {$/;"	f	file:
TCElement	.\src\TerrainType.c	/^typedef UInt8 TCElement;$/;"	t	file:
TCFLOAT	.\src\TerrainType.c	89;"	d	file:
TERRAIN_CORE_INCLUDED	.\src\TerrainCore.h	10;"	d
TERRAIN_TYPE_H_INCLUDED	.\src\TerrainType.h	19;"	d
TEXTDIALOG_H_INCLUDED	.\src\TextDialog.h	11;"	d
TFRDatabaseType	.\src\Constants.h	42;"	d
TIMERFORM_H	.\src\TimerForm.h	2;"	d
TIMERFORM_SECTION	.\src\Constants.h	72;"	d
TIMERSTART	.\src\MapManager.c	25;"	d	file:
TIMERSTART	.\src\MapManager.c	28;"	d	file:
TIMERSTOP	.\src\MapManager.c	26;"	d	file:
TIMERSTOP	.\src\MapManager.c	29;"	d	file:
TIME_START	.\src\Logging.h	104;"	d
TIME_START	.\src\Logging.h	93;"	d
TIME_STOP	.\src\Logging.h	105;"	d
TIME_STOP	.\src\Logging.h	94;"	d
TLAddPoint	.\src\TrackLog.c	/^void TLAddPoint(GPSPosnData *gps)  {$/;"	f
TLClear	.\src\TrackLog.c	/^void TLClear(void)  {$/;"	f
TLClose	.\src\TrackLog.c	/^void TLClose(void)  {$/;"	f
TLErrThrowIf	.\src\TrackLog.c	48;"	d	file:
TLGetForwardPoint	.\src\TrackLog.c	/^Boolean TLGetForwardPoint(TLRefType *ref, TLInternalRecordType *result) {$/;"	f
TLGetNumNewEntries	.\src\TrackLog.c	/^Int16 TLGetNumNewEntries(TLRefType ref) {$/;"	f
TLGetPoint	.\src\TrackLog.c	/^Boolean TLGetPoint(TLRefType *ref, TLInternalRecordType *result)  {$/;"	f
TLInitGetPoint	.\src\TrackLog.c	/^TLRefType TLInitGetPoint(void) {$/;"	f
TLInternalRecordType	.\src\TrackLog.h	/^} TLInternalRecordType;$/;"	t	typeref:struct:__anon102
TLOpen	.\src\TrackLog.c	/^void TLOpen(void)  {$/;"	f
TLRefType	.\src\TrackLog.h	/^typedef Int16 TLRefType;$/;"	t
TLWriteBreak	.\src\TrackLog.c	/^void TLWriteBreak() {$/;"	f
TOP	.\src\Utils.c	926;"	d	file:
TRACE	.\src\Logging.h	91;"	d
TRACE	.\src\Logging.h	99;"	d
TRACKLOG_H_INCLUDED	.\src\TrackLog.h	13;"	d
TRACKUP_ORIGIN_Y	.\src\MapForm.c	88;"	d	file:
TRUE	.\src\TerrainType.c	22;"	d	file:
TapPlanCancel	.\src\MapForm.c	/^static void TapPlanCancel(void) {$/;"	f	file:
TapPlanEdit	.\src\MapForm.c	/^Boolean TapPlanEdit(void) {$/;"	f
TapPlanStateMachineUpdate	.\src\MapForm.c	/^static void TapPlanStateMachineUpdate(Int16 menuID) {$/;"	f	file:
TaskTimer	.\src\Utils.c	/^Int32 TaskTimer(Int16 timerRef, Boolean done) {$/;"	f
Terrain	.\src\Main.c	/^TerrainType Terrain = NULL;$/;"	v
TerrainCoreParamType	.\src\TerrainCore.h	/^struct TerrainCoreParamType {$/;"	s
TerrainFree	.\src\TerrainType.c	/^void TerrainFree(TerrainType t) {$/;"	f
TerrainLoadPalette	.\src\TerrainType.c	/^void TerrainLoadPalette(TerrainType t, PFFileRef f, Boolean nightMode) {$/;"	f
TerrainModuleID	.\src\Modules.h	31;"	d
TerrainNew	.\src\TerrainType.c	/^TerrainType TerrainNew($/;"	f
TerrainPaletteType	.\src\TerrainType.h	/^typedef enum { terrainSys = -1, terrainOff, terrainNormal, terrainNormalWarn, terrainWarn } TerrainPaletteType;$/;"	t	typeref:enum:__anon101
TerrainRefButtons	.\FMLangStrings.c	/^const char *TerrainRefButtons[4] = { "AMSL", "GPS", "Cancel", NULL };$/;"	v
TerrainRefButtons	.\src\FMStrings.c	/^const char *TerrainRefButtons[4] = { "_AMSL", "_GPS", "_Cancel", NULL };$/;"	v
TerrainRefPrompt	.\FMLangStrings.c	/^const char *TerrainRefPrompt = "Set Terrain Reference";$/;"	v
TerrainRefPrompt	.\src\FMStrings.c	/^const char *TerrainRefPrompt = "_Set Terrain Reference";$/;"	v
TerrainRender	.\src\TerrainType.c	/^void TerrainRender($/;"	f
TerrainRenderCore	.\src\TerrainCore.c	/^unsigned int TerrainRenderCore(const void *emulStateP, void *userData, Call68KFuncType *call68kf) {$/;"	f
TerrainRenderNorthUp	.\src\TerrainType.c	/^void TerrainRenderNorthUp($/;"	f
TerrainSetAlertAlt	.\src\TerrainType.c	/^void TerrainSetAlertAlt(TerrainType t, Int32 altInFeet) {$/;"	f
TerrainSetPalette	.\src\TerrainType.c	/^void TerrainSetPalette(TerrainType t, TerrainPaletteType type, const char *fileName, Boolean nightMode) {$/;"	f
TerrainSetPaletteEntry	.\src\TerrainType.c	/^void TerrainSetPaletteEntry(TerrainType t, Int32 altFrom, Int32 altTo, UInt8 r, UInt8 g, UInt8 b) {$/;"	f
TerrainType	.\src\TerrainType.h	/^typedef struct TerrainTypeStruct * TerrainType;$/;"	t	typeref:struct:TerrainTypeStruct
TerrainTypeStruct	.\src\TerrainType.c	/^struct TerrainTypeStruct {$/;"	s	file:
TestActionType	.\src\GlobalTypes.h	/^} TestActionType;$/;"	t	typeref:enum:__anon61
TestArm	.\test-arm.c	/^unsigned int TestArm(const void *emulStateP, void *userData, Call68KFuncType *call68kf) {$/;"	f
TextDialog	.\src\ResourceDefines.h	391;"	d
TextDialogField	.\src\ResourceDefines.h	392;"	d
TextDialogHandleEvent	.\src\TextDialog.c	/^Boolean TextDialogHandleEvent (EventPtr event)$/;"	f
TextDialogModuleID	.\src\Modules.h	24;"	d
TextDialogSet	.\src\TextDialog.c	/^void TextDialogSet(const char *in) {$/;"	f
TheGadgetHandler	.\extsrc\Collapse.cpp	/^static Boolean TheGadgetHandler(FormGadgetTypeInCallback* pGadget,$/;"	f	file:
TimeDisplayType	.\src\GlobalTypes.h	/^typedef enum {timeETE, timeETA, timeLocal, timeUTC, timeETV, timeETT } TimeDisplayType;$/;"	t	typeref:enum:__anon56
TimeModeStr	.\FMLangStrings.c	/^const char *TimeModeStr[] = { "ETE","ETA","LOC","UTC","ETV", "ETT" };$/;"	v
TimeModeStr	.\src\FMStrings.c	/^const char *TimeModeStr[] = { "_ETE","_ETA","_LOC","_UTC","_ETV", "_ETT" };$/;"	v
Timer1Button	.\src\ResourceDefines.h	154;"	d
Timer1LabelSelector	.\src\ResourceDefines.h	158;"	d
Timer1Seconds	.\src\ResourceDefines.h	162;"	d
Timer1Selector	.\src\ResourceDefines.h	150;"	d
Timer2Button	.\src\ResourceDefines.h	155;"	d
Timer2LabelSelector	.\src\ResourceDefines.h	159;"	d
Timer2Seconds	.\src\ResourceDefines.h	163;"	d
Timer2Selector	.\src\ResourceDefines.h	151;"	d
Timer3Button	.\src\ResourceDefines.h	156;"	d
Timer3LabelSelector	.\src\ResourceDefines.h	160;"	d
Timer3Seconds	.\src\ResourceDefines.h	164;"	d
Timer3Selector	.\src\ResourceDefines.h	152;"	d
Timer4Button	.\src\ResourceDefines.h	157;"	d
Timer4LabelSelector	.\src\ResourceDefines.h	161;"	d
Timer4Seconds	.\src\ResourceDefines.h	165;"	d
Timer4Selector	.\src\ResourceDefines.h	153;"	d
TimerButtons	.\FMLangStrings.c	/^const char *TimerButtons[4] = { "Once", "Recycle","Count-up","Cancel" };$/;"	v
TimerButtons	.\src\FMStrings.c	/^const char *TimerButtons[4] = { "_Once", "_Recycle","_Count-up","_Cancel" };$/;"	v
TimerForm	.\src\ResourceDefines.h	149;"	d
TimerFormHandleEvent	.\src\TimerForm.c	/^Boolean TimerFormHandleEvent(EventPtr event)$/;"	f
TimerHasExpired	.\src\Utils.c	/^Boolean TimerHasExpired(UInt32 startTime, UInt32 plusTicks) {$/;"	f
TimerMenu	.\src\ResourceDefines.h	11;"	d
TimerMessage	.\FMLangStrings.c	/^const char *TimerMessage = "%s timer expired";$/;"	v
TimerMessage	.\src\FMStrings.c	/^const char *TimerMessage = "_%s timer expired";$/;"	v
TimerMessageButton	.\FMLangStrings.c	/^const char *TimerMessageButton = "Timer";$/;"	v
TimerMessageButton	.\src\FMStrings.c	/^const char *TimerMessageButton = "_Timer";$/;"	v
TimerModes	.\FMLangStrings.c	/^const char *TimerModes[3] = { "Stop", "Flight", "Run" };$/;"	v
TimerModes	.\src\FMStrings.c	/^const char *TimerModes[3] = { "_Stop", "_Flight", "_Run" };$/;"	v
TimerModuleID	.\src\Modules.h	32;"	d
TimerTicksLeft	.\src\Utils.c	/^UInt32 TimerTicksLeft(UInt32 startTime, UInt32 plusTicks) {$/;"	f
TimerType	.\src\GlobalTypes.h	/^} TimerType;$/;"	t	typeref:struct:__anon48
ToFlag	.\src\MainForm.c	156;"	d	file:
ToFromFlagFont	.\src\MainForm.c	158;"	d	file:
TrackLogModuleID	.\src\Modules.h	30;"	d
TrackLogSettingType	.\src\GlobalTypes.h	/^typedef enum { trackLogOff = 0, trackLog1s, trackLog5s, trackLog10s } TrackLogSettingType;$/;"	t	typeref:enum:__anon47
TruePushButton	.\src\ResourceDefines.h	205;"	d
TurnAnticipateOffOption	.\FMLangStrings.c	/^const char *TurnAnticipateOffOption="Off";$/;"	v
TurnAnticipateOffOption	.\src\FMStrings.c	/^const char *TurnAnticipateOffOption="_Off";$/;"	v
TurnIn2MinutesString	.\FMLangStrings.c	/^const char *TurnIn2MinutesString = "Approaching Turn";$/;"	v
TurnIn2MinutesString	.\src\FMStrings.c	/^const char *TurnIn2MinutesString = "_Approaching Turn";$/;"	v
TzAlert	.\src\ResourceDefines.h	410;"	d
UC	.\src\Main.c	/^UserConversionType UC;$/;"	v
UInt64	.\src\GlobalTypes.h	/^typedef unsigned long long UInt64;$/;"	t
UKSMALL	.\src\MapForm.c	2661;"	d	file:
UNSELECTED	.\src\DiversionForm.c	143;"	d	file:
UPGRADES_H_INCLUDED	.\src\Upgrades.h	11;"	d
UTILS_H	.\src\Utils.h	2;"	d
UTILS_SECTION	.\src\Constants.h	76;"	d
UnitsPushButtonGroup	.\src\ResourceDefines.h	218;"	d
UpdateAltitude	.\src\GPSForm.c	/^static void UpdateAltitude(void) {$/;"	f	file:
UpdateDisplay	.\src\DiversionForm.c	/^static void UpdateDisplay(void) {$/;"	f	file:
UpdateDisplay	.\src\FlightPlanForm.c	/^static void UpdateDisplay(void) {$/;"	f	file:
UpdateDisplay	.\src\GPSForm.c	/^static void UpdateDisplay(void) {$/;"	f	file:
UpdateDisplay	.\src\MainForm.c	/^static void UpdateDisplay(void) {$/;"	f	file:
UpdateDisplay	.\src\MapForm.c	/^static void UpdateDisplay(void) {$/;"	f	file:
UpdateForm	.\src\TimerForm.c	/^static void UpdateForm(Boolean full) {$/;"	f	file:
UpdateStateMachine	.\src\Gps.c	/^static void UpdateStateMachine(Boolean gpsMessageReceived) {$/;"	f	file:
UpdateTimers	.\src\Main.c	/^static void UpdateTimers(void) {$/;"	f	file:
UpdateTrackLog	.\src\Main.c	/^static void UpdateTrackLog(void) {$/;"	f	file:
UseCopilotFlightsCheckbox	.\src\ResourceDefines.h	208;"	d
UseDefaultCopilotFlight	.\src\Main.c	/^static void UseDefaultCopilotFlight(void) {$/;"	f	file:
UserConversionType	.\src\GlobalTypes.h	/^} UserConversionType;$/;"	t	typeref:struct:__anon55
UtilsModuleID	.\src\Modules.h	42;"	d
VALIDGPSFIX	.\src\GlobalTypes.h	616;"	d
VNAVAltType	.\src\FlightPlan.h	/^typedef enum { vnavAltAMSL, vnavAltAboveWP } VNAVAltType;$/;"	t	typeref:enum:__anon36
VNAVCalculations	.\src\NavManager.c	/^static void VNAVCalculations(float gpsSpeed, float gpsAltitude) {$/;"	f	file:
VNAVDIALOG_H_INCLUDED	.\src\VNAVDialog.h	7;"	d
VNAVDataType	.\src\FlightPlan.h	/^} VNAVDataType;$/;"	t	typeref:struct:__anon38
VNAVDialog	.\src\ResourceDefines.h	88;"	d
VNAVDialogHandleEvent	.\src\VNAVDialog.c	/^Boolean VNAVDialogHandleEvent(EventPtr event) {$/;"	f
VNAVIn2MinutesString	.\FMLangStrings.c	/^const char *VNAVIn2MinutesString = "Approaching VNAV";$/;"	v
VNAVIn2MinutesString	.\src\FMStrings.c	/^const char *VNAVIn2MinutesString = "_Approaching VNAV";$/;"	v
VNAVOptionString	.\FMLangStrings.c	/^const char *VNAVOptionString = "VNAV";$/;"	v
VNAVOptionString	.\src\FMStrings.c	/^const char *VNAVOptionString = "_VNAV";$/;"	v
VNAVRateType	.\src\FlightPlan.h	/^typedef enum { vnavRatePerMin, vnavRatePerMile, vnavDegrees } VNAVRateType;$/;"	t	typeref:enum:__anon37
VNAltButtons	.\FMLangStrings.c	/^const char *VNAltButtons[4] = { "AMSL", "Above", "Cancel", NULL };$/;"	v
VNAltButtons	.\src\FMStrings.c	/^const char *VNAltButtons[4] = { "_AMSL", "_Above", "_Cancel", NULL };$/;"	v
VNAltPrompt	.\FMLangStrings.c	/^const char *VNAltPrompt = "Set Target Altitude";$/;"	v
VNAltPrompt	.\src\FMStrings.c	/^const char *VNAltPrompt = "_Set Target Altitude";$/;"	v
VNByButtons	.\FMLangStrings.c	/^const char *VNByButtons[4] = { "OK", "Waypoint", "Cancel", NULL };$/;"	v
VNByButtons	.\src\FMStrings.c	/^const char *VNByButtons[4] = { "_OK", "_Waypoint", "_Cancel", NULL };$/;"	v
VNByPrompt	.\FMLangStrings.c	/^const char *VNByPrompt = "Set distance before";$/;"	v
VNByPrompt	.\src\FMStrings.c	/^const char *VNByPrompt = "_Set distance before";$/;"	v
VNGPSAltPrompt	.\FMLangStrings.c	/^const char *VNGPSAltPrompt = "Set Barometric Altitude";$/;"	v
VNGPSAltPrompt	.\src\FMStrings.c	/^const char *VNGPSAltPrompt = "_Set Barometric Altitude";$/;"	v
VNGPSButtons	.\FMLangStrings.c	/^const char *VNGPSButtons[4] = { "AMSL", "Reset", "Cancel", NULL };$/;"	v
VNGPSButtons	.\src\FMStrings.c	/^const char *VNGPSButtons[4] = { "_AMSL", "_Reset", "_Cancel", NULL };$/;"	v
VNRateButtons	.\FMLangStrings.c	/^const char *VNRateButtons[2][4] = {$/;"	v
VNRateButtons	.\src\FMStrings.c	/^const char *VNRateButtons[2][4] = {$/;"	v
VNRatePrompt	.\FMLangStrings.c	/^const char *VNRatePrompt = "Set Rate";$/;"	v
VNRatePrompt	.\src\FMStrings.c	/^const char *VNRatePrompt = "_Set Rate";$/;"	v
VSIDraw	.\src\Instruments.c	/^void VSIDraw(VSIType vsi, Int32 vs, Int32 requiredVS) {$/;"	f
VSIFree	.\src\Instruments.c	/^void VSIFree(VSIType vsi) {$/;"	f
VSINew	.\src\Instruments.c	/^VSIType VSINew(Coord x, Coord y, Coord width, Coord height, Boolean leftHanded, Int32 maxDeflection) {$/;"	f
VSIType	.\src\Instruments.h	/^typedef struct VSITypeStruct *VSIType;$/;"	t	typeref:struct:VSITypeStruct
VSITypeStruct	.\src\Instruments.c	/^struct VSITypeStruct {$/;"	s	file:
ValidRegistration	.\src\Main.c	/^UInt8              ValidRegistration = 0;$/;"	v
ValidateAndSave	.\src\SimulationDialog.c	/^static Boolean ValidateAndSave(void) {$/;"	f	file:
ValidateAndSetPrefs	.\src\MorePreferencesDialog.c	/^static Boolean ValidateAndSetPrefs(FormPtr frm) {$/;"	f	file:
ValidateAndStorePreferences	.\src\PreferencesDialog.c	/^static Boolean ValidateAndStorePreferences(FormPtr frm){$/;"	f	file:
ValidateAndTranslateInputs	.\src\EditWaypointForm.c	/^static Err ValidateAndTranslateInputs(void **record, UInt16 *recSize) {$/;"	f	file:
VnAltSelector	.\src\ResourceDefines.h	89;"	d
VnBySelector	.\src\ResourceDefines.h	91;"	d
VnCancelButton	.\src\ResourceDefines.h	93;"	d
VnClearButton	.\src\ResourceDefines.h	94;"	d
VnGPSAltSelector	.\src\ResourceDefines.h	95;"	d
VnOKButton	.\src\ResourceDefines.h	92;"	d
VnRateSelector	.\src\ResourceDefines.h	90;"	d
WARN_GPS_NOT_STARTED	.\src\MainForm.c	163;"	d	file:
WARN_NO_POSITION_FIX	.\src\MainForm.c	162;"	d	file:
WCFLOAT	.\src\TerrainType.h	61;"	d
WDMAddDB	.\src\WDManager.c	/^WDMDatabaseIDType WDMAddDB(WDMHandle ds, const char *dbname, const char *externalName, const char *compactDBName,$/;"	f
WDMDatabaseIDType	.\src\WDManager.h	/^typedef UInt32 WDMDatabaseIDType;$/;"	t
WDMDeleteWaypoint	.\src\WDManager.c	/^Boolean WDMDeleteWaypoint(WDMHandle ds, WaypointIDType wpID) {$/;"	f
WDMFree	.\src\WDManager.c	/^void WDMFree(WDMHandle ds) {$/;"	f
WDMFreeSearch	.\src\WDManager.c	/^void WDMFreeSearch(WDMSearchHandle \/*@out@*\/ \/*@only@*\/ sh) {$/;"	f
WDMGetProxWaypoint	.\src\WDManager.c	/^ShortWaypointType *WDMGetProxWaypoint(WDMSearchHandle sh, Int32 maxRange) {$/;"	f
WDMGetShortWaypoint	.\src\WDManager.c	/^ShortWaypointType *WDMGetShortWaypoint(WDMHandle ds, WaypointIDType wpID) {$/;"	f
WDMGetWaypoint	.\src\WDManager.c	/^Waypoint *WDMGetWaypoint(WDMHandle ds, WaypointIDType wpID) {$/;"	f
WDMGetWaypointByUniqueID	.\src\WDManager.c	/^WaypointIDType WDMGetWaypointByUniqueID(WDMHandle ds, WDMDatabaseIDType db, UInt32 uniqueID)  {$/;"	f
WDMGetWaypointDatabase	.\src\WDManager.c	/^WaypointIDType WDMGetWaypointDatabase(WaypointIDType wpID) {$/;"	f
WDMGetWaypointFromDB	.\src\WDManager.c	/^Waypoint *WDMGetWaypointFromDB(WDMHandle ds, WDMDatabaseIDType dbID,$/;"	f
WDMGetWaypointType	.\src\WDManager.c	/^WaypointClassType WDMGetWaypointType(const Waypoint *wp) {$/;"	f
WDMHandle	.\src\WDManager.h	/^typedef struct WDMHandleStructType * WDMHandle;$/;"	t	typeref:struct:WDMHandleStructType
WDMHandleStructType	.\src\WDManager.c	/^struct WDMHandleStructType {$/;"	s	file:
WDMIndexOK	.\src\WDManager.c	/^Boolean WDMIndexOK(WDMHandle ds) {$/;"	f
WDMInitProxScan	.\src\WDManager.c	/^WDMSearchHandle WDMInitProxScan(WDMHandle ds, Int32 lat, Int32 lon, $/;"	f
WDMIntegrityCheck	.\src\WDManager.c	/^void WDMIntegrityCheck(WDMHandle ds) {$/;"	f
WDMIsExternal	.\src\WDManager.c	/^Boolean WDMIsExternal (WDMHandle ds, WDMDatabaseIDType dbid) {$/;"	f
WDMLoadDatabase	.\src\WDManager.c	/^extern Boolean WDMLoadDatabase(WDMHandle ds, WDMDatabaseIDType dbid, const char *filename) {$/;"	f
WDMModuleID	.\src\Modules.h	25;"	d
WDMMoveExternal	.\src\WDManager.c	/^Boolean WDMMoveExternal(WDMHandle ds, WDMDatabaseIDType dbid) {$/;"	f
WDMMoveInternal	.\src\WDManager.c	/^Boolean WDMMoveInternal(WDMHandle ds, WDMDatabaseIDType dbid) {$/;"	f
WDMNew	.\src\WDManager.c	/^WDMHandle WDMNew(void) {$/;"	f
WDMNewWaypoint	.\src\WDManager.c	/^Waypoint *WDMNewWaypoint(const char *ident, const char *name, Int32 lat, Int32 lon, float magVarn) {$/;"	f
WDMSaveDatabase	.\src\WDManager.c	/^Boolean WDMSaveDatabase(WDMHandle ds, WDMDatabaseIDType dbid, const char *filename) {$/;"	f
WDMSaveWaypoint	.\src\WDManager.c	/^WaypointIDType WDMSaveWaypoint(WDMHandle ds, WDMDatabaseIDType db, $/;"	f
WDMScanArea	.\src\WDManager.c	/^Boolean WDMScanArea(WDMHandle ds, WDMDatabaseIDType dbids, $/;"	f
WDMSearchForWaypointByLocation	.\src\WDManager.c	/^WaypointIDType WDMSearchForWaypointByLocation(WDMHandle ds, char *ident, Int32 lat, Int32 lon, Int32 range) {$/;"	f
WDMSearchHandle	.\src\WDManager.h	/^typedef struct WDMSearchStructType * WDMSearchHandle;$/;"	t	typeref:struct:WDMSearchStructType
WDMSearchStructType	.\src\WDManager.c	/^struct WDMSearchStructType {$/;"	s	file:
WDMUpdateIndex	.\src\WDManager.c	/^Boolean WDMUpdateIndex(WDMHandle ds, Int16 (*f)(Int16) ) {$/;"	f
WDM_H_INCLUDED	.\src\WDManager.h	9;"	d
WPDataset	.\src\Main.c	/^WDMHandle WPDataset;$/;"	v
WPGotoButton	.\src\ResourceDefines.h	385;"	d
WPINFO_H_INCLUDED	.\src\WPInfoDialog.h	13;"	d
WPInfoAllPushbutton	.\src\ResourceDefines.h	380;"	d
WPInfoDescField	.\src\ResourceDefines.h	379;"	d
WPInfoDialog	.\src\ResourceDefines.h	376;"	d
WPInfoDialogHandleEvent	.\src\WPInfoDialog.c	/^Boolean WPInfoDialogHandleEvent(EventPtr event)$/;"	f
WPInfoFormModuleID	.\src\Modules.c	16;"	d	file:
WPInfoFormModuleID	.\src\Modules.h	15;"	d
WPInfoFreqPushbutton	.\src\ResourceDefines.h	381;"	d
WPInfoILSPushbutton	.\src\ResourceDefines.h	383;"	d
WPInfoIdElevField	.\src\ResourceDefines.h	378;"	d
WPInfoListbox	.\src\ResourceDefines.h	377;"	d
WPInfoPushbuttonGroup	.\src\ResourceDefines.h	389;"	d
WPInfoRwyPushbutton	.\src\ResourceDefines.h	382;"	d
WPInfoSetWaypointInfo	.\src\WPInfoDialog.c	/^void WPInfoSetWaypointInfo(WaypointIDType wpID) {$/;"	f
WPOKButton	.\src\ResourceDefines.h	384;"	d
WPPanMapButton	.\src\ResourceDefines.h	386;"	d
WRAPMAX	.\src\GlobalTypes.h	614;"	d
WarningGPSLost	.\src\ResourceDefines.h	67;"	d
WarningNoFix	.\src\ResourceDefines.h	66;"	d
WarningNotStarted	.\src\ResourceDefines.h	65;"	d
Waypoint	.\src\WDManager.h	/^typedef Waypoint_v4_0 Waypoint;$/;"	t
WaypointClassType	.\src\WDManager.h	/^} WaypointClassType;$/;"	t	typeref:enum:__anon108
WaypointCompare	.\src\FlightPlan.c	/^Boolean WaypointCompare(const FlightPlanLegWaypointType *wp1, const FlightPlanLegWaypointType *wp2) {$/;"	f
WaypointField	.\src\ResourceDefines.h	64;"	d
WaypointIDType	.\src\WDManager.h	/^typedef UInt32 WaypointIDType;$/;"	t
Waypoint_v4_0	.\src\WDManager.h	/^} Waypoint_v4_0;$/;"	t	typeref:struct:__anon109
WestPushButton	.\src\ResourceDefines.h	146;"	d
WpIdErrorAlert	.\src\ResourceDefines.h	408;"	d
WpLatErrorAlert	.\src\ResourceDefines.h	406;"	d
WpLonErrorAlert	.\src\ResourceDefines.h	407;"	d
WpMagVarAlert	.\src\ResourceDefines.h	409;"	d
WriteInternal	.\src\TrackLog.c	/^static void WriteInternal(Int32 lat, Int32 lon) {$/;"	f	file:
_FIXED_H_INCLUDED	.\src\Fixed.h	8;"	d
_GARMINCHARS_H	.\extsrc\GarminChars.h	11;"	d
_GccRelocateData	.\FlightMaster-sections.s	/^_GccRelocateData:$/;"	l
_H	.\src\ModTemplate.h	7;"	d
__GPSLIB68K_H__	.\extsrc\GPSLib68K.h	11;"	d
__GPSLIBSYSTRAPNUMS_H__	.\extsrc\GPSLibSysTrapNums.h	14;"	d
__GPSLIB_H__	.\extsrc\GPSLib.h	14;"	d
__MATHLIB_H__	.\extsrc\MathLib.h	32;"	d
__PALMCHARS_H__	.\extsrc\PalmChars.h	20;"	d
__PALMNAVIGATOR_H__	.\extsrc\PalmNavigator.h	20;"	d
a	.\src\FlightPlan.h	/^	FlightPlanLegWaypointType a;$/;"	m	struct:__anon40
aaLines	.\src\Colours.c	/^static const RGBColorType aaLines     = { 0, 255,255,255 };$/;"	v	file:
aaLines	.\src\GlobalTypes.h	/^	IndexedColorType aaLines;$/;"	m	struct:__anon51
aboveBottomReadoutY	.\src\MainForm.c	/^static const Coord aboveBottomReadoutY = 132;$/;"	v	file:
acDistance	.\src\CpInterface.c	/^	UInt32 acDistance;$/;"	m	struct:__anon26	file:
acTakeoffs	.\src\CpInterface.c	/^	UInt32 acTakeoffs;$/;"	m	struct:__anon26	file:
acTime	.\src\CpInterface.c	/^	UInt32 acTime;$/;"	m	struct:__anon26	file:
ack	.\src\AlarmManager.c	/^	Boolean ack;$/;"	m	struct:__anon11	file:
acos	.\extsrc\MathLib.c	/^double acos(double x) {$/;"	f
acosh	.\extsrc\MathLib.c	/^double acosh(double x) {$/;"	f
action	.\src\MessageDialog.h	/^	UInt16 action[MAX_MESSAGE_ITEMS];$/;"	m	struct:__anon93
activePlayback	.\src\Platform.c	/^static oeCallbackDataType *activePlayback = NULL; \/\/ communication semaphore$/;"	v	file:
adjust	.\src\Polygon.c	/^Coord adjust(FP14 val)$/;"	f
aiPoints	.\src\AIGauge.c	/^static PointType aiPoints[NUM_AI_POINTS];$/;"	v	file:
airIDs	.\src\MapManager.c	/^	AirspaceIDType *airIDs;$/;"	m	struct:MapTypeStruct	file:
aircraft	.\src\CpInterface.c	/^	UInt32 aircraft;$/;"	m	struct:__anon26	file:
aircraft	.\src\GlobalTypes.h	/^	WinHandle aircraft;$/;"	m	struct:__anon53
aircraftDim	.\src\GlobalTypes.h	/^	Coord aircraftDim;$/;"	m	struct:__anon53
airfield	.\src\DiversionForm.c	/^static enum { airfield = 0,vor,ndb,intersection,all } displayFilter = airfield;$/;"	e	enum:__anon34	file:
airfield	.\src\MapIcon.h	/^	ExtraAirfieldInfoType airfield;$/;"	m	union:__anon84
airfieldIcon	.\src\Colours.c	/^static const RGBColorType airfieldIcon = { 0, 200, 0, 200 };$/;"	v	file:
airfieldIcon	.\src\GlobalTypes.h	/^	IndexedColorType airfieldIcon;$/;"	m	struct:__anon51
airspace	.\src\Colours.c	/^static const RGBColorType airspace[7] = {$/;"	v	file:
airspace	.\src\GlobalTypes.h	/^	AirspaceClassType airspace;$/;"	m	struct:__anon46
airspace	.\src\GlobalTypes.h	/^	IndexedColorType airspace[7];$/;"	m	struct:__anon51
airspace	.\src\MapManager.c	/^	MapAirspaceType *airspace;$/;"	m	struct:MapTypeStruct	file:
airspace	.\src\MapManager.h	/^	} airspace;$/;"	m	struct:MapSelectionStructType	typeref:struct:MapSelectionStructType::__anon92
airspaceDBNames	.\src\AsDatabase.c	/^static char *airspaceDBNames[MAX_AIRSPACE_DATABASES] = { $/;"	v	file:
airspaceIndex	.\src\MapManager.c	/^	Int16  *airspaceIndex;$/;"	m	struct:MapTypeStruct	file:
airspaceLabels	.\src\GlobalTypes.h	/^	AirspaceClassType airspaceLabels;$/;"	m	struct:__anon46
airspaceLabels	.\src\MapManager.c	/^	AirspaceClassType airspaceTypes, airspaceLabels;$/;"	m	struct:MapTypeStruct	file:
airspaceOutline	.\src\Colours.c	/^static const RGBColorType airspaceOutline[8] = {$/;"	v	file:
airspaceOutline	.\src\GlobalTypes.h	/^	IndexedColorType airspaceOutline[8];$/;"	m	struct:__anon51
airspaceTypes	.\src\MapManager.c	/^	AirspaceClassType airspaceTypes, airspaceLabels;$/;"	m	struct:MapTypeStruct	file:
airw	.\src\CpInterface.c	/^typedef enum {airw, sid, star, approach} CpAirwayType;$/;"	e	enum:__anon24	file:
airway	.\src\Colours.c	/^static const RGBColorType airway = { 0, 128, 128, 128 };$/;"	v	file:
airway	.\src\CpInterface.c	/^	Char       airway[airwaySize+1];$/;"	m	struct:__anon28	file:
airway	.\src\GlobalTypes.h	/^	IndexedColorType airway;$/;"	m	struct:__anon51
airwayIdent	.\src\MapAirspace.h	/^	char  airwayIdent[MAX_AIRWAY_CHARS];$/;"	m	struct:__anon75
airwaySize	.\src\CpInterface.c	129;"	d	file:
airwayType	.\src\CpInterface.c	/^	CpAirwayType airwayType:3;$/;"	m	struct:__anon28	file:
alarm	.\src\AlarmManager.c	/^} alarm[MAX_ALARMS];$/;"	v	typeref:struct:__anon11
alarmAlert	.\src\AlarmManager.h	/^	alarmAlert $/;"	e	enum:__anon12
alarmMessage	.\src\AlarmManager.h	/^	alarmMessage, $/;"	e	enum:__anon12
alarmOff	.\src\AlarmManager.h	/^	alarmOff = 0, $/;"	e	enum:__anon12
alarmWarning	.\src\AlarmManager.h	/^	alarmWarning, $/;"	e	enum:__anon12
alertAltitudeIndex	.\src\TerrainType.c	/^	Int16 alertAltitudeIndex;	\/\/ If != -1, this is the index which represents$/;"	m	struct:TerrainTypeStruct	file:
all	.\src\DiversionForm.c	/^static enum { airfield = 0,vor,ndb,intersection,all } displayFilter = airfield;$/;"	e	enum:__anon34	file:
all	.\src\GlobalTypes.h	/^	WDMDatabaseIDType all;$/;"	m	struct:__anon45
all	.\src\WPInfoDialog.c	/^static enum {all = 0, frequencies, runways, ils} displayMode = all;$/;"	e	enum:__anon111	file:
alphaDialogMapping	.\src\Main.c	/^static const FunctionKeymapType alphaDialogMapping[] = {$/;"	v	file:
altAgl	.\src\AsDatabase.h	/^	altAmsl, altAgl, altFL, altNotam$/;"	e	enum:__anon15
altAmsl	.\src\AsDatabase.h	/^	altAmsl, altAgl, altFL, altNotam$/;"	e	enum:__anon15
altError	.\src\NavManager.c	/^	Int32 altError;			\/\/ user units, above or below glideslope$/;"	m	struct:__anon94	file:
altFL	.\src\AsDatabase.h	/^	altAmsl, altAgl, altFL, altNotam$/;"	e	enum:__anon15
altMSL	.\extsrc\GPSLib.h	/^    float       altMSL;     \/* altitude above mean sea level (meters)       *\/$/;"	m	struct:__anon7
altNotam	.\src\AsDatabase.h	/^	altAmsl, altAgl, altFL, altNotam$/;"	e	enum:__anon15
altSlider	.\src\MapForm.c	/^static Int32 altSlider = 0;$/;"	v	file:
altType	.\src\FlightPlan.h	/^	VNAVAltType altType;$/;"	m	struct:__anon38
altWGS84	.\extsrc\GPSLib.h	/^    float       altWGS84;   \/* altitude above WGS84 ellipsoid (meters)      *\/$/;"	m	struct:__anon7
alternateAvailable	.\src\CpInterface.c	/^static Boolean alternateAvailable;$/;"	v	file:
alternateLoaded	.\src\CpInterface.c	/^static Boolean alternateLoaded;$/;"	v	file:
alternateTime	.\src\CpInterface.c	/^static const UInt16 alternateTime = (UInt16)(-1);$/;"	v	file:
altitude	.\src\CpInterface.c	/^	double     altitude;$/;"	m	struct:__anon28	file:
altitude	.\src\FlightPlan.h	/^	float altitude; \/\/ in feet$/;"	m	struct:__anon40
altitude	.\src\FlightPlanForm.c	/^	Int32 altitude;$/;"	m	struct:__anon42	file:
altitude	.\src\GlobalTypes.h	/^	UInt16 altitude;	\/* 0=feet, 1=metres *\/$/;"	m	struct:__anon54
altitude	.\src\Gps.c	/^	float altitude;$/;"	m	struct:__anon65	file:
altitude	.\src\Gps.h	/^	float		altitude;	\/\/ corrected altitude$/;"	m	struct:__anon67
altitude	.\src\NavManager.c	/^	Int32 altitude; \/\/ user units$/;"	m	struct:__anon94	file:
altitudeConv	.\src\GlobalTypes.h	/^	float altitudeConv;$/;"	m	struct:__anon55
altitudeUnits	.\src\CpInterface.c	/^	UInt16 altitudeUnits;               \/\/ {ft, m}$/;"	m	struct:__anon30	file:
altitudeUnits	.\src\GlobalTypes.h	/^	const char *altitudeUnits;$/;"	m	struct:__anon55
appDefinedEvents	.\src\GlobalTypes.h	/^} appDefinedEvents;$/;"	t	typeref:enum:__anon59
appFileCreator	.\extsrc\Collapse.cpp	81;"	d	file:
appFlagY	.\src\MainForm.c	/^static const Coord appFlagY       = 120;$/;"	v	file:
appLaunchTime	.\src\Platform.c	/^static UInt32 appLaunchTime = 0;$/;"	v	file:
appPrefID	.\extsrc\Collapse.cpp	83;"	d	file:
appPrefVersionNum	.\extsrc\Collapse.cpp	84;"	d	file:
appVersionNum	.\extsrc\Collapse.cpp	82;"	d	file:
approach	.\src\CpInterface.c	/^typedef enum {airw, sid, star, approach} CpAirwayType;$/;"	e	enum:__anon24	file:
aptFilter	.\src\GlobalTypes.h	38;"	d
armUnits	.\src\CpInterface.c	/^	UInt16 armUnits;                    \/\/ {in, cm, metre}$/;"	m	struct:__anon30	file:
asSubTypeMask	.\src\AsDatabase.h	47;"	d
asTypeAirspace	.\src\AsDatabase.h	43;"	d
asTypeAirway	.\src\AsDatabase.h	44;"	d
asTypeClassA	.\src\AsDatabase.h	32;"	d
asTypeClassB	.\src\AsDatabase.h	33;"	d
asTypeClassBG	.\src\AsDatabase.h	42;"	d
asTypeClassC	.\src\AsDatabase.h	34;"	d
asTypeClassD	.\src\AsDatabase.h	35;"	d
asTypeClassE	.\src\AsDatabase.h	36;"	d
asTypeClassF	.\src\AsDatabase.h	37;"	d
asTypeClassG	.\src\AsDatabase.h	38;"	d
asTypeHighAirway	.\src\AsDatabase.h	40;"	d
asTypeLowAirway	.\src\AsDatabase.h	39;"	d
asTypeMask	.\src\AsDatabase.h	46;"	d
asTypeOther	.\src\AsDatabase.h	41;"	d
asTypeSUAS	.\src\AsDatabase.h	31;"	d
asdb	.\src\AsDatabase.c	/^static AirspaceDBType *asdb[MAX_AIRSPACE_DATABASES] = { NULL, NULL, NULL, NULL };$/;"	v	file:
asin	.\extsrc\MathLib.c	/^double asin(double x) {$/;"	f
asinh	.\extsrc\MathLib.c	/^double asinh(double x) {$/;"	f
assert	.\src\GlobalTypes.h	627;"	d
atan	.\extsrc\MathLib.c	/^double atan(double x) {$/;"	f
atan2	.\extsrc\MathLib.c	/^double atan2(double y, double x) {$/;"	f
atanh	.\extsrc\MathLib.c	/^double atanh(double x) {$/;"	f
atz	.\src\Colours.c	/^static const RGBColorType atz   = { 0, 240,0,240 };$/;"	v	file:
atz	.\src\GlobalTypes.h	/^	IndexedColorType atz;$/;"	m	struct:__anon51
atzCosPlot	.\src\MapIcon.c	/^static Int16 atzCosPlot[ATZ_POINTS];$/;"	v	file:
atzRadius	.\src\GlobalTypes.h	/^	UInt16 atzRadius;$/;"	m	struct:__anon50
atzSinPlot	.\src\MapIcon.c	/^static Int16 atzSinPlot[ATZ_POINTS];$/;"	v	file:
autoReset	.\src\GlobalTypes.h	/^	Boolean autoReset;		\/\/ true if timer should reset to initialValue$/;"	m	struct:__anon48
autoStartGPS	.\src\GlobalTypes.h	/^	Boolean autoStartGPS;$/;"	m	struct:__anon50
azimuth	.\extsrc\GPSLib.h	/^    float       azimuth;    \/* azimuth (radians)                    *\/$/;"	m	struct:__anon3
azimuth	.\src\Gps.h	/^	Int16           azimuth[GPSNumSats+1];$/;"	m	struct:__anon68
b	.\src\FlightPlan.h	/^	FlightPlanLegWaypointType b;$/;"	m	struct:__anon40
b19200	.\src\Gps.c	/^	b19200,$/;"	e	enum:__anon63	file:
b4800	.\src\Gps.c	/^	b4800,$/;"	e	enum:__anon63	file:
b57600	.\src\Gps.c	/^	b57600$/;"	e	enum:__anon63	file:
backCourse	.\src\NavManager.c	/^	Boolean backCourse; \/\/ true if crsPB is the backcourse, i.e. AP > AB$/;"	m	struct:__anon94	file:
backCourseFlag	.\src\MainForm.c	/^static const PointType backCourseFlag = { 13+134\/2-35, 17+134*5\/8 };$/;"	v	file:
background	.\src\Colours.c	/^static const RGBColorType background = { 0, 255,255,255 };$/;"	v	file:
background	.\src\GlobalTypes.h	/^	IndexedColorType background;$/;"	m	struct:__anon51
bankAngle	.\src\NavManager.c	/^	float  bankAngle;			\/\/ angle of bank in degrees (-ve = left)$/;"	m	struct:__anon94	file:
barHeight	.\src\Instruments.c	/^	Coord barWidth, barHeight;	\/\/ signal bars$/;"	m	struct:SatConstTypeStruct	file:
barWidth	.\src\Instruments.c	/^	Coord barWidth, barHeight;	\/\/ signal bars$/;"	m	struct:SatConstTypeStruct	file:
barx	.\src\Instruments.c	/^	Coord barx, bary;			\/\/ x & y position of *bottom* of first bar$/;"	m	struct:SatConstTypeStruct	file:
bary	.\src\Instruments.c	/^	Coord barx, bary;			\/\/ x & y position of *bottom* of first bar$/;"	m	struct:SatConstTypeStruct	file:
bat	.\src\Gps.h	/^	GPSBattLevelData 	bat;$/;"	m	struct:__anon72
battLevel	.\src\Gps.h	/^	Int8 		battLevel;$/;"	m	struct:__anon69
bdryCursorX	.\src\MapAirspace.c	/^static Coord bdryCursorX, bdryCursorY;$/;"	v	file:
bdryCursorY	.\src\MapAirspace.c	/^static Coord bdryCursorX, bdryCursorY;$/;"	v	file:
bearing	.\src\DiversionForm.c	/^	Int16          bearing;$/;"	m	struct:__anon32	file:
bearingFrom	.\src\DiversionForm.c	/^	Int16          bearingFrom;$/;"	m	struct:__anon32	file:
bearingFrom	.\src\NavManager.c	/^	Int16 bearingFrom;	\/\/ degrees, user units$/;"	m	struct:__anon94	file:
bearingHotspot	.\src\MainForm.c	/^static RectangleType bearingHotspot;$/;"	v	file:
bearingTo	.\src\NavManager.c	/^	Int16 bearingTo;	\/\/ degrees, user units$/;"	m	struct:__anon94	file:
black	.\src\Colours.c	/^static const RGBColorType black        = { 0, 0,0,0};$/;"	v	file:
black	.\src\GlobalTypes.h	/^	IndexedColorType black;$/;"	m	struct:__anon51
blacks	.\src\Colours.c	/^static const UIColorTableEntries blacks[10] = {$/;"	v	file:
blankLat	.\src\GPSForm.c	/^static const char *blankLat="--\\260--.----'-";$/;"	v	file:
blankTime	.\src\MapForm.c	/^static const char          blankTime[] = "--:--";$/;"	v	file:
bluetoothID	.\src\GlobalTypes.h	/^	BtLibDeviceAddressType bluetoothID;$/;"	m	struct:__anon50
boldHeight	.\src\GlobalTypes.h	/^	Coord boldHeight;$/;"	m	struct:__anon52
bottomReadoutY	.\src\MainForm.c	/^static const Coord bottomReadoutY = 144;$/;"	v	file:
bounds	.\src\MapAirspace.h	/^	RectangleType bounds;$/;"	m	struct:__anon75
brightRed	.\src\Colours.c	/^static const RGBColorType brightRed     = { 0, 255, 48, 48 };$/;"	v	file:
buttonToMenuMapping	.\src\CommandDialog.c	/^} buttonToMenuMapping[] = {$/;"	v	typeref:struct:__anon20
buttons	.\src\KeypadDialog.c	/^static const char **buttons;$/;"	v	file:
cache	.\src\TerrainCore.h	/^	UInt8 *cache;$/;"	m	struct:TerrainCoreParamType
callbackFn	.\src\EditWaypointForm.c	/^static Boolean (*callbackFn)(Boolean validate, const Waypoint *wp, UInt16 size, Boolean deleted);$/;"	v	file:
cancelMessage	.\src\DiversionMgr.c	/^static char cancelMessage[128];	\/\/ message dialog uses this$/;"	v	file:
cbrt	.\extsrc\MathLib.c	/^double cbrt(double x) {$/;"	f
ceil	.\extsrc\MathLib.c	/^double ceil(double x) {$/;"	f
centreHotspot	.\src\MainForm.c	/^static RectangleType centreHotspot;$/;"	v	file:
classOther	.\src\Colours.c	/^static const RGBColorType classOther = { 0, 0, 0, 255 };$/;"	v	file:
classOther	.\src\GlobalTypes.h	/^	IndexedColorType classOther;$/;"	m	struct:__anon51
climbRateUnits	.\src\CpInterface.c	/^	UInt16 climbRateUnits;              \/\/ {ftPm, ftPs, mPm, mPs}$/;"	m	struct:__anon30	file:
clipBottom	.\src\MapManager.c	/^static Coord clipLeft, clipRight, clipTop, clipBottom;$/;"	v	file:
clipCount	.\src\MapAirspace.h	/^	Int8 clipCount;$/;"	m	struct:__anon75
clipLeft	.\src\MapManager.c	/^static Coord clipLeft, clipRight, clipTop, clipBottom;$/;"	v	file:
clipLimit	.\src\MapAirspace.c	/^static Coord clipLimit;$/;"	v	file:
clipLimitX	.\src\MapManager.c	/^	Coord clipLimitX;$/;"	m	struct:MapTypeStruct	file:
clipLimitY	.\src\MapManager.c	/^	Coord clipLimitY;$/;"	m	struct:MapTypeStruct	file:
clipRight	.\src\MapManager.c	/^static Coord clipLeft, clipRight, clipTop, clipBottom;$/;"	v	file:
clipTop	.\src\MapManager.c	/^static Coord clipLeft, clipRight, clipTop, clipBottom;$/;"	v	file:
col_dir_x	.\src\TerrainCore.h	/^	Int32 col_dir_x;  $/;"	m	struct:TerrainCoreParamType
col_dir_y	.\src\TerrainCore.h	/^	Int32 col_dir_y;$/;"	m	struct:TerrainCoreParamType
col_inc_x	.\src\TerrainCore.h	/^	Int32 col_inc_x;$/;"	m	struct:TerrainCoreParamType
col_inc_y	.\src\TerrainCore.h	/^	Int32 col_inc_y;		\/\/ controls for when to step through x & y down the screen$/;"	m	struct:TerrainCoreParamType
col_src_h	.\src\TerrainCore.h	/^	Int32 col_src_h;$/;"	m	struct:TerrainCoreParamType
col_src_w	.\src\TerrainCore.h	/^	Int32 col_src_w;		\/\/ width\/height of the source rectangle$/;"	m	struct:TerrainCoreParamType
col_src_x	.\src\TerrainCore.h	/^	Int32 col_src_x;$/;"	m	struct:TerrainCoreParamType
col_src_y	.\src\TerrainCore.h	/^	Int32 col_src_y;		\/\/ source x & y coords as we step down the screen$/;"	m	struct:TerrainCoreParamType
collapseStateDown	.\extsrc\CollapseUtils.h	11;"	d
collapseStateLockDown	.\extsrc\CollapseUtils.h	12;"	d
collapseStateLockUp	.\extsrc\CollapseUtils.h	8;"	d
collapseStateModalUser	.\extsrc\CollapseUtils.h	13;"	d
collapseStateUp	.\extsrc\CollapseUtils.h	9;"	d
collapseStateUser	.\extsrc\CollapseUtils.h	10;"	d
commandPopupMapping	.\src\Main.c	/^static const FunctionKeymapType commandPopupMapping[] = {$/;"	v	file:
compact	.\src\WDManager.c	/^	enum { compact, external, internal } source;$/;"	e	enum:__anon105::__anon106	file:
compassTextY	.\src\MainForm.c	/^static const Coord compassTextY   = 37;$/;"	v	file:
complete	.\src\MapManager.c	/^	Boolean complete;	\/\/ set true when the map is finished being built$/;"	m	struct:MapTypeStruct	file:
controlID	.\src\CommandDialog.c	/^	UInt16 controlID;$/;"	m	struct:__anon20	file:
copysign	.\extsrc\MathLib.c	/^double copysign(double x, double y) {$/;"	f
cos	.\extsrc\MathLib.c	/^double cos(double x) {$/;"	f
cosh	.\extsrc\MathLib.c	/^double cosh(double x) {$/;"	f
cosine	.\src\Fixed.c	/^fp14 cosine[] =$/;"	v
cosine	.\src\MapManager.c	/^	Int32 sine, cosine;$/;"	m	struct:__anon89	file:
cosine	.\src\Utils.c	/^static const Int32 cosine[SINTABSIZE\/8+1] = { 131072, 131071, 131069, 131066, 131062, 131056, 131049, 131041, 131032, 131022, 131010, 130997, 130983, 130967, 130951, 130933, 130914, 130893, 130872, 130849, 130825, 130800, 130773, 130745, 130716, 130686, 130655, 130622, 130588, 130553, 130517, 130479, 130440, 130400, 130359, 130317, 130273, 130228, 130182, 130134, 130086, 130036, 129985, 129933, 129879, 129824, 129768, 129711, 129653, 129593, 129532, 129470, 129407, 129343, 129277, 129210, 129142, 129072, 129002, 128930, 128857, 128783, 128707, 128631, 128553, 128474, 128394, 128312, 128230, 128146, 128061, 127974, 127887, 127798, 127708, 127617, 127525, 127431, 127336, 127241, 127143, 127045, 126946, 126845, 126743, 126640, 126536, 126430, 126324, 126216, 126107, 125996, 125885, 125772, 125659, 125544, 125428, 125310, 125192, 125072, 124951, 124829, 124706, 124582, 124456, 124329, 124201, 124072, 123942, 123811, 123678, 123544, 123410, 123274, 123136, 122998, 122858, 122718, 122576, 122433, 122289, 122143, 121997, 121849, 121701, 121551, 121400, 121248, 121094, 120940, 120784, 120627, 120470, 120311, 120150, 119989, 119827, 119663, 119499, 119333, 119166, 118998, 118829, 118659, 118487, 118315, 118141, 117966, 117791, 117614, 117436, 117256, 117076, 116895, 116712, 116529, 116344, 116158, 115972, 115784, 115595, 115405, 115213, 115021, 114828, 114633, 114438, 114241, 114044, 113845, 113645, 113444, 113242, 113039, 112835, 112630, 112424, 112216, 112008, 111799, 111588, 111377, 111164, 110951, 110736, 110520, 110304, 110086, 109867, 109647, 109427, 109205, 108982, 108758, 108533, 108307, 108080, 107852, 107623, 107393, 107162, 106930, 106697, 106463, 106228, 105992, 105755, 105517, 105278, 105037, 104796, 104554, 104311, 104067, 103822, 103577, 103330, 103082, 102833, 102583, 102332, 102081, 101828, 101574, 101320, 101064, 100807, 100550, 100292, 100032, 99772, 99511, 99248, 98985, 98721, 98456, 98190, 97923, 97656, 97387, 97117, 96847, 96576, 96303, 96030, 95756, 95481, 95205, 94928, 94650, 94372, 94092, 93812, 93530, 93248, 92965, 92681 };$/;"	v	file:
coslat	.\src\MapManager.c	/^	double coslat;$/;"	m	struct:MapTypeStruct	file:
coslat	.\src\WDManager.c	/^	double coslat;$/;"	m	struct:WDMSearchStructType	file:
cost	.\src\CpInterface.c	/^	double cost[costItems];$/;"	m	struct:__anon26	file:
costItems	.\src\CpInterface.c	130;"	d	file:
costText	.\src\CpInterface.c	/^	char costText[costItems][1];$/;"	m	struct:__anon26	file:
costType	.\src\CpInterface.c	/^	UInt32 costType[costItems];$/;"	m	struct:__anon26	file:
countdown	.\src\GlobalTypes.h	/^	Boolean countdown;		\/\/ true if timer counts down$/;"	m	struct:__anon48
cpSystem	.\src\GlobalTypes.h	/^	WDMDatabaseIDType cpSystem;$/;"	m	struct:__anon45
cpUser	.\src\GlobalTypes.h	/^	WDMDatabaseIDType cpUser;$/;"	m	struct:__anon45
cpuWarn	.\src\MapForm.c	/^static Int16 cpuWarn = 2;$/;"	v	file:
crsAB	.\src\NavManager.c	/^	double crsAB; \/\/ radians, course from A to B$/;"	m	struct:__anon94	file:
crsBC	.\src\NavManager.c	/^	double crsBC;			\/\/ radians, course of next leg BC$/;"	m	struct:__anon94	file:
crsDB	.\src\NavManager.c	/^	double crsDB;   \/\/ radians, course from aircraft to B$/;"	m	struct:__anon94	file:
crsPB	.\src\NavManager.c	/^	double crsPB; \/\/ radians, course from P (along track) to B$/;"	m	struct:__anon94	file:
currBuffSize	.\src\Gps.c	/^static Int16 	currBuffSize;		\/* chars used in gpsMessageBuff *\/$/;"	v	file:
currCycleTicks	.\src\Gps.c	/^static UInt32	currCycleTicks;		\/* ticks read once at start of cycle *\/$/;"	v	file:
currentFlightIndex	.\src\CpInterface.c	/^	UInt16 currentFlightIndex;          \/\/ index of current flight$/;"	m	struct:__anon30	file:
currentLeg	.\src\FlightPlan.c	/^	Int16 currentLeg;$/;"	m	struct:FlightPlanType	file:
currentPlanSegment	.\src\CpInterface.c	/^	UInt16 currentPlanSegment;$/;"	m	struct:__anon26	file:
currentSelection	.\src\DiversionForm.c	/^static Int16 currentSelection = noListSelection;$/;"	v	file:
currentSource	.\src\MapManager.c	/^	MapSourceType currentSource;$/;"	m	struct:MapTypeStruct	file:
currentWbSegment	.\src\CpInterface.c	/^	UInt16 currentWbSegment;$/;"	m	struct:__anon26	file:
cycleCounter	.\src\Gps.c	/^static UInt16   cycleCounter = 0;$/;"	v	file:
darkBorder	.\src\Platform.h	/^enum { noBorder = -1, darkBorder = 256, lightBorder = 257 };$/;"	e	enum:__anon98
data	.\src\AlarmManager.c	/^	MessageDialogDataType *data;$/;"	m	struct:__anon11	file:
dataDisplay	.\src\Colours.c	/^static const RGBColorType dataDisplay = { 0, 0, 0, 0 };$/;"	v	file:
dataDisplay	.\src\GlobalTypes.h	/^	IndexedColorType dataDisplay;$/;"	m	struct:__anon51
day	.\src\Gps.h	/^	UInt16 day;$/;"	m	struct:__anon66
db	.\src\WDManager.c	/^	DatabaseType *db;$/;"	m	struct:WDMSearchStructType	file:
db	.\src\WDManager.c	/^	DatabaseType db[MAX_DBS];$/;"	m	struct:WDMHandleStructType	file:
dbids	.\src\WDManager.c	/^	WDMDatabaseIDType dbids;$/;"	m	struct:WDMSearchStructType	file:
defaultAircraft	.\src\CpInterface.c	/^	UInt32 defaultAircraft;             \/\/ uniqueId$/;"	m	struct:__anon30	file:
defaultPilot	.\src\CpInterface.c	/^	UInt32 defaultPilot;                \/\/ uniqueId$/;"	m	struct:__anon30	file:
defaultPlanType	.\src\CpInterface.c	/^	Int32  defaultPlanType;             \/\/ {canadian, american, icao}$/;"	m	struct:__anon30	file:
degreesCrsPB	.\src\NavManager.c	/^	Int16  degreesCrsPB; \/\/ degrees, user units (true\/magnetic)$/;"	m	struct:__anon94	file:
deltaAltitude	.\src\Gps.h	/^	float		deltaAltitude;  \/* altitude change in feet between RMC messages *\/$/;"	m	struct:__anon67
deltaHeading	.\src\Gps.h	/^	float		deltaHeading;   \/* heading change in degrees between RMC messages *\/$/;"	m	struct:__anon67
deltaTime	.\src\Gps.h	/^	float		deltaTime;	\/* secs between RMC messages. 0=invalid *\/$/;"	m	struct:__anon67
description	.\src\AsDatabase.h	/^	char description[1];$/;"	m	struct:__anon18
description	.\src\CpInterface.c	/^	char description[1];$/;"	m	struct:__anon26	file:
detail	.\src\HeadingIndicator.c	/^	Int16 detail;	\/\/ 0 = minimum, 3 = maximum$/;"	m	struct:HSITypeStruct	file:
dgnm	.\src\AvCalcs.c	/^      float gnm,hnm,dgnm,dhnm;$/;"	m	struct:__anon19	file:
dgnm	.\src\MagVarn.c	/^      float gnm,hnm,dgnm,dhnm;$/;"	m	struct:__anon73	file:
dhnm	.\src\AvCalcs.c	/^      float gnm,hnm,dgnm,dhnm;$/;"	m	struct:__anon19	file:
dhnm	.\src\MagVarn.c	/^      float gnm,hnm,dgnm,dhnm;$/;"	m	struct:__anon73	file:
dialBmp	.\src\AIGauge.c	/^static BitmapType *dialBmp;$/;"	v	file:
dialBmp	.\src\HeadingIndicator.c	/^	BitmapType *dialBmp;$/;"	m	struct:HSITypeStruct	file:
dialDiameter	.\src\AIGauge.c	/^static Coord     dialDiameter;$/;"	v	file:
dialMask	.\src\AIGauge.c	/^static BitmapType *dialMask;$/;"	v	file:
dialogStage	.\src\MapDialog.c	/^static Int16 dialogStage;$/;"	v	file:
disabled	.\src\DiversionForm.c	/^static enum { disabled, starting, scanning, waiting } scanState = disabled;$/;"	e	enum:__anon35	file:
disclaimerShown	.\src\Main.c	/^static Boolean disclaimerShown = false;$/;"	v	file:
displayFilter	.\src\DiversionForm.c	/^static enum { airfield = 0,vor,ndb,intersection,all } displayFilter = airfield;$/;"	v	typeref:enum:__anon34	file:
displayMap	.\src\MapForm.c	/^static MapType displayMap;$/;"	v	file:
displayMode	.\src\WPInfoDialog.c	/^static enum {all = 0, frequencies, runways, ils} displayMode = all;$/;"	v	typeref:enum:__anon111	file:
displayPalette	.\src\TerrainType.c	/^	UInt8 *displayPalette;		\/\/ palette used in the actual display$/;"	m	struct:TerrainTypeStruct	file:
distAB	.\src\NavManager.c	/^	double distAB; \/\/ length of leg, radians$/;"	m	struct:__anon94	file:
distAP	.\src\NavManager.c	/^	double distAP;	\/\/ along track distance$/;"	m	struct:__anon94	file:
distDB	.\src\NavManager.c	/^	double distDB;  \/\/ distance from craft to B, radians$/;"	m	struct:__anon94	file:
distPD	.\src\NavManager.c	/^	double distPD;  \/\/ track error in radians$/;"	m	struct:__anon94	file:
distance	.\src\FlightPlan.h	/^	float distance; \/\/ in radians$/;"	m	struct:__anon40
distance	.\src\FlightPlanForm.c	/^	float distance;$/;"	m	struct:__anon42	file:
distance	.\src\GlobalTypes.h	/^	UInt16 distance;	\/* 0=nm, 1=mi, 2=km *\/$/;"	m	struct:__anon54
distanceBefore	.\src\FlightPlan.h	/^	float distanceBefore; \/\/ in radians$/;"	m	struct:__anon38
distanceConv	.\src\GlobalTypes.h	/^	float distanceConv;$/;"	m	struct:__anon55
distanceTo	.\src\NavManager.c	/^	float   distanceTo; \/\/ user units$/;"	m	struct:__anon94	file:
distanceToTurn	.\src\NavManager.c	/^	float  distanceToTurn;	\/\/ in user units$/;"	m	struct:__anon94	file:
distanceToVNAV	.\src\NavManager.c	/^	float distanceToVNAV;	\/\/ user units.$/;"	m	struct:__anon94	file:
distanceUnits	.\src\CpInterface.c	/^	UInt16 distanceUnits;               \/\/ {nm, mi, km}$/;"	m	struct:__anon30	file:
distanceUnits	.\src\GlobalTypes.h	/^	const char *distanceUnits;$/;"	m	struct:__anon55
divActive	.\src\GlobalTypes.h	/^typedef enum { divNone=0, divActive, divEmergency } DiversionType;$/;"	e	enum:__anon60
divEmergency	.\src\GlobalTypes.h	/^typedef enum { divNone=0, divActive, divEmergency } DiversionType;$/;"	e	enum:__anon60
divNone	.\src\GlobalTypes.h	/^typedef enum { divNone=0, divActive, divEmergency } DiversionType;$/;"	e	enum:__anon60
diversionStartTime	.\src\DiversionMgr.c	/^static char diversionStartTime[8];	\/\/ (local) time that goto began$/;"	v	file:
drawReduced	.\src\MapManager.c	/^	Boolean drawReduced;$/;"	m	struct:MapTypeStruct	file:
drem	.\extsrc\MathLib.c	/^double drem(double x, double y) {$/;"	f
ds	.\src\WDManager.c	/^	WDMHandle ds;$/;"	m	struct:WDMSearchStructType	file:
east	.\extsrc\GPSLib.h	/^    float       east;       \/* east (m\/s)                           *\/$/;"	m	struct:__anon8
east	.\src\CpInterface.c	/^typedef enum {north, west, south, east, noIntersection }Quadrant;$/;"	e	enum:__anon23	file:
eastStr	.\src\Gps.h	/^	char		eastStr[13];$/;"	m	struct:__anon67
edge	.\src\Polygon.c	/^static void edge(edgeRec *table, PolyPointType *pt1, PolyPointType *pt2)$/;"	f	file:
edgeRec	.\src\Polygon.c	/^} edgeRec;$/;"	t	typeref:struct:__anon99	file:
editCursor	.\src\MapForm.c	/^static Int16 editCursor = 0;$/;"	v	file:
elevation	.\extsrc\GPSLib.h	/^    float       elevation;  \/* elevation (radians)                  *\/$/;"	m	struct:__anon3
elevation	.\src\Gps.h	/^	Int16           elevation[GPSNumSats+1];$/;"	m	struct:__anon68
elevation	.\src\WDManager.h	/^	float  elevation; \/* feet *\/$/;"	m	struct:__anon109
end	.\src\AsDatabase.h	/^	Int16 start, end;$/;"	m	struct:__anon17
epe	.\extsrc\GPSLib.h	/^    float       epe;        \/* estimated position error, 1-sigma (meters)   *\/$/;"	m	struct:__anon6
eph	.\extsrc\GPSLib.h	/^    float       eph;        \/* epe, horizontal only (meters)                *\/$/;"	m	struct:__anon6
epv	.\extsrc\GPSLib.h	/^    float       epv;        \/* epe, vertical only (meters)                  *\/$/;"	m	struct:__anon6
evtAlphaInput	.\src\GlobalTypes.h	/^	evtAlphaInput,$/;"	e	enum:__anon59
evtCrsOverride	.\src\GlobalTypes.h	/^	evtCrsOverride = (firstUserEvent + 2),$/;"	e	enum:__anon59
evtDivertActivate	.\src\GlobalTypes.h	/^	evtDivertActivate,$/;"	e	enum:__anon59
evtDivertCancel	.\src\GlobalTypes.h	/^	evtDivertCancel,$/;"	e	enum:__anon59
evtDivertEmergency	.\src\GlobalTypes.h	/^	evtDivertEmergency,$/;"	e	enum:__anon59
evtDivertReActivate	.\src\GlobalTypes.h	/^	evtDivertReActivate,$/;"	e	enum:__anon59
evtFlightPlanLoaded	.\src\GlobalTypes.h	/^	evtFlightPlanLoaded,$/;"	e	enum:__anon59
evtGPSAltFix	.\src\GlobalTypes.h	/^	evtGPSAltFix,$/;"	e	enum:__anon59
evtGPSAltFixLost	.\src\GlobalTypes.h	/^	evtGPSAltFixLost,$/;"	e	enum:__anon59
evtGPSFix	.\src\GlobalTypes.h	/^	evtGPSFix,$/;"	e	enum:__anon59
evtGPSFixLost	.\src\GlobalTypes.h	/^	evtGPSFixLost,$/;"	e	enum:__anon59
evtGPSPositionUpdate	.\src\GlobalTypes.h	/^	evtGPSPositionUpdate,$/;"	e	enum:__anon59
evtGPSSatUpdate	.\src\GlobalTypes.h	/^	evtGPSSatUpdate,	\/\/ 24595$/;"	e	enum:__anon59
evtGPSSync	.\src\GlobalTypes.h	/^	evtGPSSync,$/;"	e	enum:__anon59
evtGPSSyncLost	.\src\GlobalTypes.h	/^	evtGPSSyncLost,$/;"	e	enum:__anon59
evtKeypadInput	.\src\GlobalTypes.h	/^	evtKeypadInput,$/;"	e	enum:__anon59
evtLastUser	.\src\GlobalTypes.h	/^	evtLastUser$/;"	e	enum:__anon59
evtMapConfigReq	.\src\GlobalTypes.h	/^	evtMapConfigReq ,$/;"	e	enum:__anon59
evtMapConfigUpdate	.\src\GlobalTypes.h	/^	evtMapConfigUpdate,$/;"	e	enum:__anon59
evtMapEditReq	.\src\GlobalTypes.h	/^	evtMapEditReq,$/;"	e	enum:__anon59
evtNewWPAdded	.\src\GlobalTypes.h	/^	evtNewWPAdded,$/;"	e	enum:__anon59
evtNextWaypoint	.\src\GlobalTypes.h	/^	evtNextWaypoint ,$/;"	e	enum:__anon59
evtPrevWaypoint	.\src\GlobalTypes.h	/^	evtPrevWaypoint ,$/;"	e	enum:__anon59
evtScreenRedrawn	.\src\GlobalTypes.h	/^	evtScreenRedrawn,$/;"	e	enum:__anon59
evtWaypointInfoReq	.\src\GlobalTypes.h	/^	evtWaypointInfoReq ,$/;"	e	enum:__anon59
executeTest	.\src\GlobalTypes.h	/^	executeTest$/;"	e	enum:__anon61
exp	.\extsrc\MathLib.c	/^double exp(double x) {$/;"	f
expm1	.\extsrc\MathLib.c	/^double expm1(double x) {$/;"	f
extDB	.\src\AsDatabase.c	/^	PFFileRef extDB;		\/\/ used if AS database is external$/;"	m	struct:__anon14	file:
extDB	.\src\WDManager.c	/^	PFFileRef extDB;$/;"	m	struct:__anon105	file:
extLog	.\src\TrackLog.c	/^static PFFileRef extLog;	\/\/ external log reference$/;"	v	file:
extRef	.\src\Platform.c	/^	FileRef extRef;$/;"	m	struct:PFFileRefStructType	file:
external	.\src\AsDatabase.c	/^	Boolean   external;		\/\/ true if AS database is external$/;"	m	struct:__anon14	file:
external	.\src\Platform.c	/^	Boolean external;$/;"	m	struct:PFFileRefStructType	file:
external	.\src\WDManager.c	/^	enum { compact, external, internal } source;$/;"	e	enum:__anon105::__anon106	file:
extra	.\src\AsDatabase.h	/^	UInt16 extra;$/;"	m	struct:__anon18
extra	.\src\WDManager.h	/^	UInt8 extra[5];$/;"	m	struct:__anon110
extra1	.\src\WDManager.c	/^	UInt16 *extra1;$/;"	m	struct:__anon104	file:
extra1IdxRec	.\src\WDManager.c	/^		extra1IdxRec = 5, extra2IdxRec = 6, lastIdxRec = 7};$/;"	e	enum:__anon103	file:
extra2	.\src\WDManager.c	/^	UInt16 *extra2;$/;"	m	struct:__anon104	file:
extra2IdxRec	.\src\WDManager.c	/^		extra1IdxRec = 5, extra2IdxRec = 6, lastIdxRec = 7};$/;"	e	enum:__anon103	file:
fabs	.\extsrc\MathLib.c	/^double fabs(double x) {$/;"	f
fast	.\src\Gps.h	/^	fast$/;"	e	enum:__anon71
fddBasic	.\src\GlobalTypes.h	/^typedef enum { fddOff = 0, fddBasic, fddFull } FlightDataDisplayType;$/;"	e	enum:__anon44
fddFull	.\src\GlobalTypes.h	/^typedef enum { fddOff = 0, fddBasic, fddFull } FlightDataDisplayType;$/;"	e	enum:__anon44
fddOff	.\src\GlobalTypes.h	/^typedef enum { fddOff = 0, fddBasic, fddFull } FlightDataDisplayType;$/;"	e	enum:__anon44
file	.\src\TerrainType.c	/^	PFFileRef file;					\/\/ terrain file$/;"	m	struct:TerrainTypeStruct	file:
fileMagic	.\src\FlightPlan.c	/^static const UInt32 fileMagic = 0x44115544;		\/\/ serial number for stack file$/;"	v	file:
fileMagic	.\src\WDManager.c	/^static const UInt32 fileMagic = 0x64115566;		\/\/ serial number for temp waypoints$/;"	v	file:
fileRef	.\src\Platform.c	/^	FileRef      fileRef[MAX_SND_QUEUE_DEPTH];$/;"	m	struct:oeCallbackDataType	file:
filler2	.\extsrc\GPSLib.h	/^    UInt16      filler2;    \/* alignment padding                            *\/$/;"	m	struct:__anon6
filterButtonMap	.\src\MapDialog.c	/^static const UInt16 filterButtonMap[NUM_FILTER_BUTTONS] = {$/;"	v	file:
filters	.\src\MapDialog.c	/^static UInt16 *filters[NUM_FILTER_BUTTONS];$/;"	v	file:
finished	.\src\Platform.c	/^	Boolean      finished;$/;"	m	struct:oeCallbackDataType	file:
finite	.\extsrc\MathLib.c	/^Int16 finite(double x) {$/;"	f
fiveNMPixels	.\src\MapForm.c	/^static Coord fiveNMPixels;$/;"	v	file:
fiveNMPixels	.\src\MapManager.c	/^	Coord fiveNMPixels;		\/\/ how many pixels represent 5nm$/;"	m	struct:MapTypeStruct	file:
fix	.\extsrc\GPSLib.h	/^    GPSFixT8    fix;        \/* fix type                                     *\/$/;"	m	struct:__anon6
fixType	.\src\Gps.h	/^	UInt8		fixType;$/;"	m	struct:__anon68
flightDB	.\src\FlightDatabase.c	/^static PFFileRef flightDB = NULL;$/;"	v	file:
flightDBVersion	.\src\CpInterface.c	/^static const UInt16 flightDBVersion = 7;$/;"	v	file:
flightDb	.\src\CpInterface.c	/^static DmOpenRef flightDb;$/;"	v	file:
flightDirectorRoll	.\src\NavManager.c	/^	float  flightDirectorRoll; 	\/\/ angle (degrees) to turn to intercept current leg$/;"	m	struct:__anon94	file:
flightNumbers	.\src\SelectCopilotFlightDialog.c	/^static UInt16 *flightNumbers = NULL;$/;"	v	file:
flightPlan	.\src\MapManager.c	/^	FlightPlanType flightPlan;		\/\/ reference to flight plan to show$/;"	m	struct:MapTypeStruct	file:
flightPlanData	.\src\FlightPlanForm.c	/^} flightPlanData[MAX_FP_LEGS];$/;"	v	typeref:struct:__anon42	file:
flightPlanFormMapping	.\src\Main.c	/^static const FunctionKeymapType flightPlanFormMapping[] = {$/;"	v	file:
flightRecord	.\src\CpInterface.c	/^typedef enum {noType, flightRecord=321, routeRecord, wbRecord, planRecord }$/;"	e	enum:__anon21	file:
floor	.\extsrc\MathLib.c	/^double floor(double x) {$/;"	f
fmod	.\extsrc\MathLib.c	/^double fmod(double x, double y) {$/;"	f
font	.\src\HeadingIndicator.c	/^	FontID font;$/;"	m	struct:HSITypeStruct	file:
formID	.\src\Main.c	/^	UInt16 formID;$/;"	m	struct:__anon74	file:
formToFunctionKeymap	.\src\Main.c	/^} formToFunctionKeymap[] = {$/;"	v	typeref:struct:__anon74	file:
fpSqrt1	.\src\Fixed.c	/^fpSqrt1(fp14 value)$/;"	f
fpSqrt2	.\src\Fixed.c	/^fpSqrt2(fp14 value)$/;"	f
fpVersion	.\src\MapForm.c	/^static Int16 fpVersion;$/;"	v	file:
fpVersion	.\src\NavManager.c	/^	Int16 fpVersion;$/;"	m	struct:__anon94	file:
fpWaypointNotFound	.\src\FlightPlan.h	214;"	d
fracSeconds	.\extsrc\GPSLib.h	/^    UInt32      fracSeconds;    \/* 0..1 second * 2^32               *\/$/;"	m	struct:__anon9
frameWidth	.\src\Platform.c	/^	UInt16       frameWidth; \/\/ number of bytes in each sample frame$/;"	m	struct:oeCallbackDataType	file:
freq	.\src\MapIcon.h	/^	char *freq;$/;"	m	struct:__anon83
freqLen	.\src\MapIcon.h	/^	UInt16 freqLen;$/;"	m	struct:__anon83
frequencies	.\src\WPInfoDialog.c	/^static enum {all = 0, frequencies, runways, ils} displayMode = all;$/;"	e	enum:__anon111	file:
frexp	.\extsrc\MathLib.c	/^double frexp(double x, Int16 *exponent) {$/;"	f
fromIdent	.\src\NavManager.c	/^	char fromIdent[MAX_IDENT_CHARS+1];$/;"	m	struct:__anon94	file:
fuelCost	.\src\CpInterface.c	/^	double fuelCost;$/;"	m	struct:__anon26	file:
fuelDensityUnits	.\src\CpInterface.c	/^	UInt16 fuelDensityUnits;            \/\/ {lbPgalUS, lbPgalImp, kgPL}$/;"	m	struct:__anon30	file:
funcLevel	.\src\Logging.c	/^static UInt16 funcLevel = 0;$/;"	v	file:
g_CollapseAPIVersion	.\extsrc\CollapseUtils.c	/^static 	Int32 	g_CollapseAPIVersion = 0;$/;"	v	file:
g_CollapseAPIVersion	.\extsrc\CollapseUtilsSony.cpp	/^static 	Int32 	g_CollapseAPIVersion;$/;"	v	file:
g_offscreenGadgetBufWinH	.\extsrc\Collapse.cpp	/^WinHandle g_offscreenGadgetBufWinH;$/;"	v
g_pin10StateChanged	.\extsrc\CollapseUtils.c	/^static Boolean	g_pin10StateChanged;$/;"	v	file:
g_pin10StateChanged	.\extsrc\CollapseUtilsSony.cpp	/^static Boolean	g_pin10StateChanged;$/;"	v	file:
g_sonySilkRefNum	.\extsrc\CollapseUtilsSony.cpp	/^static 	UInt16 	g_sonySilkRefNum;$/;"	v	file:
garminLibRef	.\src\Gps.c	/^static UInt16 garminLibRef;$/;"	v	file:
gaugeWidth	.\src\MainForm.c	/^static const Coord gaugeWidth     = 134;$/;"	v	file:
gaugeX	.\src\MainForm.c	/^static const Coord gaugeX         = 13;$/;"	v	file:
gaugeY	.\src\MainForm.c	/^static const Coord gaugeY         = 17;$/;"	v	file:
geomag	.\src\AvCalcs.c	/^static void geomag(int *maxdeg)$/;"	f	file:
geomag	.\src\MagVarn.c	/^static void geomag(int *maxdeg)$/;"	f	file:
geomg1	.\src\AvCalcs.c	/^static void geomg1(float alt,float glat,float glon,float time,$/;"	f	file:
geomg1	.\src\MagVarn.c	/^static void geomg1(float alt,float glat,float glon,float time,$/;"	f	file:
glideSlopeRatio	.\src\NavManager.c	/^	float glideSlopeRatio;	\/\/ after VNAV capture point$/;"	m	struct:__anon94	file:
gnm	.\src\AvCalcs.c	/^      float gnm,hnm,dgnm,dhnm;$/;"	m	struct:__anon19	file:
gnm	.\src\MagVarn.c	/^      float gnm,hnm,dgnm,dhnm;$/;"	m	struct:__anon73	file:
gotoActive	.\src\FlightPlan.c	/^	Boolean gotoActive;		\/\/ deprecated!!$/;"	m	struct:FlightPlanType	file:
gotoLat	.\src\FlightPlan.c	/^	Int32 gotoLat, gotoLon;	\/\/ deprecated!!$/;"	m	struct:FlightPlanType	file:
gotoLon	.\src\FlightPlan.c	/^	Int32 gotoLat, gotoLon;	\/\/ deprecated!!$/;"	m	struct:FlightPlanType	file:
gotoMagVar	.\src\FlightPlan.c	/^	float gotoMagVar;		\/\/ deprecated!!$/;"	m	struct:FlightPlanType	file:
gps	.\src\Instruments.c	/^	GPSType   *gps;$/;"	m	struct:SatConstTypeStruct	file:
gps2d	.\src\Gps.c	/^	gps2d,$/;"	e	enum:__anon62	file:
gps3d	.\src\Gps.c	/^	gps3d,$/;"	e	enum:__anon62	file:
gpsAPIVersion	.\extsrc\GPSLib.h	32;"	d
gpsAltCorrection	.\src\Gps.c	/^static float gpsAltCorrection = 0.0;$/;"	v	file:
gpsAltOffset	.\src\GlobalTypes.h	/^	Int16 gpsAltOffset;$/;"	m	struct:__anon50
gpsBaudRate	.\src\Gps.c	/^static BaudRate gpsBaudRate = b4800;$/;"	v	file:
gpsBluetooth	.\src\Gps.h	/^	gpsBluetooth, $/;"	e	enum:__anon70
gpsCard	.\src\Gps.h	/^	gpsCard, $/;"	e	enum:__anon70
gpsClie	.\src\Gps.h	/^	gpsClie,$/;"	e	enum:__anon70
gpsCradle	.\src\Gps.h	/^typedef enum { gpsCradle = 0, $/;"	e	enum:__anon70
gpsDisplayLegalese	.\extsrc\GPSLib.h	53;"	d
gpsErrMemory	.\extsrc\GPSLib.h	41;"	d
gpsErrNoData	.\extsrc\GPSLib.h	42;"	d
gpsErrNone	.\extsrc\GPSLib.h	38;"	d
gpsErrNotOpen	.\extsrc\GPSLib.h	39;"	d
gpsErrStillOpen	.\extsrc\GPSLib.h	40;"	d
gpsFix2D	.\extsrc\GPSLib.h	/^    gpsFix2D        = 2,    \/* 2 dimension                          *\/$/;"	e	enum:__anon5
gpsFix2DDiff	.\extsrc\GPSLib.h	/^    gpsFix2DDiff    = 4,    \/* 2 dimension differential             *\/$/;"	e	enum:__anon5
gpsFix3D	.\extsrc\GPSLib.h	/^    gpsFix3D        = 3,    \/* 3 dimension                          *\/$/;"	e	enum:__anon5
gpsFix3DDiff	.\extsrc\GPSLib.h	/^    gpsFix3DDiff    = 5,    \/* 3 dimension differential             *\/$/;"	e	enum:__anon5
gpsFixCount	.\extsrc\GPSLib.h	/^    gpsFixCount     = 6     \/* count of fix type enumerations       *\/$/;"	e	enum:__anon5
gpsFixInvalid	.\extsrc\GPSLib.h	/^    gpsFixInvalid   = 1,    \/* invalid or unavailable               *\/$/;"	e	enum:__anon5
gpsFixUnusable	.\extsrc\GPSLib.h	/^    gpsFixUnusable  = 0,    \/* failed integrity check               *\/$/;"	e	enum:__anon5
gpsGGA	.\src\Gps.c	/^	gpsGGA,$/;"	e	enum:__anon64	file:
gpsGSA	.\src\Gps.c	/^	gpsGSA,$/;"	e	enum:__anon64	file:
gpsGSV	.\src\Gps.c	/^	gpsGSV,$/;"	e	enum:__anon64	file:
gpsGarmin	.\src\Gps.h	/^	gpsGarmin,$/;"	e	enum:__anon70
gpsHour	.\src\NavManager.c	/^	Int16 gpsHour, gpsMin, gpsSec;$/;"	m	struct:__anon94	file:
gpsInvGGA	.\src\Gps.c	/^	gpsInvGGA,$/;"	e	enum:__anon64	file:
gpsInvRMC	.\src\Gps.c	/^	gpsInvRMC,$/;"	e	enum:__anon64	file:
gpsInvalidSVID	.\extsrc\GPSLib.h	33;"	d
gpsLibCreator	.\extsrc\GPSLib.h	29;"	d
gpsLibName	.\extsrc\GPSLib.h	27;"	d
gpsLibTrapClose	.\extsrc\GPSLib68K.h	/^        SYS_TRAP(gpsLibTrapClose);$/;"	v
gpsLibTrapClose	.\extsrc\GPSLibSysTrapNums.h	37;"	d
gpsLibTrapGetLibAPIVersion	.\extsrc\GPSLib68K.h	/^        SYS_TRAP(gpsLibTrapGetLibAPIVersion);$/;"	v
gpsLibTrapGetLibAPIVersion	.\extsrc\GPSLibSysTrapNums.h	38;"	d
gpsLibTrapGetMaxSatellites	.\extsrc\GPSLib68K.h	/^        SYS_TRAP(gpsLibTrapGetMaxSatellites);$/;"	v
gpsLibTrapGetMaxSatellites	.\extsrc\GPSLibSysTrapNums.h	39;"	d
gpsLibTrapGetPVT	.\extsrc\GPSLib68K.h	/^        SYS_TRAP(gpsLibTrapGetPVT);$/;"	v
gpsLibTrapGetPVT	.\extsrc\GPSLibSysTrapNums.h	41;"	d
gpsLibTrapGetPosition	.\extsrc\GPSLib68K.h	/^        SYS_TRAP(gpsLibTrapGetPosition);$/;"	v
gpsLibTrapGetPosition	.\extsrc\GPSLibSysTrapNums.h	40;"	d
gpsLibTrapGetSatellites	.\extsrc\GPSLib68K.h	/^        SYS_TRAP(gpsLibTrapGetSatellites);$/;"	v
gpsLibTrapGetSatellites	.\extsrc\GPSLibSysTrapNums.h	42;"	d
gpsLibTrapGetStatus	.\extsrc\GPSLib68K.h	/^        SYS_TRAP(gpsLibTrapGetStatus);$/;"	v
gpsLibTrapGetStatus	.\extsrc\GPSLibSysTrapNums.h	43;"	d
gpsLibTrapGetTime	.\extsrc\GPSLib68K.h	/^        SYS_TRAP(gpsLibTrapGetTime);$/;"	v
gpsLibTrapGetTime	.\extsrc\GPSLibSysTrapNums.h	44;"	d
gpsLibTrapGetVelocity	.\extsrc\GPSLib68K.h	/^        SYS_TRAP(gpsLibTrapGetVelocity);$/;"	v
gpsLibTrapGetVelocity	.\extsrc\GPSLibSysTrapNums.h	45;"	d
gpsLibTrapOpen	.\extsrc\GPSLib68K.h	/^        SYS_TRAP(gpsLibTrapOpen);$/;"	v
gpsLibTrapOpen	.\extsrc\GPSLibSysTrapNums.h	46;"	d
gpsLibType	.\extsrc\GPSLib.h	28;"	d
gpsLocationChange	.\extsrc\GPSLib.h	47;"	d
gpsLog	.\src\Gps.c	/^static PFFileRef gpsLog = NULL;$/;"	v	file:
gpsLostFix	.\extsrc\GPSLib.h	49;"	d
gpsMessageBuff	.\src\Gps.c	/^static char 	gpsMessageBuff[4096];	\/* buffer for GPS messages *\/$/;"	v	file:
gpsMin	.\src\NavManager.c	/^	Int16 gpsHour, gpsMin, gpsSec;$/;"	m	struct:__anon94	file:
gpsModeBatSaver	.\extsrc\GPSLib.h	/^    gpsModeBatSaver = 2,    \/* periodic satellite tracking          *\/$/;"	e	enum:__anon4
gpsModeChange	.\extsrc\GPSLib.h	51;"	d
gpsModeCount	.\extsrc\GPSLib.h	/^    gpsModeCount    = 5     \/* count of mode type enumerations      *\/$/;"	e	enum:__anon4
gpsModeExternal	.\extsrc\GPSLib.h	/^    gpsModeExternal = 4,    \/* external source of GPS information   *\/$/;"	e	enum:__anon4
gpsModeNormal	.\extsrc\GPSLib.h	/^    gpsModeNormal   = 1,    \/* continuous satellite tracking        *\/$/;"	e	enum:__anon4
gpsModeOff	.\extsrc\GPSLib.h	/^    gpsModeOff      = 0,    \/* GPS is off                           *\/$/;"	e	enum:__anon4
gpsModeSim	.\extsrc\GPSLib.h	/^    gpsModeSim      = 3,    \/* simulated GPS information            *\/$/;"	e	enum:__anon4
gpsModuleState	.\src\Gps.c	/^}gpsModuleState = gpsOff;$/;"	v	typeref:enum:__anon62	file:
gpsNeedInitialized	.\extsrc\GPSLib.h	52;"	d
gpsOff	.\src\Gps.c	/^	gpsOff, $/;"	e	enum:__anon62	file:
gpsPortId	.\src\Gps.c	/^static UInt16 	gpsPortId;		\/* serial port Id *\/$/;"	v	file:
gpsRMC	.\src\Gps.c	/^	gpsRMC,$/;"	e	enum:__anon64	file:
gpsST	.\src\Gps.c	/^	gpsST$/;"	e	enum:__anon64	file:
gpsSatDataChange	.\extsrc\GPSLib.h	50;"	d
gpsSatDifMask	.\extsrc\GPSLib.h	59;"	d
gpsSatEphMask	.\extsrc\GPSLib.h	58;"	d
gpsSatRisingMask	.\extsrc\GPSLib.h	61;"	d
gpsSatUsedMask	.\extsrc\GPSLib.h	60;"	d
gpsSec	.\src\NavManager.c	/^	Int16 gpsHour, gpsMin, gpsSec;$/;"	m	struct:__anon94	file:
gpsSerial	.\src\Gps.h	/^	gpsSerial, $/;"	e	enum:__anon70
gpsSimulate	.\src\Gps.h	/^	gpsSimulate$/;"	e	enum:__anon70
gpsSource	.\src\GlobalTypes.h	/^	GPSSourceType gpsSource;$/;"	m	struct:__anon50
gpsSource	.\src\Gps.c	/^static GPSSourceType gpsSource;$/;"	v	file:
gpsStatusChange	.\extsrc\GPSLib.h	48;"	d
gpsSync	.\src\Gps.c	/^	gpsSync,$/;"	e	enum:__anon62	file:
gpsSyncing	.\src\Gps.c	/^	gpsSyncing,$/;"	e	enum:__anon62	file:
gpsTimeout	.\src\Gps.c	/^	gpsTimeout$/;"	e	enum:__anon62	file:
gpsUSB	.\src\Gps.h	/^	gpsUSB,$/;"	e	enum:__anon70
gpsUnknown	.\src\Gps.c	/^	gpsUnknown,$/;"	e	enum:__anon64	file:
green	.\src\Colours.c	/^static const RGBColorType green   = { 0, 0, 200, 0 };$/;"	v	file:
green	.\src\GlobalTypes.h	/^	IndexedColorType green;$/;"	m	struct:__anon51
ground	.\src\Colours.c	/^static const RGBColorType ground= { 0, 167,97,43 };$/;"	v	file:
ground	.\src\GlobalTypes.h	/^	IndexedColorType ground;$/;"	m	struct:__anon51
groundSpeed	.\src\NavManager.c	/^	float groundSpeed; \/\/ user units$/;"	m	struct:__anon94	file:
groundTime	.\src\CpInterface.c	/^	UInt16     groundTime;$/;"	m	struct:__anon28	file:
gsi	.\src\MainForm.c	/^static GSIType gsi;	\/\/ Glideslope indicator$/;"	v	file:
gsi	.\src\MapForm.c	/^static GSIType gsi;$/;"	v	file:
hardCentre	.\src\Platform.h	86;"	d
hardDown	.\src\Platform.h	83;"	d
hardLeft	.\src\Platform.h	84;"	d
hardRight	.\src\Platform.h	85;"	d
hardSurface	.\src\CpInterface.h	/^	Boolean hardSurface;$/;"	m	struct:__anon31
hardSurfaces	.\src\CpInterface.c	/^static const char * const hardSurfaces[] = {$/;"	v	file:
hardUp	.\src\Platform.h	82;"	d
hdop	.\src\Gps.h	/^	float hdop;$/;"	m	struct:__anon68
heading	.\src\CpInterface.h	/^	UInt8 heading;$/;"	m	struct:__anon31
heading	.\src\GlobalTypes.h	/^	const char *heading;$/;"	m	struct:__anon55
heading	.\src\Gps.c	/^	float heading;$/;"	m	struct:__anon65	file:
heartBeat	.\src\Gps.h	/^	Boolean		heartBeat;$/;"	m	struct:__anon68
height	.\src\GlobalTypes.h	/^	Coord height, pixelHeight;$/;"	m	struct:__anon52
height	.\src\Instruments.c	/^	Coord x, y, width, height; \/\/ y is centre of VSI, height is 1\/2 height$/;"	m	struct:VSITypeStruct	file:
height	.\src\Instruments.c	/^	Coord x,y, width, height;	\/\/ y is centre of GSI, height is 1\/2 height$/;"	m	struct:GSITypeStruct	file:
height	.\src\TerrainCore.h	/^	Int32 height;$/;"	m	struct:TerrainCoreParamType
heightFP8	.\src\TerrainCore.h	/^	Int32 heightFP8;$/;"	m	struct:TerrainCoreParamType
highDensity	.\src\GlobalTypes.h	/^	Boolean highDensity;$/;"	m	struct:__anon52
highDensity	.\src\HeadingIndicator.c	/^	Boolean highDensity;$/;"	m	struct:HSITypeStruct	file:
hnm	.\src\AvCalcs.c	/^      float gnm,hnm,dgnm,dhnm;$/;"	m	struct:__anon19	file:
hnm	.\src\MagVarn.c	/^      float gnm,hnm,dgnm,dhnm;$/;"	m	struct:__anon73	file:
hostFile	.\src\Logging.c	/^static HostFILE *hostFile;$/;"	v	file:
hour	.\src\Gps.h	/^	UInt8 hour;$/;"	m	struct:__anon66
hsi	.\src\MainForm.c	/^static HSIType hsi;	\/\/ horizontal situation indicator$/;"	v	file:
hsiScale	.\src\MainForm.c	/^static const float hsiScale[] = { 3.0, 2.5, 2.0, 1.5, 1.0 };$/;"	v	file:
hsiZoomLabel	.\src\MainForm.c	/^static const PointType hsiZoomLabel = { 13+134\/2+15, 17+134*5\/8 };$/;"	v	file:
hypot	.\extsrc\MathLib.c	/^double hypot(double x, double y) {$/;"	f
hzFlagPos	.\src\MainForm.c	/^static const PointType hzFlagPos = { 100, 65 };$/;"	v	file:
iSqrt	.\src\Fixed.c	/^iSqrt(long value)$/;"	f
icon	.\src\MapIcon.h	/^	Int16 icon;$/;"	m	struct:__anon81
icon	.\src\MapIcon.h	/^	MapIconType       icon;$/;"	m	struct:__anon85
icon	.\src\MapManager.c	/^	MemHandle icon;$/;"	m	struct:MapTypeStruct	file:
iconDim	.\src\GlobalTypes.h	/^	Coord iconDim;$/;"	m	struct:__anon53
iconMasks	.\src\GlobalTypes.h	/^	WinHandle iconMasks;$/;"	m	struct:__anon53
iconOffset	.\src\DiversionForm.c	/^static Coord iconOffset = 0;$/;"	v	file:
icons	.\src\GlobalTypes.h	/^	WaypointClassType icons;$/;"	m	struct:__anon46
icons	.\src\GlobalTypes.h	/^	WinHandle icons;$/;"	m	struct:__anon53
id	.\src\DiversionForm.c	/^	WaypointIDType    id;$/;"	m	struct:__anon32	file:
id	.\src\MapAirspace.h	/^	AirspaceIDType id;$/;"	m	struct:__anon75
id	.\src\MapAirspace.h	/^	AirspaceIDType id;$/;"	m	struct:__anon76
id	.\src\MapIcon.h	/^	WaypointIDType    id;$/;"	m	struct:__anon85
id	.\src\MapIcon.h	/^	WaypointIDType id; $/;"	m	struct:__anon81
id	.\src\MapManager.h	/^		AirspaceIDType id;$/;"	m	struct:MapSelectionStructType::__anon92
id	.\src\MapManager.h	/^		WaypointIDType id;$/;"	m	struct:MapSelectionStructType::__anon91
id	.\src\WDManager.c	/^	UInt16 *id;$/;"	m	struct:__anon104	file:
id	.\src\WDManager.c	/^	WDMDatabaseIDType id;$/;"	m	struct:__anon105	file:
idIdxRec	.\src\WDManager.c	/^enum { idIdxRec = 0, latIdxRec = 1, lonIdxRec = 2, typeIdxRec = 3, latLonIdxRec = 4, $/;"	e	enum:__anon103	file:
id_deprecated	.\src\FlightPlan.h	/^	WaypointIDType id_deprecated; \/\/ deprecated!!!$/;"	m	struct:__anon39
ident	.\src\DiversionForm.c	/^	char           ident[MAX_IDENTCHARS+1];$/;"	m	struct:__anon32	file:
ident	.\src\FlightPlan.h	/^	char ident[11];$/;"	m	struct:__anon39
ident	.\src\WDManager.h	/^	char   ident[1];$/;"	m	struct:__anon109
identOnly	.\src\DiversionForm.c	/^static Boolean identOnly = true;$/;"	v	file:
ilogb	.\extsrc\MathLib.c	/^Int16 ilogb(double x) {$/;"	f
ils	.\src\WPInfoDialog.c	/^static enum {all = 0, frequencies, runways, ils} displayMode = all;$/;"	e	enum:__anon111	file:
importSegment	.\src\SelectCopilotFlightDialog.c	/^static Int16 importSegment = 0;$/;"	v	file:
importStatus	.\src\MapForm.c	/^static char *importStatus;$/;"	v	file:
inWaypoint	.\src\EditWaypointForm.c	/^static Waypoint *inWaypoint;$/;"	v	file:
index	.\src\MapManager.c	/^	Int16          index;$/;"	m	struct:__anon88	file:
index	.\src\WDManager.c	/^	IndexPtrs index;$/;"	m	struct:WDMSearchStructType	file:
index	.\src\WDManager.c	/^	IndexPtrs index;$/;"	m	struct:__anon105	file:
indexDB	.\src\WDManager.c	/^	DmOpenRef indexDB;$/;"	m	struct:__anon105	file:
indicatorY	.\src\MainForm.c	/^static const Coord indicatorY     = 65;$/;"	v	file:
info	.\src\MapIcon.h	/^	ExtraIconInfoType info;$/;"	m	struct:__anon85
infoWp	.\src\WPInfoDialog.c	/^static Waypoint *infoWp;$/;"	v	file:
initWait	.\src\MapForm.c	/^static enum { initWait, waitGoto, waitNoGoto, simpleWait } tapPlanState = initWait;$/;"	e	enum:__anon77	file:
initialChar	.\src\CpInterface.c	/^	Char   initialChar;                 \/\/ default initial ident char$/;"	m	struct:__anon30	file:
initialValue	.\src\GlobalTypes.h	/^	Int32 initialValue;		\/\/ value to re-initialise timer to if autoreset is true$/;"	m	struct:__anon48
initialised	.\src\CpInterface.c	/^static Boolean initialised = false;$/;"	v	file:
inputString	.\src\AlphaPadDialog.c	/^static char *inputString;$/;"	v	file:
inputString	.\src\KeypadDialog.c	/^static char inputString[MAXSTRLEN+1];$/;"	v	file:
int64	.\src\Fixed.h	/^typedef long long int64;$/;"	t
intDB	.\src\AsDatabase.c	/^	DmOpenRef intDB;		\/\/ used if AS database is internal$/;"	m	struct:__anon14	file:
intDB	.\src\WDManager.c	/^	DmOpenRef intDB;$/;"	m	struct:__anon105	file:
intRef	.\src\Platform.c	/^	FileHand intRef;$/;"	m	struct:PFFileRefStructType	file:
intTrackDB	.\src\TrackLog.c	/^static DmOpenRef intTrackDB = NULL;$/;"	v	file:
internal	.\src\WDManager.c	/^	enum { compact, external, internal } source;$/;"	e	enum:__anon105::__anon106	file:
internalDB	.\src\SelectCopilotFlightDialog.c	/^static Boolean internalDB = true;$/;"	v	file:
intersection	.\src\CpInterface.c	/^	double     intersection;$/;"	m	struct:__anon28	file:
intersection	.\src\DiversionForm.c	/^static enum { airfield = 0,vor,ndb,intersection,all } displayFilter = airfield;$/;"	e	enum:__anon34	file:
isCircle	.\src\MapAirspace.h	/^	Boolean isCircle;$/;"	m	struct:__anon75
isinf	.\extsrc\MathLib.c	/^Int16 isinf(double x) {$/;"	f
isnan	.\extsrc\MathLib.c	/^Int16 isnan(double x) {$/;"	f
itemID	.\src\GlobalTypes.h	/^	UInt16 			itemID;	\/\/ can be menu or control ID (according to 'mapTo')$/;"	m	struct:__anon58
kFrmNavHeaderFlagsAppFocusStartState	.\src\ResourceDefines.h	2;"	d
kFrmNavHeaderFlagsObjectFocusStartState	.\src\ResourceDefines.h	1;"	d
kOurMinVersion	.\extsrc\Collapse.cpp	87;"	d	file:
kOurMinVersion	.\src\Platform.c	1707;"	d	file:
kPalmOS10Version	.\extsrc\Collapse.cpp	88;"	d	file:
keyBitGarminEscape	.\extsrc\GarminChars.h	45;"	d
keyBitGarminRecord	.\extsrc\GarminChars.h	46;"	d
keyBitGarminThumbWheelDown	.\extsrc\GarminChars.h	43;"	d
keyBitGarminThumbWheelIn	.\extsrc\GarminChars.h	44;"	d
keyBitGarminThumbWheelUp	.\extsrc\GarminChars.h	42;"	d
keyBitHard5	.\extsrc\PalmChars.h	35;"	d
keyBitNavLRS	.\extsrc\PalmNavigator.h	31;"	d
keyBitNavLeft	.\extsrc\PalmNavigator.h	28;"	d
keyBitNavRight	.\extsrc\PalmNavigator.h	29;"	d
keyBitNavSelect	.\extsrc\PalmNavigator.h	30;"	d
keyID	.\src\GlobalTypes.h	/^	WChar  			keyID;$/;"	m	struct:__anon58
keymap	.\src\Main.c	/^	const FunctionKeymapType *keymap;$/;"	m	struct:__anon74	file:
keypadCallback	.\src\KeypadDialog.c	/^static Boolean (*keypadCallback)(UInt16,float);$/;"	v	file:
keypadDialogMapping	.\src\Main.c	/^static const FunctionKeymapType keypadDialogMapping[] = {$/;"	v	file:
label	.\src\Colours.c	/^static const RGBColorType label = { 0, 0,0,0 };$/;"	v	file:
label	.\src\GlobalTypes.h	/^	IndexedColorType label;$/;"	m	struct:__anon51
label	.\src\GlobalTypes.h	/^	char label[8];$/;"	m	struct:__anon48
label	.\src\MapIcon.h	/^	char label[6];$/;"	m	struct:__anon81
labelHint	.\src\MapAirspace.h	/^	PointType labelHint;$/;"	m	struct:__anon75
labels	.\src\GlobalTypes.h	/^	WaypointClassType labels;$/;"	m	struct:__anon46
labels	.\src\MapDialog.c	/^static UInt16 *labels[NUM_FILTER_BUTTONS];$/;"	v	file:
landscape	.\src\GlobalTypes.h	/^	Boolean landscape;$/;"	m	struct:__anon52
largeBoldHeight	.\src\GlobalTypes.h	/^	Coord largeBoldHeight;$/;"	m	struct:__anon52
lastCommsTime	.\src\Gps.c	/^static UInt32	lastCommsTime;		\/* time in systicks of last comm $/;"	v	file:
lastDrawLat	.\src\MapManager.c	/^	Int32 lastDrawLat, lastDrawLon;$/;"	m	struct:MapTypeStruct	file:
lastDrawLon	.\src\MapManager.c	/^	Int32 lastDrawLat, lastDrawLon;$/;"	m	struct:MapTypeStruct	file:
lastFixTime	.\src\Gps.c	/^static UInt32	lastFixTime = 0;	\/* time in systicks of last GPRMC $/;"	v	file:
lastForm	.\src\GlobalTypes.h	/^	UInt16 lastForm;$/;"	m	struct:__anon50
lastIdxRec	.\src\AsDatabase.c	/^enum {lat1IdxRec = 0, lon1IdxRec, lat3IdxRec, lon3IdxRec, typeIdxRec, lastIdxRec };$/;"	e	enum:__anon13	file:
lastIdxRec	.\src\WDManager.c	/^		extra1IdxRec = 5, extra2IdxRec = 6, lastIdxRec = 7};$/;"	e	enum:__anon103	file:
lastLat	.\src\MapForm.c	/^	Int32 lastLat, lastLon;$/;"	m	struct:__anon78	file:
lastLatitude	.\src\CpInterface.c	/^	UInt16 lastLatitude;                \/\/ 0 = north, 1 = south$/;"	m	struct:__anon30	file:
lastLon	.\src\MapForm.c	/^	Int32 lastLat, lastLon;$/;"	m	struct:__anon78	file:
lastLongitude	.\src\CpInterface.c	/^	UInt16 lastLongitude;               \/\/ 0 = west, 1 = east$/;"	m	struct:__anon30	file:
lastMagVar	.\src\CpInterface.c	/^	UInt16 lastMagVar;                  \/\/ 0 = west, 1 = east$/;"	m	struct:__anon30	file:
lastMapLat	.\src\GlobalTypes.h	/^	Int32 lastMapLat, lastMapLon;$/;"	m	struct:__anon50
lastMapLon	.\src\GlobalTypes.h	/^	Int32 lastMapLat, lastMapLon;$/;"	m	struct:__anon50
lastMaxRange	.\src\WDManager.c	/^	Int32 lastMaxRange;$/;"	m	struct:WDMSearchStructType	file:
lastRotation	.\src\MapManager.c	/^	Int16 lastRotation;$/;"	m	struct:MapTypeStruct	file:
lastXOrigin	.\src\MapManager.c	/^	Coord lastXOrigin, lastYOrigin;$/;"	m	struct:MapTypeStruct	file:
lastYOrigin	.\src\MapManager.c	/^	Coord lastXOrigin, lastYOrigin;$/;"	m	struct:MapTypeStruct	file:
lat	.\extsrc\GPSLib.h	/^    Int32       lat;        \/* latitude  (semicircles)                      *\/$/;"	m	struct:__anon7
lat	.\src\AsDatabase.h	/^	Int32 lat, lon;$/;"	m	struct:__anon16
lat	.\src\AsDatabase.h	/^	Int32 lat, lon;$/;"	m	struct:__anon17
lat	.\src\FlightPlan.h	/^	Int32 lat, lon;$/;"	m	struct:__anon39
lat	.\src\Gps.c	/^	double lat;$/;"	m	struct:__anon65	file:
lat	.\src\MapForm.c	/^	Int32 lat,lon;$/;"	m	struct:__anon80	file:
lat	.\src\MapForm.c	/^	Int32 lat;$/;"	m	struct:__anon78	file:
lat	.\src\MapIcon.h	/^	double lat, lon;$/;"	m	struct:__anon85
lat	.\src\TrackLog.h	/^	Int32 lat;$/;"	m	struct:__anon102
lat	.\src\WDManager.c	/^	Int16 *lat;$/;"	m	struct:__anon104	file:
lat	.\src\WDManager.c	/^	Int16 lat;$/;"	m	struct:WDMSearchStructType	file:
lat	.\src\WDManager.h	/^	Int32 lat;$/;"	m	struct:__anon110
lat1	.\src\MapManager.c	/^	Int16 lat1, lon1;$/;"	m	struct:MapTypeStruct	file:
lat1Idx	.\src\AsDatabase.c	/^	Int16 *lat1Idx, *lon1Idx;$/;"	m	struct:__anon14	file:
lat1IdxRec	.\src\AsDatabase.c	/^enum {lat1IdxRec = 0, lon1IdxRec, lat3IdxRec, lon3IdxRec, typeIdxRec, lastIdxRec };$/;"	e	enum:__anon13	file:
lat2	.\src\MapManager.c	/^	Int16 lat2, lon2;$/;"	m	struct:MapTypeStruct	file:
lat32	.\src\Gps.h	/^	Int32		lat32;$/;"	m	struct:__anon67
lat3Idx	.\src\AsDatabase.c	/^	Int16 *lat3Idx, *lon3Idx;$/;"	m	struct:__anon14	file:
lat3IdxRec	.\src\AsDatabase.c	/^enum {lat1IdxRec = 0, lon1IdxRec, lat3IdxRec, lon3IdxRec, typeIdxRec, lastIdxRec };$/;"	e	enum:__anon13	file:
latA	.\src\NavManager.c	/^	double latA;	\/\/ lat & lon of point A$/;"	m	struct:__anon94	file:
latB	.\src\NavManager.c	/^	double latB;	\/\/ lat & lon of point B$/;"	m	struct:__anon94	file:
latIdxRec	.\src\WDManager.c	/^enum { idIdxRec = 0, latIdxRec = 1, lonIdxRec = 2, typeIdxRec = 3, latLonIdxRec = 4, $/;"	e	enum:__anon103	file:
latLonIdxRec	.\src\WDManager.c	/^enum { idIdxRec = 0, latIdxRec = 1, lonIdxRec = 2, typeIdxRec = 3, latLonIdxRec = 4, $/;"	e	enum:__anon103	file:
latRef	.\src\MapAirspace.c	/^static Int32 latRef, lonRef;$/;"	v	file:
latRef	.\src\MapManager.c	/^	Int32 latRef;$/;"	m	struct:MapTypeStruct	file:
latScale	.\src\MapAirspace.c	/^static Int32 latScale, lonScale;$/;"	v	file:
latScaling	.\src\MapManager.c	/^	Int32 latScaling, lonScaling;$/;"	m	struct:MapTypeStruct	file:
latitude	.\src\Gps.h	/^	double		latitude;$/;"	m	struct:__anon67
latitude	.\src\WDManager.h	/^	double latitude;  \/* north +ve *\/$/;"	m	struct:__anon109
latlon	.\src\WDManager.c	/^	UInt16 *latlon;$/;"	m	struct:__anon104	file:
ldexp	.\extsrc\MathLib.c	/^double ldexp(double x, Int16 exponent) {$/;"	f
ledHeight	.\src\GlobalTypes.h	/^	Coord ledHeight;$/;"	m	struct:__anon52
leftHanded	.\src\Instruments.c	/^	Boolean leftHanded;$/;"	m	struct:VSITypeStruct	file:
leftTurn	.\src\NavManager.c	/^	Boolean leftTurn;		\/\/ true, if the turn required is left$/;"	m	struct:__anon94	file:
leg	.\src\CpInterface.c	/^	LegStruct leg[maxLegs];$/;"	m	struct:__anon29	file:
leg	.\src\FlightPlan.c	/^	FlightPlanLegType leg[MAX_FP_LEGS];$/;"	m	struct:FlightPlanType	file:
leg	.\src\NavManager.c	/^	Int16 leg;$/;"	m	struct:__anon94	file:
length	.\src\CpInterface.h	/^	UInt16 length;$/;"	m	struct:__anon31
level	.\src\AlarmManager.c	/^	AlarmLevelType level;$/;"	m	struct:__anon11	file:
liconWindows	.\src\MapForm.c	/^static IconWindowsType liconWindows;$/;"	v	file:
lightBorder	.\src\Platform.h	/^enum { noBorder = -1, darkBorder = 256, lightBorder = 257 };$/;"	e	enum:__anon98
line	.\src\Logging.c	/^static char   *line;$/;"	v	file:
linePtrs	.\src\WPInfoDialog.c	/^static const char **linePtrs = NULL;$/;"	v	file:
lines	.\src\MapAirspace.h	/^	WinLineType *lines;$/;"	m	struct:__anon75
linksFile	.\src\CpInterface.c	/^static UInt32      *linksFile = NULL;$/;"	v	file:
loadFlightDialogMapping	.\src\Main.c	/^static const FunctionKeymapType loadFlightDialogMapping[] = {$/;"	v	file:
loadedSegment	.\src\CpInterface.c	/^static Int16 loadedSegment;$/;"	v	file:
localTimeZone	.\src\GlobalTypes.h	/^	Int8 localTimeZone;$/;"	m	struct:__anon50
log	.\extsrc\MathLib.c	/^double log(double x) {$/;"	f
log10	.\extsrc\MathLib.c	/^double log10(double x) {$/;"	f
log1p	.\extsrc\MathLib.c	/^double log1p(double x) {$/;"	f
log2	.\extsrc\MathLib.c	/^double log2(double x) {$/;"	f
logData	.\src\Logging.c	/^static char   *logData;$/;"	v	file:
logDb	.\src\Logging.c	/^static DmOpenRef logDb;$/;"	v	file:
logPtr	.\src\Logging.c	/^static UInt16 *logPtr;$/;"	v	file:
logSize	.\src\TrackLog.c	/^static Int16 logSize;$/;"	v	file:
logWritePtr	.\src\TrackLog.c	/^static Int16 logWritePtr;$/;"	v	file:
logb	.\extsrc\MathLib.c	/^double logb(double x) {$/;"	f
lon	.\extsrc\GPSLib.h	/^    Int32       lon;        \/* longitude (semicircles)                      *\/$/;"	m	struct:__anon7
lon	.\src\AsDatabase.h	/^	Int32 lat, lon;$/;"	m	struct:__anon16
lon	.\src\AsDatabase.h	/^	Int32 lat, lon;$/;"	m	struct:__anon17
lon	.\src\FlightPlan.h	/^	Int32 lat, lon;$/;"	m	struct:__anon39
lon	.\src\Gps.c	/^	double lon;$/;"	m	struct:__anon65	file:
lon	.\src\MapForm.c	/^	Int32 lat,lon;$/;"	m	struct:__anon80	file:
lon	.\src\MapForm.c	/^	Int32 lon;$/;"	m	struct:__anon78	file:
lon	.\src\MapIcon.h	/^	double lat, lon;$/;"	m	struct:__anon85
lon	.\src\TrackLog.h	/^	Int32 lon;$/;"	m	struct:__anon102
lon	.\src\WDManager.c	/^	Int16 *lon;$/;"	m	struct:__anon104	file:
lon	.\src\WDManager.c	/^	Int16 lon;$/;"	m	struct:WDMSearchStructType	file:
lon	.\src\WDManager.h	/^	Int32 lon;$/;"	m	struct:__anon110
lon1	.\src\MapManager.c	/^	Int16 lat1, lon1;$/;"	m	struct:MapTypeStruct	file:
lon1Idx	.\src\AsDatabase.c	/^	Int16 *lat1Idx, *lon1Idx;$/;"	m	struct:__anon14	file:
lon1IdxRec	.\src\AsDatabase.c	/^enum {lat1IdxRec = 0, lon1IdxRec, lat3IdxRec, lon3IdxRec, typeIdxRec, lastIdxRec };$/;"	e	enum:__anon13	file:
lon2	.\src\MapManager.c	/^	Int16 lat2, lon2;$/;"	m	struct:MapTypeStruct	file:
lon32	.\src\Gps.h	/^	Int32		lon32;$/;"	m	struct:__anon67
lon3Idx	.\src\AsDatabase.c	/^	Int16 *lat3Idx, *lon3Idx;$/;"	m	struct:__anon14	file:
lon3IdxRec	.\src\AsDatabase.c	/^enum {lat1IdxRec = 0, lon1IdxRec, lat3IdxRec, lon3IdxRec, typeIdxRec, lastIdxRec };$/;"	e	enum:__anon13	file:
lonA	.\src\NavManager.c	/^	double lonA;$/;"	m	struct:__anon94	file:
lonB	.\src\NavManager.c	/^	double lonB;$/;"	m	struct:__anon94	file:
lonIdxRec	.\src\WDManager.c	/^enum { idIdxRec = 0, latIdxRec = 1, lonIdxRec = 2, typeIdxRec = 3, latLonIdxRec = 4, $/;"	e	enum:__anon103	file:
lonRef	.\src\MapAirspace.c	/^static Int32 latRef, lonRef;$/;"	v	file:
lonRef	.\src\MapManager.c	/^	Int32 lonRef;$/;"	m	struct:MapTypeStruct	file:
lonScale	.\src\MapAirspace.c	/^static Int32 latScale, lonScale;$/;"	v	file:
lonScaling	.\src\MapManager.c	/^	Int32 latScaling, lonScaling;$/;"	m	struct:MapTypeStruct	file:
longitude	.\src\Gps.h	/^	double 		longitude;$/;"	m	struct:__anon67
longitude	.\src\WDManager.h	/^	double longitude; \/* west +ve *\/$/;"	m	struct:__anon109
lowerAlt	.\src\AsDatabase.h	/^	UInt16 lowerAlt, upperAlt;$/;"	m	struct:__anon18
lowerAlt	.\src\MapAirspace.h	/^	Int32 lowerAlt;$/;"	m	struct:__anon75
lowerAltRef	.\src\AsDatabase.h	/^	AltReferenceType lowerAltRef;$/;"	m	struct:__anon18
lowerAltString	.\src\MapAirspace.h	/^	char  lowerAltString[MAX_ALT_CHARS];$/;"	m	struct:__anon75
lowerFilter	.\src\GlobalTypes.h	/^	UInt8   lowerFilter;$/;"	m	struct:__anon46
lscreen	.\src\MapForm.c	/^static ScreenInfoType lscreen;$/;"	v	file:
m	.\src\AvCalcs.c	/^      int n,m;$/;"	m	struct:__anon19	file:
m	.\src\MagVarn.c	/^      int n,m;$/;"	m	struct:__anon73	file:
magHeading	.\src\Gps.h	/^	float		magHeading;	\/* degress magnetic *\/$/;"	m	struct:__anon67
magVar	.\src\FlightPlan.h	/^	float magVar;$/;"	m	struct:__anon39
magVar	.\src\MapIcon.h	/^	Int16  magVar;$/;"	m	struct:__anon82
magVar	.\src\WDManager.h	/^	float  magVar;    \/* west +ve *\/$/;"	m	struct:__anon109
magVarn	.\src\Gps.h	/^	float           magVarn;        \/* degrees, -ve east *\/$/;"	m	struct:__anon67
magVarnCalculated	.\src\Gps.c	/^static Boolean magVarnCalculated = false;$/;"	v	file:
mainFormMapping	.\src\Main.c	/^static const FunctionKeymapType mainFormMapping[] = {$/;"	v	file:
majorVersion	.\src\FlightPlan.c	/^	Int16 majorVersion;$/;"	m	struct:FlightPlanType	file:
majorVersion	.\src\FlightPlan.h	/^typedef enum { minorVersion, majorVersion } FlightPlanVersionType;$/;"	e	enum:__anon41
mapAirspace	.\src\MapAirspace.h	/^	MapAirspaceType mapAirspace;$/;"	m	struct:__anon76
mapDialogMapping	.\src\Main.c	/^static const FunctionKeymapType mapDialogMapping[] = {$/;"	v	file:
mapFormMapping	.\src\Main.c	/^static const FunctionKeymapType mapFormMapping[] = {$/;"	v	file:
mapNumber	.\src\GlobalTypes.h	/^	Int16 mapNumber;$/;"	m	struct:__anon50
mapNumberHotspot	.\src\MapForm.c	/^static RectangleType mapNumberHotspot;$/;"	v	file:
mapPrefs	.\src\GlobalTypes.h	64;"	d
mapPrefs	.\src\MapForm.c	201;"	d	file:
mapPrefs	.\src\MapIcon.c	45;"	d	file:
mapPrefsNumber	.\src\MapForm.c	202;"	d	file:
mapPrefsNumber	.\src\MapIcon.c	46;"	d	file:
mapPrefsScale	.\src\MapForm.c	203;"	d	file:
mapPrefsScale	.\src\MapIcon.c	47;"	d	file:
mapSetting	.\src\GlobalTypes.h	/^	MapSettingType mapSetting[4];$/;"	m	struct:__anon50
mapTo	.\src\GlobalTypes.h	/^	KeymappingType 	mapTo; $/;"	m	struct:__anon58
mapToControlID	.\src\GlobalTypes.h	/^typedef enum { noMapping, mapToMenuID, mapToControlID } KeymappingType;$/;"	e	enum:__anon57
mapToMenuID	.\src\GlobalTypes.h	/^typedef enum { noMapping, mapToMenuID, mapToControlID } KeymappingType;$/;"	e	enum:__anon57
mapx	.\src\MapManager.c	/^	Coord mapx, mapy;$/;"	m	struct:__anon89	file:
mapy	.\src\MapManager.c	/^	Coord mapx, mapy;$/;"	m	struct:__anon89	file:
maxAcceleration	.\src\Gps.c	/^static const float maxAcceleration= 5.0;$/;"	v	file:
maxDeflection	.\src\HeadingIndicator.c	/^	Int16 maxDeflection;$/;"	m	struct:HSITypeStruct	file:
maxDeflection	.\src\Instruments.c	/^	Int32 maxDeflection;$/;"	m	struct:GSITypeStruct	file:
maxLat	.\src\WDManager.c	/^	Int16 minLat, maxLat;$/;"	m	struct:WDMSearchStructType	file:
maxLegs	.\src\CpInterface.c	131;"	d	file:
maxLonRange	.\src\WDManager.c	/^	Int16 maxLonRange;$/;"	m	struct:WDMSearchStructType	file:
maxSegments	.\src\CpInterface.c	132;"	d	file:
melAirspace	.\src\MapManager.c	/^typedef enum { melNone, melIcon, melRouteIcon, melAirspace, melAirway } MapElementType;$/;"	e	enum:__anon86	file:
melAirway	.\src\MapManager.c	/^typedef enum { melNone, melIcon, melRouteIcon, melAirspace, melAirway } MapElementType;$/;"	e	enum:__anon86	file:
melIcon	.\src\MapManager.c	/^typedef enum { melNone, melIcon, melRouteIcon, melAirspace, melAirway } MapElementType;$/;"	e	enum:__anon86	file:
melNone	.\src\MapManager.c	/^typedef enum { melNone, melIcon, melRouteIcon, melAirspace, melAirway } MapElementType;$/;"	e	enum:__anon86	file:
melRouteIcon	.\src\MapManager.c	/^typedef enum { melNone, melIcon, melRouteIcon, melAirspace, melAirway } MapElementType;$/;"	e	enum:__anon86	file:
menuID	.\src\CommandDialog.c	/^	UInt16 menuID;$/;"	m	struct:__anon20	file:
message	.\src\MessageDialog.h	/^	char *message;$/;"	m	struct:__anon93
messageData	.\src\MessageDialog.c	/^static MessageDialogDataType *messageData;$/;"	v	file:
messageDialogMapping	.\src\Main.c	/^static const FunctionKeymapType messageDialogMapping[] = {$/;"	v	file:
millisec	.\src\Gps.h	/^	UInt16 millisec;$/;"	m	struct:__anon66
min	.\src\Gps.h	/^	UInt8 min;$/;"	m	struct:__anon66
minLat	.\src\WDManager.c	/^	Int16 minLat, maxLat;$/;"	m	struct:WDMSearchStructType	file:
minorUnits	.\src\GlobalTypes.h	/^	float minorUnits;	\/\/ multiply to convert from NM to feet, or KM to m$/;"	m	struct:__anon55
minorVersion	.\src\FlightPlan.c	/^	Int16 minorVersion;$/;"	m	struct:FlightPlanType	file:
minorVersion	.\src\FlightPlan.h	/^typedef enum { minorVersion, majorVersion } FlightPlanVersionType;$/;"	e	enum:__anon41
mlErrNoMemory	.\extsrc\MathLib.h	/^	mlErrNoMemory		\/\/ can't allocate global data block$/;"	e	enum:MathLibErrorCode
mlErrNone	.\extsrc\MathLib.h	/^	mlErrNone = 0,$/;"	e	enum:MathLibErrorCode
mlErrNotOpen	.\extsrc\MathLib.h	/^	mlErrNotOpen,		\/\/ close() without having called open() first$/;"	e	enum:MathLibErrorCode
mlErrOldVersion	.\extsrc\MathLib.h	/^	mlErrOldVersion,	\/\/ library is older than version passed to open()$/;"	e	enum:MathLibErrorCode
mode	.\extsrc\GPSLib.h	/^    GPSModeT8   mode;       \/* mode type                                    *\/$/;"	m	struct:__anon6
modf	.\extsrc\MathLib.c	/^double modf(double x, double *intpart) {$/;"	f
monitorDialogMapping	.\src\Main.c	/^static const FunctionKeymapType monitorDialogMapping[] = {$/;"	v	file:
month	.\src\Gps.h	/^	UInt16 month;$/;"	m	struct:__anon66
morePrefsDialogMapping	.\src\Main.c	/^static const FunctionKeymapType morePrefsDialogMapping[] = {$/;"	v	file:
mothership	.\src\Platform.c	/^	struct oeCallbackDataType **mothership;$/;"	m	struct:oeCallbackDataType	typeref:struct:oeCallbackDataType::oeCallbackDataType	file:
mqfInputTimeout	.\src\MapForm.c	/^static Int32 mqfInputTimeout;$/;"	v	file:
mqfWaypointID	.\src\MapForm.c	/^static char mqfWaypointID[MQF_MAX_CHARS+1] = "";$/;"	v	file:
msAirspace	.\src\MapManager.h	/^	enum { msWaypoint, msAirspace } type;$/;"	e	enum:MapSelectionStructType::__anon90
msWaypoint	.\src\MapManager.h	/^	enum { msWaypoint, msAirspace } type;$/;"	e	enum:MapSelectionStructType::__anon90
mvEastTemplate	.\src\GPSForm.c	/^static const char *mvEastTemplate = "%sE";$/;"	v	file:
mvWestTemplate	.\src\GPSForm.c	/^static const char *mvWestTemplate = "%sW";$/;"	v	file:
myWindow	.\src\DiversionForm.c	/^static WinHandle           myWindow         = NULL;$/;"	v	file:
myWindow	.\src\FlightPlanForm.c	/^static WinHandle myWindow;$/;"	v	file:
myWindow	.\src\GPSForm.c	/^static WinHandle myWindow;$/;"	v	file:
myWindow	.\src\MainForm.c	/^static WinHandle myWindow;$/;"	v	file:
myWindow	.\src\MapForm.c	/^static WinHandle           myWindow         = NULL;$/;"	v	file:
myWindow	.\src\TimerForm.c	/^static WinHandle myWindow;$/;"	v	file:
n	.\src\AvCalcs.c	/^      int n,m;$/;"	m	struct:__anon19	file:
n	.\src\MagVarn.c	/^      int n,m;$/;"	m	struct:__anon73	file:
name	.\src\DiversionForm.c	/^	char           name[MAX_NAMECHARS+1];$/;"	m	struct:__anon32	file:
name	.\src\WDManager.h	/^	char   name[1];$/;"	m	struct:__anon109
navAltitude	.\src\NavManager.h	/^	navAltitude, navVSI,$/;"	e	enum:__anon95
navBackcourse	.\src\NavManager.h	/^	navBackcourse,$/;"	e	enum:__anon95
navBankAngle	.\src\NavManager.h	/^	navPitch, navBankAngle,$/;"	e	enum:__anon95
navBearingFrom	.\src\NavManager.h	/^	navBearingFrom, $/;"	e	enum:__anon95
navBearingTo	.\src\NavManager.h	/^	navBearingTo, navDistanceTo, $/;"	e	enum:__anon95
navBitDown	.\extsrc\PalmNavigator.h	34;"	d
navBitLeft	.\extsrc\PalmNavigator.h	35;"	d
navBitRight	.\extsrc\PalmNavigator.h	36;"	d
navBitSelect	.\extsrc\PalmNavigator.h	37;"	d
navBitUp	.\extsrc\PalmNavigator.h	33;"	d
navBitsAll	.\extsrc\PalmNavigator.h	38;"	d
navChangeBitsAll	.\extsrc\PalmNavigator.h	45;"	d
navChangeDown	.\extsrc\PalmNavigator.h	41;"	d
navChangeLeft	.\extsrc\PalmNavigator.h	42;"	d
navChangeRight	.\extsrc\PalmNavigator.h	43;"	d
navChangeSelect	.\extsrc\PalmNavigator.h	44;"	d
navChangeUp	.\extsrc\PalmNavigator.h	40;"	d
navCompassFrom	.\src\NavManager.h	/^	navCompassFrom,$/;"	e	enum:__anon95
navCourse	.\src\NavManager.h	/^	navCourse,$/;"	e	enum:__anon95
navDestDistance	.\src\NavManager.h	/^	navDestDistance, navDestETE, navDestETA,$/;"	e	enum:__anon95
navDestETA	.\src\NavManager.h	/^	navDestDistance, navDestETE, navDestETA,$/;"	e	enum:__anon95
navDestETE	.\src\NavManager.h	/^	navDestDistance, navDestETE, navDestETA,$/;"	e	enum:__anon95
navDistanceTo	.\src\NavManager.h	/^	navBearingTo, navDistanceTo, $/;"	e	enum:__anon95
navETA	.\src\NavManager.h	/^	navETE, navETA,$/;"	e	enum:__anon95
navETE	.\src\NavManager.h	/^	navETE, navETA,$/;"	e	enum:__anon95
navEnd	.\src\NavManager.h	/^	navEnd$/;"	e	enum:__anon95
navFlightDirectorRoll	.\src\NavManager.h	/^	navFlightDirectorRoll,	\/\/ angle to turn to get back onto course (degrees)$/;"	e	enum:__anon95
navFromIdent	.\src\NavManager.h	/^	navFromIdent, navToIdent,$/;"	e	enum:__anon95
navFtrCreator	.\extsrc\PalmNavigator.h	24;"	d
navFtrVersion	.\extsrc\PalmNavigator.h	25;"	d
navGS	.\src\NavManager.h	/^	navTrack, navGS, navXTRK,$/;"	e	enum:__anon95
navInfo	.\src\NavManager.c	/^} navInfo;$/;"	v	typeref:struct:__anon94	file:
navLocal	.\src\NavManager.h	/^	navLocal, navUTC, $/;"	e	enum:__anon95
navMV	.\src\NavManager.h	/^	navMV, $/;"	e	enum:__anon95
navPitch	.\src\NavManager.h	/^	navPitch, navBankAngle,$/;"	e	enum:__anon95
navRadBearingTo	.\src\NavManager.h	/^	navRadBearingTo,$/;"	e	enum:__anon95
navToIdent	.\src\NavManager.h	/^	navFromIdent, navToIdent,$/;"	e	enum:__anon95
navTrack	.\src\NavManager.h	/^	navTrack, navGS, navXTRK,$/;"	e	enum:__anon95
navTurnDistanceTo	.\src\NavManager.h	/^	navTurnDistanceTo,$/;"	e	enum:__anon95
navTurnETE	.\src\NavManager.h	/^	navTurnETE,				\/\/ time (secs) to the turn$/;"	e	enum:__anon95
navUTC	.\src\NavManager.h	/^	navLocal, navUTC, $/;"	e	enum:__anon95
navVNAVAltError	.\src\NavManager.h	/^	navVNAVAltError,		\/\/ altitude error during descent$/;"	e	enum:__anon95
navVNAVDistanceTo	.\src\NavManager.h	/^	navVNAVDistanceTo,		\/\/ distance to VNAV Point of Descent$/;"	e	enum:__anon95
navVNAVETE	.\src\NavManager.h	/^	navVNAVETE,				\/\/ time (secs) to VNAV point of descent$/;"	e	enum:__anon95
navVNAVRequiredVS	.\src\NavManager.h	/^	navVNAVRequiredVS,		\/\/ required rate of descent (user units)$/;"	e	enum:__anon95
navVNAVradDistanceToDescend	.\src\NavManager.h	/^	navVNAVradDistanceToDescend,	\/\/ radian descent distance$/;"	e	enum:__anon95
navVNAVradDistanceToVNAV	.\src\NavManager.h	/^	navVNAVradDistanceToVNAV,		\/\/ radian VNAV distance$/;"	e	enum:__anon95
navVSI	.\src\NavManager.h	/^	navAltitude, navVSI,$/;"	e	enum:__anon95
navVersion	.\extsrc\PalmNavigator.h	26;"	d
navXTRK	.\src\NavManager.h	/^	navTrack, navGS, navXTRK,$/;"	e	enum:__anon95
navaid	.\src\MapIcon.h	/^	ExtraNavaidInfoType   navaid;$/;"	m	union:__anon84
ndb	.\src\DiversionForm.c	/^static enum { airfield = 0,vor,ndb,intersection,all } displayFilter = airfield;$/;"	e	enum:__anon34	file:
ndbFilter	.\src\GlobalTypes.h	40;"	d
newMap	.\src\MapForm.c	/^static MapType newMap;$/;"	v	file:
newProxList	.\src\DiversionForm.c	/^static ProxWaypointListType *newProxList;$/;"	v	file:
newSegment	.\src\CpInterface.c	/^	Boolean    newSegment:1;$/;"	m	struct:__anon28	file:
newSerialMgr	.\src\Gps.c	/^static Boolean  newSerialMgr;$/;"	v	file:
nextFreeTemp	.\src\WDManager.c	/^	Int16 nextFreeTemp;$/;"	m	struct:WDMHandleStructType	file:
nextafter	.\extsrc\MathLib.c	/^double nextafter(double x, double y) {$/;"	f
nightMode	.\src\GlobalTypes.h	/^	Boolean nightMode;$/;"	m	struct:__anon50
nightMode	.\src\Main.c	/^Boolean nightMode = false;$/;"	v
noBorder	.\src\Platform.h	/^enum { noBorder = -1, darkBorder = 256, lightBorder = 257 };$/;"	e	enum:__anon98
noIntersection	.\src\CpInterface.c	/^typedef enum {north, west, south, east, noIntersection }Quadrant;$/;"	e	enum:__anon23	file:
noMapping	.\src\GlobalTypes.h	/^typedef enum { noMapping, mapToMenuID, mapToControlID } KeymappingType;$/;"	e	enum:__anon57
noObstacles	.\src\GlobalTypes.h	/^	WDMDatabaseIDType noObstacles; 	\/\/ cpSystem | cpUser$/;"	m	struct:__anon45
noType	.\src\CpInterface.c	/^typedef enum {noType, flightRecord=321, routeRecord, wbRecord, planRecord }$/;"	e	enum:__anon21	file:
normal	.\src\Gps.h	/^	normal = 0,$/;"	e	enum:__anon71
north	.\extsrc\GPSLib.h	/^    float       north;      \/* north (m\/s)                          *\/$/;"	m	struct:__anon8
north	.\src\CpInterface.c	/^typedef enum {north, west, south, east, noIntersection }Quadrant;$/;"	e	enum:__anon23	file:
northDone	.\src\WDManager.c	/^	Boolean northDone;$/;"	m	struct:WDMSearchStructType	file:
northIndex	.\src\WDManager.c	/^	Int32 northIndex;$/;"	m	struct:WDMSearchStructType	file:
northStr	.\src\Gps.h	/^	char		northStr[13];$/;"	m	struct:__anon67
note	.\src\CpInterface.c	/^	char note[1];$/;"	m	struct:__anon26	file:
notes	.\src\TextDialog.c	/^static char *notes;$/;"	v	file:
notes	.\src\WDManager.h	/^	char   notes[1];$/;"	m	struct:__anon109
numAirspaces	.\src\MapManager.c	/^	Int16  numAirspaces;$/;"	m	struct:MapTypeStruct	file:
numAlarms	.\src\AlarmManager.c	/^static Int16 numAlarms = 0;$/;"	v	file:
numDatabases	.\src\WDManager.c	/^	Int16 numDatabases;$/;"	m	struct:WDMHandleStructType	file:
numFiles	.\src\Platform.c	/^	Int16        numFiles;$/;"	m	struct:oeCallbackDataType	file:
numHardSurfaces	.\src\CpInterface.c	/^static const UInt16 numHardSurfaces = 77;$/;"	v	file:
numIcons	.\src\MapManager.c	/^	UInt16 numIcons;$/;"	m	struct:MapTypeStruct	file:
numItems	.\src\MessageDialog.h	/^	Int16 numItems;$/;"	m	struct:__anon93
numLegs	.\src\CpInterface.c	/^	UInt16 numLegs;$/;"	m	struct:__anon29	file:
numLegs	.\src\FlightPlan.c	/^	Int16 numLegs;$/;"	m	struct:FlightPlanType	file:
numLines	.\src\MapAirspace.h	/^	Int16 numLines;$/;"	m	struct:__anon75
numLinks	.\src\CpInterface.c	/^static UInt32		numLinks  = 0;$/;"	v	file:
numProxWaypointsToDisplay	.\src\DiversionForm.c	/^static const UInt16 numProxWaypointsToDisplay = 4;$/;"	v	file:
numRecords	.\src\AsDatabase.c	/^	Int16 numRecords;		\/\/ number of Airspace records in DB$/;"	m	struct:__anon14	file:
numRouteIcons	.\src\MapManager.c	/^	Int16 numRouteIcons;$/;"	m	struct:MapTypeStruct	file:
numRouteLines	.\src\MapManager.c	/^	Int16 numRouteLines;$/;"	m	struct:MapTypeStruct	file:
numRunways	.\src\MapIcon.h	/^	UInt16 numRunways;$/;"	m	struct:__anon82
numSegments	.\src\CpInterface.c	/^static Int16 numSegments;$/;"	v	file:
numTempWp	.\src\WDManager.c	/^	Int16 numTempWp;$/;"	m	struct:WDMHandleStructType	file:
numTrackLines	.\src\MapManager.c	/^	Int16 numTrackLines;$/;"	m	struct:MapTypeStruct	file:
numWaypoints	.\src\DiversionForm.c	/^	Int16 numWaypoints;$/;"	m	struct:__anon33	file:
numWaypoints	.\src\WDManager.c	/^	Int16 numWaypoints;$/;"	m	struct:__anon105	file:
obs	.\src\GlobalTypes.h	/^	WDMDatabaseIDType obs[10];$/;"	m	struct:__anon45
obsActive	.\src\OBSManager.c	/^static Boolean obsActive = false;$/;"	v	file:
obsHeading	.\src\OBSManager.c	/^static float obsHeading;$/;"	v	file:
obsState	.\src\NavManager.c	/^	Boolean obsState;$/;"	m	struct:__anon94	file:
obstacleAltitude	.\src\MapIcon.h	/^	Int32 obstacleAltitude;$/;"	m	struct:__anon81
obstacleWarnings	.\src\GlobalTypes.h	/^	Boolean obstacleWarnings;$/;"	m	struct:__anon50
obstacles	.\src\GlobalTypes.h	/^	WDMDatabaseIDType obstacles;	\/\/ cpUser | obs[0..9]$/;"	m	struct:__anon45
oeCallbackDataType	.\src\Platform.c	/^typedef struct oeCallbackDataType {$/;"	s	file:
oeCallbackDataType	.\src\Platform.c	/^} oeCallbackDataType;$/;"	t	typeref:struct:oeCallbackDataType	file:
offScreenWindow	.\src\MainForm.c	/^static WinHandle offScreenWindow;$/;"	v	file:
olOldWindow	.\src\Utils.c	/^static WinHandle  olOldWindow;$/;"	v	file:
olWindow	.\src\Utils.c	/^static WinHandle  olWindow;$/;"	v	file:
oldColours	.\src\Colours.c	/^RGBColorType *oldColours = NULL;$/;"	v
oneSecUpdate	.\src\GlobalTypes.h	/^	Boolean oneSecUpdate;$/;"	m	struct:__anon50
otherIcon	.\src\Colours.c	/^static const RGBColorType otherIcon = { 0, 0,0, 200 };$/;"	v	file:
otherIcon	.\src\GlobalTypes.h	/^	IndexedColorType otherIcon;$/;"	m	struct:__anon51
palette	.\src\TerrainCore.h	/^	UInt8 *palette;$/;"	m	struct:TerrainCoreParamType
paletteType	.\src\TerrainType.c	/^	TerrainPaletteType paletteType;$/;"	m	struct:TerrainTypeStruct	file:
pan	.\src\MapForm.c	/^} pan = { panOff, 0, 0, 0, 0, 99, false };$/;"	v	typeref:struct:__anon78	file:
panFree	.\src\MapForm.c	/^	enum { panOff, panInit, panFree, panPlan } state;$/;"	e	enum:__anon78::__anon79	file:
panInit	.\src\MapForm.c	/^	enum { panOff, panInit, panFree, panPlan } state;$/;"	e	enum:__anon78::__anon79	file:
panModes	.\src\MapForm.c	/^static const char *panModes[] = {$/;"	v	file:
panOff	.\src\MapForm.c	/^	enum { panOff, panInit, panFree, panPlan } state;$/;"	e	enum:__anon78::__anon79	file:
panPlan	.\src\MapForm.c	/^	enum { panOff, panInit, panFree, panPlan } state;$/;"	e	enum:__anon78::__anon79	file:
pdop	.\src\Gps.h	/^	float pdop;$/;"	m	struct:__anon68
pfCursorKeys	.\src\Platform.h	90;"	d
pfFileReadOnly	.\src\Platform.h	/^typedef enum { pfFileReadOnly, pfFileReadWrite, pfFileTruncate } PFFileMode;$/;"	e	enum:__anon96
pfFileReadWrite	.\src\Platform.h	/^typedef enum { pfFileReadOnly, pfFileReadWrite, pfFileTruncate } PFFileMode;$/;"	e	enum:__anon96
pfFileTruncate	.\src\Platform.h	/^typedef enum { pfFileReadOnly, pfFileReadWrite, pfFileTruncate } PFFileMode;$/;"	e	enum:__anon96
pfHasSound	.\src\Platform.c	/^static Boolean pfHasSound = false;$/;"	v	file:
pfSeekCurrent	.\src\Platform.h	/^typedef enum { pfSeekStart, pfSeekEnd, pfSeekCurrent} PFFileSeek;$/;"	e	enum:__anon97
pfSeekEnd	.\src\Platform.h	/^typedef enum { pfSeekStart, pfSeekEnd, pfSeekCurrent} PFFileSeek;$/;"	e	enum:__anon97
pfSeekStart	.\src\Platform.h	/^typedef enum { pfSeekStart, pfSeekEnd, pfSeekCurrent} PFFileSeek;$/;"	e	enum:__anon97
pilot	.\src\CpInterface.c	/^	UInt32 pilot;$/;"	m	struct:__anon26	file:
pinMaxConstraintSize	.\extsrc\CollapseUtils.h	26;"	d
pixelHeight	.\src\GlobalTypes.h	/^	Coord height, pixelHeight;$/;"	m	struct:__anon52
pixelScale	.\src\MapIcon.h	/^	Int32 pixelScale;$/;"	m	struct:__anon85
pixelWidth	.\src\GlobalTypes.h	/^	Coord width, pixelWidth;$/;"	m	struct:__anon52
pixelsPerDegree	.\src\AIGauge.c	/^static Coord pixelsPerDegree = 3;$/;"	v	file:
plan	.\src\CpInterface.c	/^	UInt32 plan;$/;"	m	struct:__anon25	file:
plan	.\src\FlightPlan.c	/^	FlightPlanType plan[FP_STACK_SIZE];$/;"	m	struct:FlightPlanStackType	file:
planID	.\src\CpInterface.c	/^static UInt32 planID;$/;"	v	file:
planRecord	.\src\CpInterface.c	/^typedef enum {noType, flightRecord=321, routeRecord, wbRecord, planRecord }$/;"	e	enum:__anon21	file:
planningMode	.\src\MapForm.c	/^static Boolean planningMode;$/;"	v	file:
point	.\src\Instruments.c	/^	PolyPointType point[5];$/;"	m	struct:VSITypeStruct	file:
pointer	.\src\Colours.c	/^static const RGBColorType pointer= { 0, 0, 0, 200 };$/;"	v	file:
pointer	.\src\GlobalTypes.h	/^	IndexedColorType pointer;$/;"	m	struct:__anon51
points	.\src\HeadingIndicator.c	/^	PointType points[NUM_POINTS+8];  \/\/ extra points for the CDI dots$/;"	m	struct:HSITypeStruct	file:
position	.\extsrc\GPSLib.h	/^    GPSPositionDataType     position;$/;"	m	struct:__anon10
position	.\src\Instruments.c	/^	RectangleType position;$/;"	m	struct:SatConstTypeStruct	file:
posn	.\src\Gps.h	/^	GPSPosnData		posn;$/;"	m	struct:__anon72
pow	.\extsrc\MathLib.c	/^double pow(double x, double y) {$/;"	f
preferencesDialogMapping	.\src\Main.c	/^static const FunctionKeymapType preferencesDialogMapping[] = {$/;"	v	file:
preferencesShown	.\src\CpInterface.c	/^	UInt16 preferencesShown;            \/\/ true if prefs have been Oked$/;"	m	struct:__anon30	file:
preselectedWaypoint	.\src\MapForm.c	/^static WaypointIDType preselectedWaypoint;$/;"	v	file:
pressure	.\src\CpInterface.c	/^	double     pressure;$/;"	m	struct:__anon28	file:
pressureUnits	.\src\CpInterface.c	/^	UInt16 pressureUnits;               \/\/ {inHg, hPa}$/;"	m	struct:__anon30	file:
previewMode	.\src\MapManager.c	/^	Boolean previewMode;$/;"	m	struct:MapTypeStruct	file:
proxDisplayArea	.\src\DiversionForm.c	/^static const RectangleType proxDisplayArea = { { DvItemListLeft, DvItemListTop }, {DvItemWidth,DvItemHeight*4} };$/;"	v	file:
proxList	.\src\DiversionForm.c	/^static ProxWaypointListType proxList;$/;"	v	file:
proxRowHeight	.\src\DiversionForm.c	/^static const UInt16 proxRowHeight = DvItemHeight;$/;"	v	file:
ptr	.\src\MapAirspace.h	/^	const AirspaceType *ptr;$/;"	m	struct:__anon76
ptr	.\src\MapIcon.h	/^	const Waypoint   *ptr;$/;"	m	struct:__anon85
ptr	.\src\MapManager.h	/^		AirspaceType *ptr;$/;"	m	struct:MapSelectionStructType::__anon92
ptr	.\src\MapManager.h	/^		Waypoint *ptr;$/;"	m	struct:MapSelectionStructType::__anon91
quadrant	.\src\CpInterface.c	/^	Quadrant   quadrant;$/;"	m	struct:__anon28	file:
radDistanceToDescend	.\src\NavManager.c	/^	float radDistanceToDescend;\/\/ radians$/;"	m	struct:__anon94	file:
radDistanceToVNAV	.\src\NavManager.c	/^	float radDistanceToVNAV;\/\/ radians$/;"	m	struct:__anon94	file:
radius	.\src\AsDatabase.h	/^	Int32 radius;$/;"	m	struct:__anon17
radius	.\src\HeadingIndicator.c	/^	Coord radius;	\/\/ radius of HSI$/;"	m	struct:HSITypeStruct	file:
radius	.\src\Instruments.c	/^	Coord radius;	\/\/ radius of constellation$/;"	m	struct:SatConstTypeStruct	file:
radius	.\src\MapAirspace.h	/^	Coord   radius;$/;"	m	struct:__anon75
range	.\src\DiversionForm.c	/^	double         range;$/;"	m	struct:__anon32	file:
rangeY	.\src\MainForm.c	/^static const Coord rangeY         = 16;$/;"	v	file:
rateOfClimb	.\src\Gps.c	/^static const float rateOfClimb = 800;$/;"	v	file:
rateOfTurn	.\src\Gps.c	/^static const float rateOfTurn    = 3.0;$/;"	v	file:
rateType	.\src\FlightPlan.h	/^	VNAVRateType rateType;$/;"	m	struct:__anon38
rawAltitude	.\src\Gps.h	/^	float		rawAltitude;\/\/ raw (GPS) altitude$/;"	m	struct:__anon67
readCallbackFunc	.\src\Platform.c	/^static Err readCallbackFunc(void* UserDataP, SndStreamRef stream, void* bufferP, UInt32 frameCount) {$/;"	f	file:
recordEventFile	.\src\Platform.c	/^static PFFileRef recordEventFile = NULL;$/;"	v	file:
recordType	.\src\CpInterface.c	/^	CpRecordType recordType;$/;"	m	struct:__anon26	file:
recordType	.\src\CpInterface.c	/^	CpRecordType recordType;$/;"	m	struct:__anon29	file:
red	.\src\Colours.c	/^static const RGBColorType red     = { 0, 200, 0, 0 };$/;"	v	file:
red	.\src\GlobalTypes.h	/^	IndexedColorType red;$/;"	m	struct:__anon51
reds	.\src\Colours.c	/^static const UIColorTableEntries reds[17] = {$/;"	v	file:
refuel	.\src\CpInterface.c	/^	Boolean    refuel:1;$/;"	m	struct:__anon28	file:
registrationCode	.\src\GlobalTypes.h	/^	UInt16 registrationCode;$/;"	m	struct:__anon50
registrationCode32	.\src\GlobalTypes.h	/^	UInt32 registrationCode32;$/;"	m	struct:__anon50
remainder	.\extsrc\MathLib.c	/^double remainder(double x, double y) {$/;"	f
replaceme	.\extsrc\Collapse.cpp	/^	UInt8 replaceme;$/;"	m	struct:__anon1	file:
replaceme	.\extsrc\Collapse.cpp	/^	UInt8 replaceme;$/;"	m	struct:__anon2	file:
reportNumTests	.\src\GlobalTypes.h	/^	reportNumTests,$/;"	e	enum:__anon61
requiredVS	.\src\NavManager.c	/^	Int32 requiredVS;		\/\/ user units - feet or metres per minute$/;"	m	struct:__anon94	file:
returnedCounter	.\src\AlarmManager.c	/^	UInt16 returnedCounter;$/;"	m	struct:__anon11	file:
rint	.\extsrc\MathLib.c	/^double rint(double x) {$/;"	f
rotation	.\src\MapManager.c	/^	Int16 rotation;$/;"	m	struct:MapTypeStruct	file:
rotation	.\src\MapManager.c	/^	Int16 rotation;$/;"	m	struct:__anon89	file:
round	.\extsrc\MathLib.c	/^double round(double x) {$/;"	f
route	.\src\Colours.c	/^static const RGBColorType route = { 0, 0,204,0 };$/;"	v	file:
route	.\src\CpInterface.c	/^	UInt32 route;$/;"	m	struct:__anon26	file:
route	.\src\GlobalTypes.h	/^	Boolean route;$/;"	m	struct:__anon46
route	.\src\GlobalTypes.h	/^	IndexedColorType route;$/;"	m	struct:__anon51
routeIcons	.\src\MapManager.c	/^	MemHandle routeIcons;$/;"	m	struct:MapTypeStruct	file:
routeLines	.\src\MapManager.c	/^	WinLineType *routeLines;$/;"	m	struct:MapTypeStruct	file:
routeRecord	.\src\CpInterface.c	/^typedef enum {noType, flightRecord=321, routeRecord, wbRecord, planRecord }$/;"	e	enum:__anon21	file:
routeWaypoint	.\src\MapManager.h	/^		Int16    routeWaypoint; 	\/\/ -1 if not a waypoint of the plan,$/;"	m	struct:MapSelectionStructType::__anon91
row_dir_x	.\src\TerrainCore.h	/^	Int32 row_dir_x;$/;"	m	struct:TerrainCoreParamType
row_dir_y	.\src\TerrainCore.h	/^	Int32 row_dir_y;$/;"	m	struct:TerrainCoreParamType
row_src_h	.\src\TerrainCore.h	/^	Int32 row_src_h;$/;"	m	struct:TerrainCoreParamType
row_src_w	.\src\TerrainCore.h	/^	Int32 row_src_w;$/;"	m	struct:TerrainCoreParamType
runwayIcon	.\src\DiversionForm.c	/^	UInt16         runwayIcon;$/;"	m	struct:__anon32	file:
runwayLength	.\src\GlobalTypes.h	/^	UInt16            runwayLength;$/;"	m	struct:__anon50
runwayLength	.\src\MapIcon.c	/^static Int32 runwayLength, runwayLength9;$/;"	v	file:
runwayLength9	.\src\MapIcon.c	/^static Int32 runwayLength, runwayLength9;$/;"	v	file:
runwaySurface	.\src\GlobalTypes.h	/^	RunwaySurfaceType runwaySurface;$/;"	m	struct:__anon50
runwayWidth	.\src\GlobalTypes.h	/^	UInt16            runwayWidth;$/;"	m	struct:__anon50
runways	.\src\MapIcon.h	/^	CpRunwayInfoType *runways;$/;"	m	struct:__anon82
runways	.\src\WPInfoDialog.c	/^static enum {all = 0, frequencies, runways, ils} displayMode = all;$/;"	e	enum:__anon111	file:
sat	.\src\Gps.h	/^	GPSSatData		sat;$/;"	m	struct:__anon72
satConst	.\src\GPSForm.c	/^static SatConstType satConst;$/;"	v	file:
satConstInner	.\src\Colours.c	/^static const RGBColorType satConstInner = { 0, 190, 190, 220};$/;"	v	file:
satConstInner	.\src\GlobalTypes.h	/^	IndexedColorType satConstInner;$/;"	m	struct:__anon51
satConstOuter	.\src\Colours.c	/^static const RGBColorType satConstOuter = { 0, 100, 100, 200};$/;"	v	file:
satConstOuter	.\src\GlobalTypes.h	/^	IndexedColorType satConstOuter;$/;"	m	struct:__anon51
saveFlightDialogMapping	.\src\Main.c	/^static const FunctionKeymapType saveFlightDialogMapping[] = {$/;"	v	file:
scalb	.\extsrc\MathLib.c	/^double scalb(double x, double exponent) {$/;"	f
scalbn	.\extsrc\MathLib.c	/^double scalbn(double x, Int16 exponent) {$/;"	f
scale	.\src\GlobalTypes.h	/^	Int16 scale;$/;"	m	struct:__anon46
scale	.\src\Instruments.c	/^	float scale;$/;"	m	struct:GSITypeStruct	file:
scale	.\src\Instruments.c	/^	float scale;$/;"	m	struct:VSITypeStruct	file:
scale	.\src\MapForm.c	/^static const Int16 scale[3][MAX_SCALES] = {$/;"	v	file:
scaleDivisorSeed	.\src\MapForm.c	/^static const Int32 scaleDivisorSeed[3] = { $/;"	v	file:
scanDB	.\src\WDManager.c	/^	Int16 scanDB;$/;"	m	struct:WDMSearchStructType	file:
scanNorth	.\src\WDManager.c	/^	enum {scanNorth, scanSouth} subScanState;$/;"	e	enum:WDMSearchStructType::__anon107	file:
scanSouth	.\src\WDManager.c	/^	enum {scanNorth, scanSouth} subScanState;$/;"	e	enum:WDMSearchStructType::__anon107	file:
scanState	.\src\DiversionForm.c	/^static enum { disabled, starting, scanning, waiting } scanState = disabled;$/;"	v	typeref:enum:__anon35	file:
scanning	.\src\DiversionForm.c	/^static enum { disabled, starting, scanning, waiting } scanState = disabled;$/;"	e	enum:__anon35	file:
screen	.\src\TerrainCore.h	/^	UInt8 *screen;$/;"	m	struct:TerrainCoreParamType
screenx	.\src\MapManager.c	/^	Coord screenx, screeny;$/;"	m	struct:__anon89	file:
screeny	.\src\MapManager.c	/^	Coord screenx, screeny;$/;"	m	struct:__anon89	file:
search	.\src\DiversionForm.c	/^static \/*@only@*\/ \/*@null@*\/ WDMSearchHandle search = NULL;$/;"	v	file:
searchCompleted	.\src\WDManager.c	/^	Boolean searchCompleted;$/;"	m	struct:WDMSearchStructType	file:
searchFormMapping	.\src\Main.c	/^static const FunctionKeymapType searchFormMapping[] = {$/;"	v	file:
searchMask	.\src\DiversionForm.c	/^static WaypointClassType searchMask;$/;"	v	file:
searchString	.\src\DiversionForm.c	/^static char searchString[10] = "";$/;"	v	file:
sec	.\src\Gps.h	/^	UInt8 sec;$/;"	m	struct:__anon66
seconds	.\extsrc\GPSLib.h	/^    UInt32      seconds;        \/* seconds since midnight (UTC)     *\/$/;"	m	struct:__anon9
seconds	.\src\CpInterface.c	/^	UInt32 seconds;$/;"	m	struct:__anon26	file:
seconds	.\src\GlobalTypes.h	/^	Int32 seconds;			\/\/ current value of timer (seconds)$/;"	m	struct:__anon48
segData	.\src\AsDatabase.h	/^	LineSegmentType segData[1];$/;"	m	struct:__anon18
segment	.\src\CpInterface.c	/^	SegmentTable segment[maxSegments];$/;"	m	struct:__anon26	file:
segmentCode	.\src\AsDatabase.h	/^	char segmentCode[1];$/;"	m	struct:__anon18
selectedItem	.\src\MapManager.c	/^	Int16 selectedItem;$/;"	m	struct:MapTypeStruct	file:
selectedType	.\src\MapManager.c	/^	MapElementType selectedType;$/;"	m	struct:MapTypeStruct	file:
selectedWaypointID	.\src\DiversionForm.c	/^static WaypointIDType selectedWaypointID = UNSELECTED;$/;"	v	file:
selection	.\src\MapForm.c	/^static MapSelection selection = NULL;$/;"	v	file:
selectionInfoBox	.\src\MapForm.c	/^static RectangleType selectionInfoBox;$/;"	v	file:
selectionLine1	.\src\MapForm.c	/^static char selectionLine1[MAX_INFO_LINE_CHARS+1];$/;"	v	file:
selectionLine2	.\src\MapForm.c	/^static char selectionLine2[MAX_INFO_LINE_CHARS+1];$/;"	v	file:
sendUpdate	.\src\MapDialog.c	/^static Boolean sendUpdate;$/;"	v	file:
serialBuffer	.\src\Gps.c	/^static char 	serialBuffer[4096];	\/* buffer for serial manager *\/$/;"	v	file:
showAI	.\src\MainForm.c	/^static Boolean showAI = false;$/;"	v	file:
showCumulative	.\src\GlobalTypes.h	/^	Boolean showCumulative;$/;"	m	struct:__anon50
showETA	.\src\GlobalTypes.h	/^	Boolean showETA;$/;"	m	struct:__anon50
showHeadingArc	.\src\GlobalTypes.h	/^	Boolean showHeadingArc;$/;"	m	struct:__anon46
showRoute	.\src\MapManager.c	/^	Boolean showRoute;$/;"	m	struct:MapTypeStruct	file:
showTrack	.\src\GlobalTypes.h	/^	Boolean showTrack;$/;"	m	struct:__anon46
showTrackLog	.\src\MapManager.c	/^	Boolean showTrackLog;$/;"	m	struct:MapTypeStruct	file:
showZones	.\src\GlobalTypes.h	/^	Boolean showZones;$/;"	m	struct:__anon46
sid	.\src\CpInterface.c	/^typedef enum {airw, sid, star, approach} CpAirwayType;$/;"	e	enum:__anon24	file:
signbit	.\extsrc\MathLib.c	/^UInt32 signbit(double x) {$/;"	f
significand	.\extsrc\MathLib.c	/^double significand(double x) {$/;"	f
simAltitude	.\src\GlobalTypes.h	/^	float simAltitude;$/;"	m	struct:__anon50
simHeading	.\src\GlobalTypes.h	/^	float simHeading;$/;"	m	struct:__anon50
simSpeed	.\src\GlobalTypes.h	/^	float simSpeed;$/;"	m	struct:__anon50
simpleWait	.\src\MapForm.c	/^static enum { initWait, waitGoto, waitNoGoto, simpleWait } tapPlanState = initWait;$/;"	e	enum:__anon77	file:
simulation	.\src\Gps.c	/^} simulation;$/;"	v	typeref:struct:__anon65	file:
simulationDialogMapping	.\src\Main.c	/^static const FunctionKeymapType simulationDialogMapping[] = {$/;"	v	file:
sin	.\extsrc\MathLib.c	/^double sin(double x) {$/;"	f
sincos	.\extsrc\MathLib.c	/^void sincos(double x, double *sinx, double *cosx) {$/;"	f
sine	.\src\Fixed.c	/^fp14 sine[] =$/;"	v
sine	.\src\MapManager.c	/^	Int32 sine, cosine;$/;"	m	struct:__anon89	file:
sine	.\src\Utils.c	/^static const Int32 sine[SINTABSIZE\/8+1] = { 0, 402, 804, 1206, 1608, 2011, 2413, 2815, 3217, 3619, 4021, 4423, 4824, 5226, 5628, 6030, 6431, 6833, 7235, 7636, 8037, 8439, 8840, 9241, 9642, 10043, 10444, 10845, 11246, 11646, 12047, 12447, 12847, 13247, 13647, 14047, 14447, 14847, 15246, 15645, 16045, 16444, 16843, 17241, 17640, 18038, 18436, 18834, 19232, 19630, 20027, 20425, 20822, 21219, 21615, 22012, 22408, 22804, 23200, 23596, 23991, 24387, 24782, 25176, 25571, 25965, 26359, 26753, 27147, 27540, 27933, 28326, 28718, 29110, 29502, 29894, 30285, 30676, 31067, 31458, 31848, 32238, 32627, 33017, 33406, 33794, 34183, 34571, 34959, 35346, 35733, 36120, 36506, 36892, 37278, 37663, 38048, 38433, 38817, 39201, 39585, 39968, 40350, 40733, 41115, 41497, 41878, 42259, 42639, 43019, 43399, 43778, 44157, 44535, 44913, 45291, 45668, 46045, 46421, 46797, 47172, 47547, 47922, 48296, 48669, 49042, 49415, 49787, 50159, 50530, 50901, 51271, 51641, 52011, 52380, 52748, 53116, 53483, 53850, 54216, 54582, 54948, 55312, 55677, 56041, 56404, 56766, 57129, 57490, 57851, 58212, 58572, 58931, 59290, 59649, 60007, 60364, 60720, 61076, 61432, 61787, 62141, 62495, 62848, 63201, 63553, 63904, 64255, 64605, 64955, 65304, 65652, 66000, 66347, 66693, 67039, 67384, 67729, 68073, 68416, 68759, 69101, 69442, 69783, 70123, 70463, 70801, 71139, 71477, 71814, 72150, 72485, 72820, 73154, 73487, 73820, 74152, 74483, 74813, 75143, 75472, 75801, 76128, 76455, 76782, 77107, 77432, 77756, 78079, 78402, 78724, 79045, 79366, 79685, 80004, 80322, 80640, 80956, 81272, 81587, 81902, 82215, 82528, 82840, 83151, 83462, 83771, 84080, 84388, 84696, 85002, 85308, 85613, 85917, 86220, 86523, 86824, 87125, 87425, 87724, 88023, 88320, 88617, 88913, 89208, 89502, 89795, 90088, 90379, 90670, 90960, 91249, 91538, 91825, 92111, 92397, 92682 };$/;"	v	file:
sinh	.\extsrc\MathLib.c	/^double sinh(double x) {$/;"	f
sinlat	.\src\MapManager.c	/^	double sinlat;$/;"	m	struct:MapTypeStruct	file:
sky	.\src\Colours.c	/^static const RGBColorType sky   = { 0, 85,130,224};$/;"	v	file:
sky	.\src\GlobalTypes.h	/^	IndexedColorType sky;$/;"	m	struct:__anon51
snr	.\extsrc\GPSLib.h	/^    Int16       snr;        \/* signal to noise ratio * 100 (dB Hz)  *\/$/;"	m	struct:__anon3
sonyVersion1	.\extsrc\CollapseUtils.h	16;"	d
sonyVersion2	.\extsrc\CollapseUtils.h	17;"	d
source	.\src\WDManager.c	/^	enum { compact, external, internal } source;$/;"	m	struct:__anon105	typeref:enum:__anon105::__anon106	file:
sourcePalette	.\src\TerrainType.c	/^	UInt8 *sourcePalette;		\/\/ user-supplied palette$/;"	m	struct:TerrainTypeStruct	file:
south	.\src\CpInterface.c	/^typedef enum {north, west, south, east, noIntersection }Quadrant;$/;"	e	enum:__anon23	file:
southDone	.\src\WDManager.c	/^	Boolean southDone;$/;"	m	struct:WDMSearchStructType	file:
southIndex	.\src\WDManager.c	/^	Int32 southIndex;$/;"	m	struct:WDMSearchStructType	file:
span	.\src\Polygon.c	/^static void span(Coord y, edgeRec *pt1, edgeRec *pt2)$/;"	f	file:
speed	.\extsrc\GPSLib.h	/^    float       speed;      \/* speed, horizontal only (m\/s)         *\/$/;"	m	struct:__anon8
speed	.\src\GlobalTypes.h	/^	UInt16 speed;	\/* 0=kts, 1=mph, 2=kph *\/$/;"	m	struct:__anon54
speed	.\src\Gps.c	/^	float speed;$/;"	m	struct:__anon65	file:
speed	.\src\Gps.h	/^	float 		speed;		\/* in kts *\/$/;"	m	struct:__anon67
speedConv	.\src\GlobalTypes.h	/^	float speedConv;$/;"	m	struct:__anon55
speedUnits	.\src\CpInterface.c	/^	UInt16 speedUnits;                  \/\/ {nm, mi, km}$/;"	m	struct:__anon30	file:
speedUnits	.\src\GlobalTypes.h	/^	const char *speedUnits;$/;"	m	struct:__anon55
sqrt	.\extsrc\MathLib.c	/^double sqrt(double x) {$/;"	f
srcAirspace	.\src\MapManager.c	/^	srcAirspace,		\/* from airspace DB *\/$/;"	e	enum:__anon87	file:
srcRouteWaypoint	.\src\MapManager.c	/^	srcRouteWaypoint, 	\/* from the route waypoints *\/$/;"	e	enum:__anon87	file:
srcTFRs	.\src\MapManager.c	/^	srcTFRs,			\/* from TFRs DB *\/$/;"	e	enum:__anon87	file:
srcTrackLog	.\src\MapManager.c	/^	srcTrackLog$/;"	e	enum:__anon87	file:
srcWaypoints	.\src\MapManager.c	/^	srcWaypoints,		\/* from waypoint database *\/$/;"	e	enum:__anon87	file:
stackSize	.\src\FlightPlan.c	/^	Int16 stackSize;$/;"	m	struct:FlightPlanStackType	file:
standardHeight	.\src\GlobalTypes.h	/^	Coord standardHeight;$/;"	m	struct:__anon52
standardWidth	.\src\GlobalTypes.h	/^	Coord standardWidth;$/;"	m	struct:__anon52
star	.\src\CpInterface.c	/^typedef enum {airw, sid, star, approach} CpAirwayType;$/;"	e	enum:__anon24	file:
start	.\src\AsDatabase.h	/^	Int16 start, end;$/;"	m	struct:__anon17
starting	.\src\DiversionForm.c	/^static enum { disabled, starting, scanning, waiting } scanState = disabled;$/;"	e	enum:__anon35	file:
state	.\src\GlobalTypes.h	/^	enum { timerStopped, timerFlight, timerRunning } state;$/;"	m	struct:__anon48	typeref:enum:__anon48::__anon49
state	.\src\MapForm.c	/^	enum { panOff, panInit, panFree, panPlan } state;$/;"	m	struct:__anon78	typeref:enum:__anon78::__anon79	file:
status	.\extsrc\GPSLib.h	/^    GPSStatusDataType       status;$/;"	m	struct:__anon10
status	.\extsrc\GPSLib.h	/^    UInt8       status;     \/* status bitfield                      *\/$/;"	m	struct:__anon3
statusBar	.\src\Colours.c	/^static const RGBColorType statusBar = {0, 0, 102, 204 };$/;"	v	file:
statusBar	.\src\GlobalTypes.h	/^	IndexedColorType statusBar;$/;"	m	struct:__anon51
statusBarLight	.\src\Colours.c	/^static const RGBColorType statusBarLight = { 0, 149, 204, 255 };$/;"	v	file:
statusBarLight	.\src\GlobalTypes.h	/^	IndexedColorType statusBarLight;$/;"	m	struct:__anon51
step	.\src\Fixed.c	100;"	d	file:
stnr	.\src\Gps.h	/^	Int8 		stnr[GPSNumSats+1];$/;"	m	struct:__anon68
streamRef	.\src\Platform.c	/^	SndStreamRef streamRef;$/;"	m	struct:oeCallbackDataType	file:
string	.\src\MessageDialog.h	/^	const char *string[MAX_MESSAGE_ITEMS];$/;"	m	struct:__anon93
suas	.\src\Colours.c	/^static const RGBColorType suas = { 0, 255, 0, 0 };$/;"	v	file:
suas	.\src\GlobalTypes.h	/^	IndexedColorType suas;$/;"	m	struct:__anon51
suasAlert	.\src\AsDatabase.h	55;"	d
suasDanger	.\src\AsDatabase.h	56;"	d
suasMoa	.\src\AsDatabase.h	57;"	d
suasProhibited	.\src\AsDatabase.h	58;"	d
suasRestricted	.\src\AsDatabase.h	59;"	d
suasTra	.\src\AsDatabase.h	60;"	d
suasTypes	.\src\AsDatabase.c	/^const char *suasTypes[] = { "ALR","DGR","MOA","PHB","RST","TRA","WAR" };$/;"	v
suasWarning	.\src\AsDatabase.h	61;"	d
subScanState	.\src\WDManager.c	/^	enum {scanNorth, scanSouth} subScanState;$/;"	m	struct:WDMSearchStructType	typeref:enum:WDMSearchStructType::__anon107	file:
surfEither	.\src\GlobalTypes.h	/^typedef enum { surfEither, surfHard, surfGrass } RunwaySurfaceType;$/;"	e	enum:__anon43
surfGrass	.\src\GlobalTypes.h	/^typedef enum { surfEither, surfHard, surfGrass } RunwaySurfaceType;$/;"	e	enum:__anon43
surfHard	.\src\GlobalTypes.h	/^typedef enum { surfEither, surfHard, surfGrass } RunwaySurfaceType;$/;"	e	enum:__anon43
svid	.\extsrc\GPSLib.h	/^    UInt8       svid;       \/* space vehicle identifier             *\/$/;"	m	struct:__anon3
swap	.\src\Polygon.c	10;"	d	file:
swapScreen	.\src\Utils.c	/^static WinHandle swapScreen;$/;"	v	file:
sysAppLaunchCmdCoPilotLaunch	.\src\Platform.c	1759;"	d	file:
sysLibTrapClose	.\extsrc\MathLib.h	/^	SYS_TRAP(sysLibTrapClose);$/;"	v
sysLibTrapCustom	.\extsrc\MathLib.h	/^Err MathLibACos(UInt16 refnum, double x, double *result)	SYS_TRAP(sysLibTrapCustom);$/;"	v
sysLibTrapOpen	.\extsrc\MathLib.h	/^	SYS_TRAP(sysLibTrapOpen);$/;"	v
sysLibTrapSleep	.\extsrc\MathLib.h	/^	SYS_TRAP(sysLibTrapSleep);$/;"	v
sysLibTrapWake	.\extsrc\MathLib.h	/^	SYS_TRAP(sysLibTrapWake);$/;"	v
sysNotifyGPSDataEvent	.\extsrc\GPSLib.h	30;"	d
system	.\src\CpInterface.c	/^typedef enum {system,user} CpWaypointType;$/;"	e	enum:__anon22	file:
t1lat	.\src\TerrainType.c	/^	Int32 t1lat, t1lon;$/;"	m	struct:TerrainTypeStruct	file:
t1lon	.\src\TerrainType.c	/^	Int32 t1lat, t1lon;$/;"	m	struct:TerrainTypeStruct	file:
t3lat	.\src\TerrainType.c	/^	Int32 t3lat, t3lon;			\/\/top left and bottom right of terrain in cache$/;"	m	struct:TerrainTypeStruct	file:
t3lon	.\src\TerrainType.c	/^	Int32 t3lat, t3lon;			\/\/top left and bottom right of terrain in cache$/;"	m	struct:TerrainTypeStruct	file:
table1	.\src\Polygon.c	/^static edgeRec table1[HEIGHT];$/;"	v	file:
table2	.\src\Polygon.c	/^static edgeRec table2[HEIGHT];$/;"	v	file:
tan	.\extsrc\MathLib.c	/^double tan(double x) {$/;"	f
tanh	.\extsrc\MathLib.c	/^double tanh(double x) {$/;"	f
tapPlanLeg	.\src\MapForm.c	/^static Int16  tapPlanLeg;$/;"	v	file:
tapPlanState	.\src\MapForm.c	/^static enum { initWait, waitGoto, waitNoGoto, simpleWait } tapPlanState = initWait;$/;"	v	typeref:enum:__anon77	file:
tapPlanString	.\src\MapForm.c	/^static char tapPlanString[50];$/;"	v	file:
tapPlanTimeout	.\src\MapForm.c	/^static UInt32 tapPlanTimeout;$/;"	v	file:
tapPlanTriedDelete	.\src\MapForm.c	/^static Boolean tapPlanTriedDelete;$/;"	v	file:
targetAltitude	.\src\FlightPlan.h	/^	float       targetAltitude;	\/\/ feet$/;"	m	struct:__anon38
targetAltitude	.\src\Gps.c	/^	float targetAltitude;$/;"	m	struct:__anon65	file:
targetAltitude	.\src\NavManager.c	/^	float   targetAltitude;		\/\/ feet, AMSL$/;"	m	struct:__anon94	file:
targetHeading	.\src\Gps.c	/^	float targetHeading;$/;"	m	struct:__anon65	file:
targetRate	.\src\FlightPlan.h	/^	float		targetRate;		\/\/ feet\/nm or radians$/;"	m	struct:__anon38
targetSpeed	.\src\Gps.c	/^	float targetSpeed;$/;"	m	struct:__anon65	file:
tcParam	.\src\TerrainType.c	/^struct TerrainCoreParamType tcParam;$/;"	v	typeref:struct:TerrainCoreParamType
tc_height	.\src\TerrainType.c	/^	Int32 tc_width, tc_height;	\/\/ dimensions of cache$/;"	m	struct:TerrainTypeStruct	file:
tc_scale_factor	.\src\TerrainType.c	/^	Int32 tc_scale_factor;		\/\/ scaling: 1=hi-res, 2=med, 4=lo$/;"	m	struct:TerrainTypeStruct	file:
tc_width	.\src\TerrainCore.h	/^	Int32 tc_width;$/;"	m	struct:TerrainCoreParamType
tc_width	.\src\TerrainType.c	/^	Int32 tc_width, tc_height;	\/\/ dimensions of cache$/;"	m	struct:TerrainTypeStruct	file:
temp	.\src\CpInterface.c	/^	double     temp;$/;"	m	struct:__anon28	file:
tempWaypoints	.\src\WDManager.c	/^	Waypoint *tempWaypoints[MAX_TEMP];$/;"	m	struct:WDMHandleStructType	file:
terrain	.\src\GlobalTypes.h	/^	TerrainPaletteType terrain;$/;"	m	struct:__anon46
terrain	.\src\MapManager.c	/^	TerrainType terrain;$/;"	m	struct:MapTypeStruct	file:
terrainNormal	.\src\TerrainType.h	/^typedef enum { terrainSys = -1, terrainOff, terrainNormal, terrainNormalWarn, terrainWarn } TerrainPaletteType;$/;"	e	enum:__anon101
terrainNormalWarn	.\src\TerrainType.h	/^typedef enum { terrainSys = -1, terrainOff, terrainNormal, terrainNormalWarn, terrainWarn } TerrainPaletteType;$/;"	e	enum:__anon101
terrainOff	.\src\TerrainType.h	/^typedef enum { terrainSys = -1, terrainOff, terrainNormal, terrainNormalWarn, terrainWarn } TerrainPaletteType;$/;"	e	enum:__anon101
terrainRefAlt	.\src\GlobalTypes.h	/^	float terrainRefAlt;			\/\/ reference altitude in feet$/;"	m	struct:__anon46
terrainSys	.\src\TerrainType.h	/^typedef enum { terrainSys = -1, terrainOff, terrainNormal, terrainNormalWarn, terrainWarn } TerrainPaletteType;$/;"	e	enum:__anon101
terrainWarn	.\src\TerrainType.h	/^typedef enum { terrainSys = -1, terrainOff, terrainNormal, terrainNormalWarn, terrainWarn } TerrainPaletteType;$/;"	e	enum:__anon101
terrain_cache	.\src\TerrainType.c	/^	TCElement *terrain_cache;$/;"	m	struct:TerrainTypeStruct	file:
terrain_cache_check	.\src\TerrainType.c	/^static void terrain_cache_check(TerrainType t, Int32 p1lat, Int32 p1lon, Int32 p3lat, Int32 p3lon) {$/;"	f	file:
terrain_invalid	.\src\TerrainType.c	/^	Boolean terrain_invalid;	\/\/ set true if the terrain cache is invalid and$/;"	m	struct:TerrainTypeStruct	file:
textDialogMapping	.\src\Main.c	/^static const FunctionKeymapType textDialogMapping[] = {$/;"	v	file:
tf_lat1	.\src\TerrainType.c	/^	Int32 tf_lat1, tf_lon1;$/;"	m	struct:TerrainTypeStruct	file:
tf_lat3	.\src\TerrainType.c	/^	Int32 tf_lat3, tf_lon3;		$/;"	m	struct:TerrainTypeStruct	file:
tf_lon1	.\src\TerrainType.c	/^	Int32 tf_lat1, tf_lon1;$/;"	m	struct:TerrainTypeStruct	file:
tf_lon3	.\src\TerrainType.c	/^	Int32 tf_lat3, tf_lon3;		$/;"	m	struct:TerrainTypeStruct	file:
theLog	.\src\Logging.c	/^static MemPtr theLog;$/;"	v	file:
thisForm	.\src\MainForm.c	/^static FormPtr	thisForm;$/;"	v	file:
tickInterval	.\src\Instruments.c	/^	Int32 tickInterval;$/;"	m	struct:GSITypeStruct	file:
time	.\extsrc\GPSLib.h	/^    GPSTimeDataType         time;$/;"	m	struct:__anon10
time	.\src\AlarmManager.c	/^	UInt32 time;$/;"	m	struct:__anon11	file:
time	.\src\FlightPlanForm.c	/^	Int32 time;$/;"	m	struct:__anon42	file:
timeETA	.\src\GlobalTypes.h	/^typedef enum {timeETE, timeETA, timeLocal, timeUTC, timeETV, timeETT } TimeDisplayType;$/;"	e	enum:__anon56
timeETE	.\src\GlobalTypes.h	/^typedef enum {timeETE, timeETA, timeLocal, timeUTC, timeETV, timeETT } TimeDisplayType;$/;"	e	enum:__anon56
timeETT	.\src\GlobalTypes.h	/^typedef enum {timeETE, timeETA, timeLocal, timeUTC, timeETV, timeETT } TimeDisplayType;$/;"	e	enum:__anon56
timeETV	.\src\GlobalTypes.h	/^typedef enum {timeETE, timeETA, timeLocal, timeUTC, timeETV, timeETT } TimeDisplayType;$/;"	e	enum:__anon56
timeField	.\src\MainForm.c	/^static NavDataType        timeField= navETE;$/;"	v	file:
timeHotspot	.\src\MainForm.c	/^static RectangleType timeHotspot;$/;"	v	file:
timeLocal	.\src\GlobalTypes.h	/^typedef enum {timeETE, timeETA, timeLocal, timeUTC, timeETV, timeETT } TimeDisplayType;$/;"	e	enum:__anon56
timeStamp	.\src\Gps.h	/^	GPSTimeStamp	timeStamp;$/;"	m	struct:__anon69
timeTo	.\src\NavManager.c	/^	Int32   timeTo;     \/\/ seconds$/;"	m	struct:__anon94	file:
timeToTurn	.\src\NavManager.c	/^	Int32  timeToTurn;		\/\/ in seconds$/;"	m	struct:__anon94	file:
timeToVNAV	.\src\NavManager.c	/^	Int32 timeToVNAV;		\/\/ seconds$/;"	m	struct:__anon94	file:
timeUTC	.\src\GlobalTypes.h	/^typedef enum {timeETE, timeETA, timeLocal, timeUTC, timeETV, timeETT } TimeDisplayType;$/;"	e	enum:__anon56
timer	.\src\GlobalTypes.h	/^	TimerType timer[NUMTIMERS];$/;"	m	struct:__anon50
timerFlight	.\src\GlobalTypes.h	/^	enum { timerStopped, timerFlight, timerRunning } state;$/;"	e	enum:__anon48::__anon49
timerFormMapping	.\src\Main.c	/^static const FunctionKeymapType timerFormMapping[] = {$/;"	v	file:
timerRunning	.\src\GlobalTypes.h	/^	enum { timerStopped, timerFlight, timerRunning } state;$/;"	e	enum:__anon48::__anon49
timerStopped	.\src\GlobalTypes.h	/^	enum { timerStopped, timerFlight, timerRunning } state;$/;"	e	enum:__anon48::__anon49
timerToSet	.\src\TimerForm.c	/^static TimerType *timerToSet = NULL;$/;"	v	file:
tlFwdRef	.\src\MapManager.c	/^	TLRefType tlFwdRef;		\/\/ allows forward log retrieval$/;"	m	struct:MapTypeStruct	file:
tlRef	.\src\MapManager.c	/^	TLRefType tlRef;		\/\/ reference to track log, for retrieval$/;"	m	struct:MapTypeStruct	file:
toFromFlag	.\src\MainForm.c	/^static UInt8 toFromFlag = ToFlag;$/;"	v	file:
toFromFlagY	.\src\MainForm.c	/^static const Coord toFromFlagY    = 9;$/;"	v	file:
toIdent	.\src\NavManager.c	/^	char toIdent[MAX_IDENT_CHARS+1];$/;"	m	struct:__anon94	file:
topOfList	.\src\DiversionForm.c	/^static Int16 topOfList = 0;$/;"	v	file:
totalDistance	.\src\FlightPlanForm.c	/^static float totalDistance; 	\/* radians *\/$/;"	v	file:
totalTime	.\src\FlightPlanForm.c	/^static Int32 totalTime;		\/* seconds *\/$/;"	v	file:
track	.\extsrc\GPSLib.h	/^    float       track;      \/* track (radians)                      *\/$/;"	m	struct:__anon8
track	.\src\Colours.c	/^static const RGBColorType track = { 0, 0,220,0 };$/;"	v	file:
track	.\src\FlightPlan.h	/^	float track; 	\/\/ in radians$/;"	m	struct:__anon40
track	.\src\FlightPlanForm.c	/^	Int16 track;$/;"	m	struct:__anon42	file:
track	.\src\GlobalTypes.h	/^	IndexedColorType track;$/;"	m	struct:__anon51
track	.\src\NavManager.c	/^	Int16  track;$/;"	m	struct:__anon94	file:
trackError	.\src\NavManager.c	/^	float trackError; \/\/ user units$/;"	m	struct:__anon94	file:
trackLog	.\src\GlobalTypes.h	/^	Boolean trackLog;$/;"	m	struct:__anon46
trackLog	.\src\GlobalTypes.h	/^	TrackLogSettingType trackLog;$/;"	m	struct:__anon50
trackLog	.\src\MapManager.c	/^	MemHandle trackLog;		\/\/ collection of WinLineType$/;"	m	struct:MapTypeStruct	file:
trackLog10s	.\src\GlobalTypes.h	/^typedef enum { trackLogOff = 0, trackLog1s, trackLog5s, trackLog10s } TrackLogSettingType;$/;"	e	enum:__anon47
trackLog1s	.\src\GlobalTypes.h	/^typedef enum { trackLogOff = 0, trackLog1s, trackLog5s, trackLog10s } TrackLogSettingType;$/;"	e	enum:__anon47
trackLog5s	.\src\GlobalTypes.h	/^typedef enum { trackLogOff = 0, trackLog1s, trackLog5s, trackLog10s } TrackLogSettingType;$/;"	e	enum:__anon47
trackLogOff	.\src\GlobalTypes.h	/^typedef enum { trackLogOff = 0, trackLog1s, trackLog5s, trackLog10s } TrackLogSettingType;$/;"	e	enum:__anon47
trackLogPtr	.\src\TrackLog.c	/^static TLInternalRecordType *trackLogPtr;$/;"	v	file:
trackUp	.\src\GlobalTypes.h	/^	Boolean trackUp;$/;"	m	struct:__anon46
transMatrix	.\src\MapManager.c	/^} transMatrix;$/;"	v	typeref:struct:__anon89
trueHeading	.\src\Gps.h	/^	float		trueHeading; 	\/* degrees true *\/$/;"	m	struct:__anon67
trunc	.\extsrc\MathLib.c	/^double trunc(double x) {$/;"	f
turnAngle	.\src\NavManager.c	/^	float  turnAngle;		\/\/ "a", in radians$/;"	m	struct:__anon94	file:
turnAnticipation	.\src\GlobalTypes.h	/^	Boolean turnAnticipation;$/;"	m	struct:__anon50
turnArmed	.\src\NavManager.c	/^	Boolean turnArmed;		\/\/ true if <2 minutes to turn$/;"	m	struct:__anon94	file:
turnRadius	.\src\NavManager.c	/^	float  turnRadius;		\/\/ in NM, based on present speed$/;"	m	struct:__anon94	file:
type	.\src\AsDatabase.h	/^	AirspaceClassType type;$/;"	m	struct:__anon18
type	.\src\DiversionForm.c	/^	WaypointClassType type;$/;"	m	struct:__anon32	file:
type	.\src\MapAirspace.h	/^	AirspaceClassType type;$/;"	m	struct:__anon75
type	.\src\MapIcon.h	/^	WaypointClassType type;$/;"	m	struct:__anon81
type	.\src\MapManager.c	/^	MapElementType type;$/;"	m	struct:__anon88	file:
type	.\src\MapManager.h	/^	enum { msWaypoint, msAirspace } type;$/;"	m	struct:MapSelectionStructType	typeref:enum:MapSelectionStructType::__anon90
type	.\src\WDManager.c	/^	WaypointClassType *type;$/;"	m	struct:__anon104	file:
type	.\src\WDManager.h	/^	WaypointClassType type;$/;"	m	struct:__anon110
typeIdx	.\src\AsDatabase.c	/^	AirspaceClassType *typeIdx;$/;"	m	struct:__anon14	file:
typeIdxRec	.\src\AsDatabase.c	/^enum {lat1IdxRec = 0, lon1IdxRec, lat3IdxRec, lon3IdxRec, typeIdxRec, lastIdxRec };$/;"	e	enum:__anon13	file:
typeIdxRec	.\src\WDManager.c	/^enum { idIdxRec = 0, latIdxRec = 1, lonIdxRec = 2, typeIdxRec = 3, latLonIdxRec = 4, $/;"	e	enum:__anon103	file:
uniqueID	.\src\CpInterface.c	/^	UInt32         uniqueID;$/;"	m	struct:__anon27	file:
units	.\src\GlobalTypes.h	/^	UInt8 units;	\/* 0=Nm, 1=Mi, 2=Km, 3=Copilot *\/$/;"	m	struct:__anon50
up	.\extsrc\GPSLib.h	/^    float       up;         \/* upwards (m\/s)                        *\/$/;"	m	struct:__anon8
upperAlt	.\src\AsDatabase.h	/^	UInt16 lowerAlt, upperAlt;$/;"	m	struct:__anon18
upperAlt	.\src\MapAirspace.h	/^	Int32 upperAlt;$/;"	m	struct:__anon75
upperAltRef	.\src\AsDatabase.h	/^	AltReferenceType upperAltRef;$/;"	m	struct:__anon18
upperAltString	.\src\MapAirspace.h	/^	char  upperAltString[MAX_ALT_CHARS];$/;"	m	struct:__anon75
upperFilter	.\src\GlobalTypes.h	/^	UInt8   upperFilter;$/;"	m	struct:__anon46
useMagnetic	.\src\GlobalTypes.h	/^	Boolean useMagnetic;$/;"	m	struct:__anon50
useSatCount	.\src\Gps.h	/^	UInt8		useSatCount;$/;"	m	struct:__anon68
user	.\src\CpInterface.c	/^typedef enum {system,user} CpWaypointType;$/;"	e	enum:__anon22	file:
utc	.\src\Gps.h	/^	GPSTimeStamp	utc;		\/* time of data receipt *\/$/;"	m	struct:__anon67
v1	.\src\MapForm.c	/^	Boolean v1;$/;"	m	struct:__anon78	file:
value	.\src\MapForm.c	/^	Int32 value;$/;"	m	struct:__anon80	file:
vchrBacklightToggled	.\extsrc\PalmChars.h	96;"	d
vchrCameraShutter	.\extsrc\PalmChars.h	57;"	d
vchrClock	.\extsrc\PalmChars.h	45;"	d
vchrDeviceIncomingCall	.\extsrc\PalmChars.h	79;"	d
vchrDeviceSpecificChar	.\extsrc\PalmChars.h	67;"	d
vchrDownLeft	.\src\Platform.h	67;"	d
vchrDownRight	.\src\Platform.h	66;"	d
vchrEmergencyCall	.\extsrc\PalmChars.h	114;"	d
vchrF1	.\src\Platform.h	68;"	d
vchrF2	.\src\Platform.h	69;"	d
vchrF3	.\src\Platform.h	70;"	d
vchrF4	.\src\Platform.h	71;"	d
vchrFunctionFiveWay	.\extsrc\PalmChars.h	109;"	d
vchrGarminEscape	.\extsrc\GarminChars.h	32;"	d
vchrGarminEscapeHeld	.\extsrc\GarminChars.h	33;"	d
vchrGarminMax	.\extsrc\GarminChars.h	37;"	d
vchrGarminMin	.\extsrc\GarminChars.h	27;"	d
vchrGarminRecord	.\extsrc\GarminChars.h	34;"	d
vchrGarminRecordHeld	.\extsrc\GarminChars.h	35;"	d
vchrGarminThumbWheelDown	.\extsrc\GarminChars.h	30;"	d
vchrGarminThumbWheelIn	.\extsrc\GarminChars.h	31;"	d
vchrGarminThumbWheelUp	.\extsrc\GarminChars.h	29;"	d
vchrHard3Down	.\extsrc\PalmChars.h	71;"	d
vchrHard4Down	.\extsrc\PalmChars.h	75;"	d
vchrHard5	.\extsrc\PalmChars.h	30;"	d
vchrHardRecord	.\extsrc\PalmChars.h	64;"	d
vchrKeyboardSymbol	.\extsrc\PalmChars.h	100;"	d
vchrMyFavoriteApplication	.\extsrc\PalmChars.h	88;"	d
vchrNavChange	.\extsrc\PalmChars.h	53;"	d
vchrPopupBrightness	.\extsrc\PalmChars.h	49;"	d
vchrPowerOnPhone	.\extsrc\PalmChars.h	118;"	d
vchrReplaceLastChar	.\extsrc\PalmChars.h	105;"	d
vchrShiftF1	.\src\Platform.h	72;"	d
vchrShiftF2	.\src\Platform.h	73;"	d
vchrShiftF3	.\src\Platform.h	74;"	d
vchrShiftF4	.\src\Platform.h	75;"	d
vchrSilkClock	.\extsrc\PalmChars.h	41;"	d
vchrTelDevicePowerFinished	.\extsrc\PalmChars.h	92;"	d
vchrTelDevicePowerOn	.\extsrc\PalmChars.h	83;"	d
vchrUpLeft	.\src\Platform.h	64;"	d
vchrUpRight	.\src\Platform.h	65;"	d
vdop	.\src\Gps.h	/^	float vdop;$/;"	m	struct:__anon68
vdopFlagPos	.\src\MainForm.c	/^static const PointType vdopFlagPos = { 50, 65 };$/;"	v	file:
velocity	.\extsrc\GPSLib.h	/^    GPSVelocityDataType     velocity;$/;"	m	struct:__anon10
verticalSpeed	.\src\NavManager.c	/^	float verticalSpeed; \/\/ user units$/;"	m	struct:__anon94	file:
viewSatCount	.\src\Gps.h	/^	UInt8		viewSatCount;$/;"	m	struct:__anon68
visible	.\src\MapAirspace.h	/^	Boolean visible;$/;"	m	struct:__anon75
vnav	.\src\FlightPlan.h	/^	VNAVDataType vnav;$/;"	m	struct:__anon40
vnav	.\src\NavManager.c	/^	const VNAVDataType *vnav;	\/\/ copied in from the flight plan current leg$/;"	m	struct:__anon94	file:
vnavAltAMSL	.\src\FlightPlan.h	/^typedef enum { vnavAltAMSL, vnavAltAboveWP } VNAVAltType;$/;"	e	enum:__anon36
vnavAltAboveWP	.\src\FlightPlan.h	/^typedef enum { vnavAltAMSL, vnavAltAboveWP } VNAVAltType;$/;"	e	enum:__anon36
vnavArmed	.\src\NavManager.c	/^	Boolean vnavArmed;		\/\/ true if within 2mins of top of VNAV$/;"	m	struct:__anon94	file:
vnavCaptured	.\src\NavManager.c	/^	Boolean vnavCaptured;	\/\/ in descent if true$/;"	m	struct:__anon94	file:
vnavDegrees	.\src\FlightPlan.h	/^typedef enum { vnavRatePerMin, vnavRatePerMile, vnavDegrees } VNAVRateType;$/;"	e	enum:__anon37
vnavDialogMapping	.\src\Main.c	/^static const FunctionKeymapType vnavDialogMapping[] = {$/;"	v	file:
vnavEnd	.\src\NavManager.c	/^	float vnavEnd;			\/\/ distance of end-of-vnav from the waypoint$/;"	m	struct:__anon94	file:
vnavRatePerMile	.\src\FlightPlan.h	/^typedef enum { vnavRatePerMin, vnavRatePerMile, vnavDegrees } VNAVRateType;$/;"	e	enum:__anon37
vnavRatePerMin	.\src\FlightPlan.h	/^typedef enum { vnavRatePerMin, vnavRatePerMile, vnavDegrees } VNAVRateType;$/;"	e	enum:__anon37
vnavSet	.\src\FlightPlan.h	/^	Boolean vnavSet;$/;"	m	struct:__anon40
vnavSet	.\src\NavManager.c	/^	Boolean vnavSet;$/;"	m	struct:__anon94	file:
vnd	.\src\VNAVDialog.c	/^static VNAVDataType vnd;$/;"	v	file:
voiceVolume	.\src\GlobalTypes.h	/^	Int32 voiceVolume;$/;"	m	struct:__anon50
vor	.\src\DiversionForm.c	/^static enum { airfield = 0,vor,ndb,intersection,all } displayFilter = airfield;$/;"	e	enum:__anon34	file:
vorFilter	.\src\GlobalTypes.h	39;"	d
vsi	.\src\MainForm.c	/^static VSIType vsi;	\/\/ VSI indicator$/;"	v	file:
vsi	.\src\MapForm.c	/^static VSIType vsi;$/;"	v	file:
vsiClimb	.\src\Colours.c	/^static const RGBColorType vsiClimb = { 0, 100, 130, 224 };$/;"	v	file:
vsiClimb	.\src\GlobalTypes.h	/^	IndexedColorType vsiClimb;$/;"	m	struct:__anon51
vsiDescend	.\src\Colours.c	/^static const RGBColorType vsiDescend = {0, 167, 97, 43 };$/;"	v	file:
vsiDescend	.\src\GlobalTypes.h	/^	IndexedColorType vsiDescend;$/;"	m	struct:__anon51
waas	.\src\Gps.h	/^	Boolean waas;$/;"	m	struct:__anon68
waitGoto	.\src\MapForm.c	/^static enum { initWait, waitGoto, waitNoGoto, simpleWait } tapPlanState = initWait;$/;"	e	enum:__anon77	file:
waitNoGoto	.\src\MapForm.c	/^static enum { initWait, waitGoto, waitNoGoto, simpleWait } tapPlanState = initWait;$/;"	e	enum:__anon77	file:
waiting	.\src\DiversionForm.c	/^static enum { disabled, starting, scanning, waiting } scanState = disabled;$/;"	e	enum:__anon35	file:
warning	.\src\Colours.c	/^static const RGBColorType warning= { 0, 200, 0, 0};$/;"	v	file:
warning	.\src\GlobalTypes.h	/^	IndexedColorType warning;$/;"	m	struct:__anon51
waypoint	.\src\CpInterface.c	/^	CpLegWaypoint waypoint[2];$/;"	m	struct:__anon28	file:
waypoint	.\src\MapManager.h	/^	} waypoint;$/;"	m	struct:MapSelectionStructType	typeref:struct:MapSelectionStructType::__anon91
waypointHash	.\src\MapManager.c	/^static UInt8 waypointHash[HASH_SIZE];$/;"	v	file:
waypointID	.\src\WPInfoDialog.c	/^static WaypointIDType waypointID;$/;"	v	file:
waypointNum	.\src\MapForm.c	/^	Int16 waypointNum;$/;"	m	struct:__anon78	file:
waypoints	.\src\DiversionForm.c	/^	ProxWaypointType waypoints[MAX_PROXWAYPOINTS];$/;"	m	struct:__anon33	file:
wb	.\src\CpInterface.c	/^	UInt32 wb;$/;"	m	struct:__anon25	file:
wbRecord	.\src\CpInterface.c	/^typedef enum {noType, flightRecord=321, routeRecord, wbRecord, planRecord }$/;"	e	enum:__anon21	file:
wdmAll	.\src\WDManager.h	15;"	d
wdmDatabaseMask	.\src\WDManager.c	/^static const WaypointIDType    wdmDatabaseMask = 0xFFFF0000;$/;"	v	file:
wdmNotFound	.\src\WDManager.h	14;"	d
wdmSysTempDB	.\src\WDManager.h	17;"	d
wdmTempDB	.\src\WDManager.h	16;"	d
wdmWaypointMask	.\src\WDManager.c	/^static const WaypointIDType    wdmWaypointMask = 0x0000FFFF;$/;"	v	file:
weightUnits	.\src\CpInterface.c	/^	UInt16 weightUnits;                 \/\/ {lb, kg}$/;"	m	struct:__anon30	file:
west	.\src\CpInterface.c	/^typedef enum {north, west, south, east, noIntersection }Quadrant;$/;"	e	enum:__anon23	file:
white	.\src\Colours.c	/^static const RGBColorType white        = { 0, 255,255,255};$/;"	v	file:
white	.\src\GlobalTypes.h	/^	IndexedColorType white;$/;"	m	struct:__anon51
width	.\src\CpInterface.h	/^	UInt16 width;$/;"	m	struct:__anon31
width	.\src\GlobalTypes.h	/^	Coord width, pixelWidth;$/;"	m	struct:__anon52
width	.\src\Instruments.c	/^	Coord x, y, width, height; \/\/ y is centre of VSI, height is 1\/2 height$/;"	m	struct:VSITypeStruct	file:
width	.\src\Instruments.c	/^	Coord x,y, width, height;	\/\/ y is centre of GSI, height is 1\/2 height$/;"	m	struct:GSITypeStruct	file:
width	.\src\TerrainCore.h	/^	Int32 width;$/;"	m	struct:TerrainCoreParamType
widthFP8	.\src\TerrainCore.h	/^	Int32 widthFP8; $/;"	m	struct:TerrainCoreParamType
widthOverHeightFP8	.\src\TerrainCore.h	/^	Int32 widthOverHeightFP8;$/;"	m	struct:TerrainCoreParamType
windDirection	.\src\CpInterface.c	/^	Int16      windDirection;$/;"	m	struct:__anon28	file:
windSpeed	.\src\CpInterface.c	/^	double     windSpeed;$/;"	m	struct:__anon28	file:
windowTitle	.\src\KeypadDialog.c	/^static const char *windowTitle;$/;"	v	file:
wmm_coff	.\src\AvCalcs.c	/^static CoffData wmm_coff[] = { $/;"	v	file:
wmm_coff	.\src\MagVarn.c	/^static CoffData wmm_coff[] = { $/;"	v	file:
wp0	.\src\OBSManager.c	/^static Waypoint *wp0, *wp1;$/;"	v	file:
wp1	.\src\OBSManager.c	/^static Waypoint *wp0, *wp1;$/;"	v	file:
wpAirfield	.\src\WDManager.h	/^	wpAirfield = 0x10,$/;"	e	enum:__anon108
wpAllAirfields	.\src\WDManager.h	/^	wpAllAirfields = (wpAirfield | wpLargeAirfield),$/;"	e	enum:__anon108
wpAny	.\src\WDManager.h	/^	wpAny      = 0xFFF0,$/;"	e	enum:__anon108
wpAnyObstacle	.\src\WDManager.h	/^	wpAnyObstacle = 0x4000,$/;"	e	enum:__anon108
wpClassMask	.\src\WDManager.h	/^	wpClassMask = 0xFFF0, $/;"	e	enum:__anon108
wpDME	.\src\WDManager.h	/^	wpDME      = 0x42,$/;"	e	enum:__anon108
wpDisused	.\src\WDManager.h	/^	wpDisused 	= 0x001A,$/;"	e	enum:__anon108
wpGlider	.\src\WDManager.h	/^	wpGlider  	= 0x001C,$/;"	e	enum:__anon108
wpHangGlider	.\src\WDManager.h	/^	wpHangGlider   = 0x8003,$/;"	e	enum:__anon108
wpId	.\src\WDManager.h	/^	WaypointIDType wpId;		\/\/ use to get 'full' waypoint$/;"	m	struct:__anon110
wpInfoDialogMapping	.\src\Main.c	/^static const FunctionKeymapType wpInfoDialogMapping[] = {$/;"	v	file:
wpIntersection	.\src\WDManager.h	/^	wpIntersection = 0x100,$/;"	e	enum:__anon108
wpLabels	.\src\MapManager.c	/^	WaypointClassType wpTypes, wpLabels;$/;"	m	struct:MapTypeStruct	file:
wpLargeAirfield	.\src\WDManager.h	/^	wpLargeAirfield= 0x20,$/;"	e	enum:__anon108
wpLightObstacle	.\src\WDManager.h	/^	wpLightObstacle=0x4003,$/;"	e	enum:__anon108
wpLightObstacles	.\src\WDManager.h	/^	wpLightObstacles = 0x4004,$/;"	e	enum:__anon108
wpMarker	.\src\WDManager.h	/^	wpMarker       = 0x8005,$/;"	e	enum:__anon108
wpMicrolight	.\src\WDManager.h	/^	wpMicrolight	= 0x001B,$/;"	e	enum:__anon108
wpNDB	.\src\WDManager.h	/^	wpNDB      = 0x80,$/;"	e	enum:__anon108
wpNDBDME	.\src\WDManager.h	/^	wpNDBDME   = 0x81,$/;"	e	enum:__anon108
wpNotFound	.\src\WDManager.h	28;"	d
wpObstacle	.\src\WDManager.h	/^	wpObstacle = 0x4001,$/;"	e	enum:__anon108
wpObstacles	.\src\WDManager.h	/^	wpObstacles= 0x4002,$/;"	e	enum:__anon108
wpOther	.\src\WDManager.h	/^	wpOther        = 0x8000,$/;"	e	enum:__anon108
wpParachute	.\src\WDManager.h	/^	wpParachute    = 0x8004,$/;"	e	enum:__anon108
wpSubClassMask	.\src\WDManager.h	/^	wpSubClassMask = 0xF$/;"	e	enum:__anon108
wpTACAN	.\src\WDManager.h	/^	wpTACAN    = 0x43,$/;"	e	enum:__anon108
wpTown	.\src\WDManager.h	/^	wpTown         = 0x8001,$/;"	e	enum:__anon108
wpType	.\src\CpInterface.c	/^	CpWaypointType wpType;$/;"	m	struct:__anon27	file:
wpType	.\src\WDManager.c	/^	WaypointClassType wpType;$/;"	m	struct:WDMSearchStructType	file:
wpTypes	.\src\MapManager.c	/^	WaypointClassType wpTypes, wpLabels;$/;"	m	struct:MapTypeStruct	file:
wpVOR	.\src\WDManager.h	/^	wpVOR      = 0x40,$/;"	e	enum:__anon108
wpVORDME	.\src\WDManager.h	/^	wpVORDME   = 0x41,$/;"	e	enum:__anon108
wpVORTAC	.\src\WDManager.h	/^	wpVORTAC   = 0x43,$/;"	e	enum:__anon108
wpVRP	.\src\WDManager.h	/^	wpVRP          = 0x8002,$/;"	e	enum:__anon108
x	.\src\HeadingIndicator.c	/^	Coord x,y;		\/\/ centre of HSI$/;"	m	struct:HSITypeStruct	file:
x	.\src\Instruments.c	/^	Coord x, y, width, height; \/\/ y is centre of VSI, height is 1\/2 height$/;"	m	struct:VSITypeStruct	file:
x	.\src\Instruments.c	/^	Coord x,y, width, height;	\/\/ y is centre of GSI, height is 1\/2 height$/;"	m	struct:GSITypeStruct	file:
x	.\src\MapIcon.h	/^	Coord x;$/;"	m	struct:__anon81
x	.\src\Polygon.c	/^	FP14 x;$/;"	m	struct:__anon99	file:
x	.\src\Polygon.h	/^	FP14 x, y;$/;"	m	struct:__anon100
xcentre	.\src\GlobalTypes.h	/^	Coord xcentre;$/;"	m	struct:__anon52
y	.\src\HeadingIndicator.c	/^	Coord x,y;		\/\/ centre of HSI$/;"	m	struct:HSITypeStruct	file:
y	.\src\Instruments.c	/^	Coord x, y, width, height; \/\/ y is centre of VSI, height is 1\/2 height$/;"	m	struct:VSITypeStruct	file:
y	.\src\Instruments.c	/^	Coord x,y, width, height;	\/\/ y is centre of GSI, height is 1\/2 height$/;"	m	struct:GSITypeStruct	file:
y	.\src\MapIcon.h	/^	Coord y;$/;"	m	struct:__anon81
y	.\src\Polygon.h	/^	FP14 x, y;$/;"	m	struct:__anon100
ycentre	.\src\GlobalTypes.h	/^	Coord ycentre;$/;"	m	struct:__anon52
year	.\src\Gps.h	/^	UInt16 year;$/;"	m	struct:__anon66
yellow	.\src\Colours.c	/^static const RGBColorType yellow  = { 0, 249, 160, 7 };$/;"	v	file:
yellow	.\src\GlobalTypes.h	/^	IndexedColorType yellow;$/;"	m	struct:__anon51
zoomLevel	.\src\MainForm.c	/^static Int16 zoomLevel = 2;$/;"	v	file:
